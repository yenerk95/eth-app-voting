{"ast":null,"code":"'use strict';\n\nconst WantlistEntry = require('../wantlist').Entry;\n\nmodule.exports = class BitswapMessageEntry {\n  constructor(cid, priority, wantType, cancel, sendDontHave) {\n    this.entry = new WantlistEntry(cid, priority, wantType);\n    this.cancel = Boolean(cancel);\n    this.sendDontHave = Boolean(sendDontHave);\n  }\n\n  get cid() {\n    return this.entry.cid;\n  }\n\n  set cid(cid) {\n    this.entry.cid = cid;\n  }\n\n  get priority() {\n    return this.entry.priority;\n  }\n\n  set priority(val) {\n    this.entry.priority = val;\n  }\n\n  get wantType() {\n    return this.entry.wantType;\n  }\n\n  set wantType(val) {\n    this.entry.wantType = val;\n  }\n\n  get [Symbol.toStringTag]() {\n    const cidStr = this.cid.toString('base58btc');\n    return `BitswapMessageEntry ${cidStr} <cancel: ${this.cancel}, priority: ${this.priority}>`;\n  }\n\n  equals(other) {\n    return this.cancel === other.cancel && this.sendDontHave === other.sendDontHave && this.wantType === other.wantType && this.entry.equals(other.entry);\n  }\n\n};","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/ipfs-bitswap/src/types/message/entry.js"],"names":["WantlistEntry","require","Entry","module","exports","BitswapMessageEntry","constructor","cid","priority","wantType","cancel","sendDontHave","entry","Boolean","val","Symbol","toStringTag","cidStr","toString","equals","other"],"mappings":"AAAA;;AAEA,MAAMA,aAAa,GAAGC,OAAO,CAAC,aAAD,CAAP,CAAuBC,KAA7C;;AAEAC,MAAM,CAACC,OAAP,GAAiB,MAAMC,mBAAN,CAA0B;AACzCC,EAAAA,WAAW,CAAEC,GAAF,EAAOC,QAAP,EAAiBC,QAAjB,EAA2BC,MAA3B,EAAmCC,YAAnC,EAAiD;AAC1D,SAAKC,KAAL,GAAa,IAAIZ,aAAJ,CAAkBO,GAAlB,EAAuBC,QAAvB,EAAiCC,QAAjC,CAAb;AACA,SAAKC,MAAL,GAAcG,OAAO,CAACH,MAAD,CAArB;AACA,SAAKC,YAAL,GAAoBE,OAAO,CAACF,YAAD,CAA3B;AACD;;AAED,MAAIJ,GAAJ,GAAW;AACT,WAAO,KAAKK,KAAL,CAAWL,GAAlB;AACD;;AAED,MAAIA,GAAJ,CAASA,GAAT,EAAc;AACZ,SAAKK,KAAL,CAAWL,GAAX,GAAiBA,GAAjB;AACD;;AAED,MAAIC,QAAJ,GAAgB;AACd,WAAO,KAAKI,KAAL,CAAWJ,QAAlB;AACD;;AAED,MAAIA,QAAJ,CAAcM,GAAd,EAAmB;AACjB,SAAKF,KAAL,CAAWJ,QAAX,GAAsBM,GAAtB;AACD;;AAED,MAAIL,QAAJ,GAAgB;AACd,WAAO,KAAKG,KAAL,CAAWH,QAAlB;AACD;;AAED,MAAIA,QAAJ,CAAcK,GAAd,EAAmB;AACjB,SAAKF,KAAL,CAAWH,QAAX,GAAsBK,GAAtB;AACD;;AAED,OAAKC,MAAM,CAACC,WAAZ,IAA4B;AAC1B,UAAMC,MAAM,GAAG,KAAKV,GAAL,CAASW,QAAT,CAAkB,WAAlB,CAAf;AACA,WAAQ,uBAAsBD,MAAO,aAAY,KAAKP,MAAO,eAAc,KAAKF,QAAS,GAAzF;AACD;;AAEDW,EAAAA,MAAM,CAAEC,KAAF,EAAS;AACb,WAAQ,KAAKV,MAAL,KAAgBU,KAAK,CAACV,MAAvB,IACC,KAAKC,YAAL,KAAsBS,KAAK,CAACT,YAD7B,IAEC,KAAKF,QAAL,KAAkBW,KAAK,CAACX,QAFzB,IAGA,KAAKG,KAAL,CAAWO,MAAX,CAAkBC,KAAK,CAACR,KAAxB,CAHP;AAID;;AAzCwC,CAA3C","sourcesContent":["'use strict'\n\nconst WantlistEntry = require('../wantlist').Entry\n\nmodule.exports = class BitswapMessageEntry {\n  constructor (cid, priority, wantType, cancel, sendDontHave) {\n    this.entry = new WantlistEntry(cid, priority, wantType)\n    this.cancel = Boolean(cancel)\n    this.sendDontHave = Boolean(sendDontHave)\n  }\n\n  get cid () {\n    return this.entry.cid\n  }\n\n  set cid (cid) {\n    this.entry.cid = cid\n  }\n\n  get priority () {\n    return this.entry.priority\n  }\n\n  set priority (val) {\n    this.entry.priority = val\n  }\n\n  get wantType () {\n    return this.entry.wantType\n  }\n\n  set wantType (val) {\n    this.entry.wantType = val\n  }\n\n  get [Symbol.toStringTag] () {\n    const cidStr = this.cid.toString('base58btc')\n    return `BitswapMessageEntry ${cidStr} <cancel: ${this.cancel}, priority: ${this.priority}>`\n  }\n\n  equals (other) {\n    return (this.cancel === other.cancel) &&\n           (this.sendDontHave === other.sendDontHave) &&\n           (this.wantType === other.wantType) &&\n           this.entry.equals(other.entry)\n  }\n}\n"]},"metadata":{},"sourceType":"script"}