{"ast":null,"code":"/**\n * Created by schwarzkopfb on 15/11/17.\n */\n\n/**\n * FNV-1a hash generation init value.\n * It's exposed, because this allows user to override it.\n *\n * @type {number}\n */\nhash.BASE = 0x811c9dc5;\n/**\n * Generates 32 bit FNV-1a hash from the given string.\n * As explained here: http://isthe.com/chongo/tech/comp/fnv/\n *\n * @param s {string} String to generate hash from.\n * @returns {number} The result integer hash.\n */\n\nfunction hash(s) {\n  var h = hash.BASE;\n\n  for (var i = 0, l = s.length; i < l; i++) {\n    h ^= s.charCodeAt(i);\n    h += (h << 1) + (h << 4) + (h << 7) + (h << 8) + (h << 24);\n  }\n\n  return h >>> 0;\n}\n\nmodule.exports = hash;","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/fnv1a/index.js"],"names":["hash","BASE","s","h","i","l","length","charCodeAt","module","exports"],"mappings":"AAAA;;;;AAIA;;;;;;AAMAA,IAAI,CAACC,IAAL,GAAY,UAAZ;AAEA;;;;;;;;AAOA,SAASD,IAAT,CAAcE,CAAd,EAAiB;AACb,MAAIC,CAAC,GAAGH,IAAI,CAACC,IAAb;;AAEA,OAAK,IAAIG,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGH,CAAC,CAACI,MAAtB,EAA8BF,CAAC,GAAGC,CAAlC,EAAqCD,CAAC,EAAtC,EAA0C;AACtCD,IAAAA,CAAC,IAAID,CAAC,CAACK,UAAF,CAAaH,CAAb,CAAL;AACAD,IAAAA,CAAC,IAAI,CAACA,CAAC,IAAI,CAAN,KAAYA,CAAC,IAAI,CAAjB,KAAuBA,CAAC,IAAI,CAA5B,KAAkCA,CAAC,IAAI,CAAvC,KAA6CA,CAAC,IAAI,EAAlD,CAAL;AACH;;AAED,SAAOA,CAAC,KAAK,CAAb;AACH;;AAEDK,MAAM,CAACC,OAAP,GAAiBT,IAAjB","sourcesContent":["/**\n * Created by schwarzkopfb on 15/11/17.\n */\n\n/**\n * FNV-1a hash generation init value.\n * It's exposed, because this allows user to override it.\n *\n * @type {number}\n */\nhash.BASE = 0x811c9dc5\n\n/**\n * Generates 32 bit FNV-1a hash from the given string.\n * As explained here: http://isthe.com/chongo/tech/comp/fnv/\n *\n * @param s {string} String to generate hash from.\n * @returns {number} The result integer hash.\n */\nfunction hash(s) {\n    var h = hash.BASE\n\n    for (var i = 0, l = s.length; i < l; i++) {\n        h ^= s.charCodeAt(i)\n        h += (h << 1) + (h << 4) + (h << 7) + (h << 8) + (h << 24)\n    }\n\n    return h >>> 0\n}\n\nmodule.exports = hash\n"]},"metadata":{},"sourceType":"script"}