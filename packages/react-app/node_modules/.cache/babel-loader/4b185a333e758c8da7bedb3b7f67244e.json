{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar CID = require('cids');\n\nvar errCode = require('err-code');\n\nvar _require = require('../../utils'),\n    withTimeoutOption = _require.withTimeoutOption;\n\nmodule.exports = function (_ref) {\n  var bitswap = _ref.bitswap;\n  return withTimeoutOption( /*#__PURE__*/function () {\n    var _unwant = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(keys, options) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // eslint-disable-line require-await\n              if (!Array.isArray(keys)) {\n                keys = [keys];\n              }\n\n              _context.prev = 1;\n              keys = keys.map(function (key) {\n                return new CID(key);\n              });\n              _context.next = 8;\n              break;\n\n            case 5:\n              _context.prev = 5;\n              _context.t0 = _context[\"catch\"](1);\n              throw errCode(_context.t0, 'ERR_INVALID_CID');\n\n            case 8:\n              return _context.abrupt(\"return\", bitswap.unwant(keys, options));\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 5]]);\n    }));\n\n    function unwant(_x, _x2) {\n      return _unwant.apply(this, arguments);\n    }\n\n    return unwant;\n  }());\n};","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/ipfs/src/core/components/bitswap/unwant.js"],"names":["CID","require","errCode","withTimeoutOption","module","exports","bitswap","keys","options","Array","isArray","map","key","unwant"],"mappings":"AAAA;;;;;;AAEA,IAAMA,GAAG,GAAGC,OAAO,CAAC,MAAD,CAAnB;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,UAAD,CAAvB;;eAC8BA,OAAO,CAAC,aAAD,C;IAA7BE,iB,YAAAA,iB;;AAERC,MAAM,CAACC,OAAP,GAAiB,gBAAiB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AAChC,SAAOH,iBAAiB;AAAA,2EAAC,iBAAuBI,IAAvB,EAA6BC,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAwC;AAC/D,kBAAI,CAACC,KAAK,CAACC,OAAN,CAAcH,IAAd,CAAL,EAA0B;AACxBA,gBAAAA,IAAI,GAAG,CAACA,IAAD,CAAP;AACD;;AAHsB;AAMrBA,cAAAA,IAAI,GAAGA,IAAI,CAACI,GAAL,CAAS,UAACC,GAAD;AAAA,uBAAS,IAAIZ,GAAJ,CAAQY,GAAR,CAAT;AAAA,eAAT,CAAP;AANqB;AAAA;;AAAA;AAAA;AAAA;AAAA,oBAQfV,OAAO,cAAM,iBAAN,CARQ;;AAAA;AAAA,+CAWhBI,OAAO,CAACO,MAAR,CAAeN,IAAf,EAAqBC,OAArB,CAXgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA,aAAgBK,MAAhB;AAAA;AAAA;;AAAA,WAAgBA,MAAhB;AAAA,MAAxB;AAaD,CAdD","sourcesContent":["'use strict'\n\nconst CID = require('cids')\nconst errCode = require('err-code')\nconst { withTimeoutOption } = require('../../utils')\n\nmodule.exports = ({ bitswap }) => {\n  return withTimeoutOption(async function unwant (keys, options) { // eslint-disable-line require-await\n    if (!Array.isArray(keys)) {\n      keys = [keys]\n    }\n\n    try {\n      keys = keys.map((key) => new CID(key))\n    } catch (err) {\n      throw errCode(err, 'ERR_INVALID_CID')\n    }\n\n    return bitswap.unwant(keys, options)\n  })\n}\n"]},"metadata":{},"sourceType":"script"}