{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar WantlistEntry = require('../wantlist').Entry;\n\nmodule.exports = /*#__PURE__*/function () {\n  function BitswapMessageEntry(cid, priority, wantType, cancel, sendDontHave) {\n    _classCallCheck(this, BitswapMessageEntry);\n\n    this.entry = new WantlistEntry(cid, priority, wantType);\n    this.cancel = Boolean(cancel);\n    this.sendDontHave = Boolean(sendDontHave);\n  }\n\n  _createClass(BitswapMessageEntry, [{\n    key: \"equals\",\n    value: function equals(other) {\n      return this.cancel === other.cancel && this.sendDontHave === other.sendDontHave && this.wantType === other.wantType && this.entry.equals(other.entry);\n    }\n  }, {\n    key: \"cid\",\n    get: function get() {\n      return this.entry.cid;\n    },\n    set: function set(cid) {\n      this.entry.cid = cid;\n    }\n  }, {\n    key: \"priority\",\n    get: function get() {\n      return this.entry.priority;\n    },\n    set: function set(val) {\n      this.entry.priority = val;\n    }\n  }, {\n    key: \"wantType\",\n    get: function get() {\n      return this.entry.wantType;\n    },\n    set: function set(val) {\n      this.entry.wantType = val;\n    }\n  }, {\n    key: Symbol.toStringTag,\n    get: function get() {\n      var cidStr = this.cid.toString('base58btc');\n      return \"BitswapMessageEntry \".concat(cidStr, \" <cancel: \").concat(this.cancel, \", priority: \").concat(this.priority, \">\");\n    }\n  }]);\n\n  return BitswapMessageEntry;\n}();","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/ipfs-bitswap/src/types/message/entry.js"],"names":["WantlistEntry","require","Entry","module","exports","cid","priority","wantType","cancel","sendDontHave","entry","Boolean","other","equals","val","Symbol","toStringTag","cidStr","toString"],"mappings":"AAAA;;;;;;AAEA,IAAMA,aAAa,GAAGC,OAAO,CAAC,aAAD,CAAP,CAAuBC,KAA7C;;AAEAC,MAAM,CAACC,OAAP;AACE,+BAAaC,GAAb,EAAkBC,QAAlB,EAA4BC,QAA5B,EAAsCC,MAAtC,EAA8CC,YAA9C,EAA4D;AAAA;;AAC1D,SAAKC,KAAL,GAAa,IAAIV,aAAJ,CAAkBK,GAAlB,EAAuBC,QAAvB,EAAiCC,QAAjC,CAAb;AACA,SAAKC,MAAL,GAAcG,OAAO,CAACH,MAAD,CAArB;AACA,SAAKC,YAAL,GAAoBE,OAAO,CAACF,YAAD,CAA3B;AACD;;AALH;AAAA;AAAA,2BAoCUG,KApCV,EAoCiB;AACb,aAAQ,KAAKJ,MAAL,KAAgBI,KAAK,CAACJ,MAAvB,IACC,KAAKC,YAAL,KAAsBG,KAAK,CAACH,YAD7B,IAEC,KAAKF,QAAL,KAAkBK,KAAK,CAACL,QAFzB,IAGA,KAAKG,KAAL,CAAWG,MAAX,CAAkBD,KAAK,CAACF,KAAxB,CAHP;AAID;AAzCH;AAAA;AAAA,wBAOa;AACT,aAAO,KAAKA,KAAL,CAAWL,GAAlB;AACD,KATH;AAAA,sBAWWA,GAXX,EAWgB;AACZ,WAAKK,KAAL,CAAWL,GAAX,GAAiBA,GAAjB;AACD;AAbH;AAAA;AAAA,wBAekB;AACd,aAAO,KAAKK,KAAL,CAAWJ,QAAlB;AACD,KAjBH;AAAA,sBAmBgBQ,GAnBhB,EAmBqB;AACjB,WAAKJ,KAAL,CAAWJ,QAAX,GAAsBQ,GAAtB;AACD;AArBH;AAAA;AAAA,wBAuBkB;AACd,aAAO,KAAKJ,KAAL,CAAWH,QAAlB;AACD,KAzBH;AAAA,sBA2BgBO,GA3BhB,EA2BqB;AACjB,WAAKJ,KAAL,CAAWH,QAAX,GAAsBO,GAAtB;AACD;AA7BH;AAAA,SA+BOC,MAAM,CAACC,WA/Bd;AAAA,wBA+B8B;AAC1B,UAAMC,MAAM,GAAG,KAAKZ,GAAL,CAASa,QAAT,CAAkB,WAAlB,CAAf;AACA,2CAA8BD,MAA9B,uBAAiD,KAAKT,MAAtD,yBAA2E,KAAKF,QAAhF;AACD;AAlCH;;AAAA;AAAA","sourcesContent":["'use strict'\n\nconst WantlistEntry = require('../wantlist').Entry\n\nmodule.exports = class BitswapMessageEntry {\n  constructor (cid, priority, wantType, cancel, sendDontHave) {\n    this.entry = new WantlistEntry(cid, priority, wantType)\n    this.cancel = Boolean(cancel)\n    this.sendDontHave = Boolean(sendDontHave)\n  }\n\n  get cid () {\n    return this.entry.cid\n  }\n\n  set cid (cid) {\n    this.entry.cid = cid\n  }\n\n  get priority () {\n    return this.entry.priority\n  }\n\n  set priority (val) {\n    this.entry.priority = val\n  }\n\n  get wantType () {\n    return this.entry.wantType\n  }\n\n  set wantType (val) {\n    this.entry.wantType = val\n  }\n\n  get [Symbol.toStringTag] () {\n    const cidStr = this.cid.toString('base58btc')\n    return `BitswapMessageEntry ${cidStr} <cancel: ${this.cancel}, priority: ${this.priority}>`\n  }\n\n  equals (other) {\n    return (this.cancel === other.cancel) &&\n           (this.sendDontHave === other.sendDontHave) &&\n           (this.wantType === other.wantType) &&\n           this.entry.equals(other.entry)\n  }\n}\n"]},"metadata":{},"sourceType":"script"}