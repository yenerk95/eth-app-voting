{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _require = require('./utils'),\n    cleanCid = _require.cleanCid;\n\nvar _require2 = require('../../utils'),\n    withTimeoutOption = _require2.withTimeoutOption;\n\nmodule.exports = function (_ref) {\n  var blockService = _ref.blockService,\n      preload = _ref.preload;\n  return withTimeoutOption( /*#__PURE__*/function () {\n    var _get = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(cid, options) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // eslint-disable-line require-await\n              options = options || {};\n              cid = cleanCid(cid);\n\n              if (options.preload !== false) {\n                preload(cid);\n              }\n\n              return _context.abrupt(\"return\", blockService.get(cid, options));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function get(_x, _x2) {\n      return _get.apply(this, arguments);\n    }\n\n    return get;\n  }());\n};","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/ipfs/src/core/components/block/get.js"],"names":["require","cleanCid","withTimeoutOption","module","exports","blockService","preload","cid","options","get"],"mappings":"AAAA;;;;;;eAEqBA,OAAO,CAAC,SAAD,C;IAApBC,Q,YAAAA,Q;;gBACsBD,OAAO,CAAC,aAAD,C;IAA7BE,iB,aAAAA,iB;;AAERC,MAAM,CAACC,OAAP,GAAiB,gBAA+B;AAAA,MAA5BC,YAA4B,QAA5BA,YAA4B;AAAA,MAAdC,OAAc,QAAdA,OAAc;AAC9C,SAAOJ,iBAAiB;AAAA,wEAAC,iBAAoBK,GAApB,EAAyBC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAoC;AAC3DA,cAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACAD,cAAAA,GAAG,GAAGN,QAAQ,CAACM,GAAD,CAAd;;AAEA,kBAAIC,OAAO,CAACF,OAAR,KAAoB,KAAxB,EAA+B;AAC7BA,gBAAAA,OAAO,CAACC,GAAD,CAAP;AACD;;AANsB,+CAQhBF,YAAY,CAACI,GAAb,CAAiBF,GAAjB,EAAsBC,OAAtB,CARgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA,aAAgBC,GAAhB;AAAA;AAAA;;AAAA,WAAgBA,GAAhB;AAAA,MAAxB;AAUD,CAXD","sourcesContent":["'use strict'\n\nconst { cleanCid } = require('./utils')\nconst { withTimeoutOption } = require('../../utils')\n\nmodule.exports = ({ blockService, preload }) => {\n  return withTimeoutOption(async function get (cid, options) { // eslint-disable-line require-await\n    options = options || {}\n    cid = cleanCid(cid)\n\n    if (options.preload !== false) {\n      preload(cid)\n    }\n\n    return blockService.get(cid, options)\n  })\n}\n"]},"metadata":{},"sourceType":"script"}