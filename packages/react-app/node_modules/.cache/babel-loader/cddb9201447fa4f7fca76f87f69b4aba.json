{"ast":null,"code":"var _jsxFileName = \"/Users/yenerkaraca/Documents/GitHub/eth-app/packages/react-app/src/App.js\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { ethers } from \"ethers\";\nimport IPFS from \"ipfs\";\nimport logo from \"./ethereumLogo.png\";\nimport { addresses, abis } from \"@project/contracts\";\nimport \"./App.css\";\nconst ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\nlet node;\nconst defaultProvider = new ethers.providers.Web3Provider(window.ethereum);\nconst ipfsContract = new ethers.Contract(addresses.ipfs, abis.ipfs, defaultProvider);\nvar storageContract;\nconsole.log(addresses.ipfs);\n\nasync function initIpfs() {\n  node = await IPFS.create();\n  const version = await node.version();\n  console.log(\"IPFS Node Version:\", version.version);\n}\n\nasync function readCurrentUserFile() {\n  const result = await ipfsContract.userFiles(defaultProvider.getSigner().getAddress());\n  console.log({\n    result\n  });\n  const accounts = await window.ethereum.request({\n    method: 'eth_requestAccounts'\n  });\n  const account = accounts[0]; //metamask current account\n\n  return result;\n}\n\nasync function getaccount() {\n  const accounts = await window.ethereum.request({\n    method: 'eth_requestAccounts'\n  });\n  Object.values(accounts);\n  const account = JSON.stringify(accounts[0]);\n  console.log(\"FUNC\");\n  console.log({\n    account\n  });\n  return account;\n}\n\nfunction App() {\n  const [ipfsHash, setIpfsHash] = useState(\"\");\n  useEffect(() => {\n    initIpfs();\n    window.ethereum.enable();\n  }, []);\n  useEffect(() => {\n    async function readFile() {\n      const file = await readCurrentUserFile();\n      if (file !== ZERO_ADDRESS) setIpfsHash(file);\n    }\n\n    readFile();\n  }, []);\n  const [accountHash, setAccountHash] = useState(\"\");\n  useEffect(() => {\n    window.ethereum.enable();\n  }, []);\n  useEffect(() => {\n    async function readFile() {\n      const file1 = await getaccount();\n      if (file1 !== ZERO_ADDRESS) setAccountHash(file1);\n    }\n\n    readFile();\n  }, []);\n\n  async function setFile(hash) {\n    const ipfsWithSigner = ipfsContract.connect(defaultProvider.getSigner());\n    const tx = await ipfsWithSigner.setFile(hash);\n    console.log({\n      tx\n    });\n    setIpfsHash(hash);\n    ipfsWithSigner.store(hash);\n  }\n\n  function SetContract() {\n    storageContract = new ethers.Contract(itemInput2, abis.storage, defaultProvider);\n    console.log(itemInput2);\n    console.log(abis.storage);\n    console.log(storageContract);\n    return storageContract;\n  }\n\n  async function Buyer() {\n    console.log(storageContract);\n    const storageWithSigner = storageContract.connect(defaultProvider.getSigner());\n\n    try {\n      await storageWithSigner.buyerUpload(ipfsHash, itemInput);\n    } catch (err) {\n      console.log(err.message);\n      document.getElementById(\"text-box\").innerHTML = err.message;\n    }\n  }\n\n  async function Seller() {\n    console.log(storageContract);\n    const storageWithSigner = storageContract.connect(defaultProvider.getSigner());\n\n    try {\n      await storageWithSigner.sellerUpload(ipfsHash);\n    } catch (err) {\n      console.log(err.message);\n      document.getElementById(\"text-box\").innerHTML = err.message;\n    }\n  }\n\n  async function Set() {\n    console.log(storageContract);\n    const storageWithSigner = storageContract.connect(defaultProvider.getSigner());\n\n    try {\n      await storageWithSigner.SetEndTime(itemInput);\n    } catch (err) {\n      console.log(err.message);\n      document.getElementById(\"text-box\").innerHTML = err.message;\n    }\n  }\n\n  async function Extend() {\n    console.log(storageContract);\n    const storageWithSigner = storageContract.connect(defaultProvider.getSigner());\n\n    try {\n      await storageWithSigner.ExtendTime(itemInput1);\n    } catch (err) {\n      console.log(err.message);\n      document.getElementById(\"text-box\").innerHTML = err.message;\n    }\n  }\n\n  async function status() {\n    var status_array = [\"ON\", \"BUYER_UPLOADED\", \"SELLER_UPLOADED\", \"DOC_OK\", \"DOC_DEFECT\", \"DOC_REJECTED\"];\n    console.log(storageContract);\n    const storageWithSigner = storageContract.connect(defaultProvider.getSigner());\n\n    try {\n      var statust = await storageWithSigner.getStatus();\n      document.getElementById(\"text-box1\").innerHTML = status_array[statust];\n      return;\n    } catch (err) {\n      console.log(err.message);\n      document.getElementById(\"text-box\").innerHTML = err.message;\n    }\n  }\n\n  console.log(ipfsHash);\n  const uploadFile = useCallback(async file => {\n    const files = [{\n      path: file.name + file.path,\n      content: file\n    }];\n\n    for await (const result of node.add(files)) {\n      await setFile(result.cid.string);\n    }\n  }, []);\n  const onDrop = useCallback(acceptedFiles => {\n    uploadFile(acceptedFiles[0]);\n  }, [uploadFile]);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    multiple: false,\n    onDrop\n  });\n  const [itemInput, setItemInput] = useState(\"\");\n  console.log(itemInput);\n  const [itemInput1, setItemInput1] = useState(\"\");\n  console.log(itemInput1);\n  const [itemInput2, setItemInput2] = useState(\"\");\n  console.log(itemInput2);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"text-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }\n  }, \"Smart Contract:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Contract Hash\",\n    value: itemInput2,\n    onChange: e => setItemInput2(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: SetContract,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 11\n    }\n  }, \"Fintech Set\")), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 10\n    }\n  }, \"Get Current Status\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"text-box1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps(), {\n    style: {\n      cursor: \"pointer\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    className: \"App-logo\",\n    alt: \"react-logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 11\n    }\n  })), isDragActive ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }\n  }, \"Drop the files here ...\") : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 13\n    }\n  }, \"Drag 'n' drop some files here to upload to IPFS (or click the logo)\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 9\n    }\n  }, ipfsHash !== \"\" ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }\n  }, \"IPFS Hash: \", /*#__PURE__*/React.createElement(\"mark\", {\n    className: \"mark-red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 27\n    }\n  }, \"\\\"\", ipfsHash, \"\\\"\")) : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 9\n    }\n  }, \"Current User Hash:\", /*#__PURE__*/React.createElement(\"mark\", {\n    className: \"mark-yellow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 32\n    }\n  }, accountHash)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 9\n    }\n  }, ipfsHash !== \"\" ? /*#__PURE__*/React.createElement(\"a\", {\n    href: `https://ipfs.io/ipfs/${ipfsHash}`,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 13\n    }\n  }, \"See current user file\") : \"No user file set yet\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 9\n    }\n  }, \"Buyer Sets Time and Uploads to The Smart Contract:  \", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter Time\",\n    value: itemInput,\n    onChange: e => setItemInput(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 62\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: Buyer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 171\n    }\n  }, \"Buyer Upload\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 9\n    }\n  }, \"Buyer Extends Time:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter an item\",\n    value: itemInput1,\n    onChange: e => setItemInput1(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: Extend,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 9\n    }\n  }, \"Buyer Extend\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 10\n    }\n  }, \"Seller Uploads to The Smart Contract:   \", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: Seller,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 55\n    }\n  }, \"Seller Upload\"))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/packages/react-app/src/App.js"],"names":["React","useCallback","useEffect","useState","useDropzone","ethers","IPFS","logo","addresses","abis","ZERO_ADDRESS","node","defaultProvider","providers","Web3Provider","window","ethereum","ipfsContract","Contract","ipfs","storageContract","console","log","initIpfs","create","version","readCurrentUserFile","result","userFiles","getSigner","getAddress","accounts","request","method","account","getaccount","Object","values","JSON","stringify","App","ipfsHash","setIpfsHash","enable","readFile","file","accountHash","setAccountHash","file1","setFile","hash","ipfsWithSigner","connect","tx","store","SetContract","itemInput2","storage","Buyer","storageWithSigner","buyerUpload","itemInput","err","message","document","getElementById","innerHTML","Seller","sellerUpload","Set","SetEndTime","Extend","ExtendTime","itemInput1","status","status_array","statust","getStatus","uploadFile","files","path","name","content","add","cid","string","onDrop","acceptedFiles","getRootProps","getInputProps","isDragActive","multiple","setItemInput","setItemInput1","setItemInput2","e","target","value","cursor"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { ethers } from \"ethers\";\nimport IPFS from \"ipfs\";\n\nimport logo from \"./ethereumLogo.png\";\nimport { addresses, abis } from \"@project/contracts\";\n\nimport \"./App.css\";\n\n\n\nconst ZERO_ADDRESS =\n  \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n\nlet node;\n\nconst defaultProvider = new ethers.providers.Web3Provider(window.ethereum);\nconst ipfsContract = new ethers.Contract(\n  addresses.ipfs,\n  abis.ipfs,\n  defaultProvider\n);\nvar storageContract;\nconsole.log( addresses.ipfs);\n\nasync function initIpfs() {\n  node = await IPFS.create();\n  const version = await node.version();\n  console.log(\"IPFS Node Version:\", version.version);\n}\n\nasync function readCurrentUserFile() {\n  const result = await ipfsContract.userFiles(\n    defaultProvider.getSigner().getAddress()\n    \n  \n  );\n  console.log({ result });\n \n  const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n  const account = accounts[0];//metamask current account\n\n  \n  return result;\n}\nasync function getaccount(){\n  const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n  Object.values(accounts);\n  const account =JSON.stringify(accounts[0]);\n  console.log(\"FUNC\");\n\n  console.log({ account });\n\nreturn account\n}\n\n\n\nfunction App() {\n  const [ipfsHash, setIpfsHash] = useState(\"\");\n  useEffect(() => {\n    initIpfs();\n    window.ethereum.enable();\n  }, []);\n\n  useEffect(() => {\n    async function readFile() {\n      const file = await readCurrentUserFile();\n\n      if (file !== ZERO_ADDRESS) setIpfsHash(file);\n    }\n    readFile();\n  }, []);\n\n\n\n\n  const [accountHash, setAccountHash] = useState(\"\");\n  useEffect(() => {\n    window.ethereum.enable();\n  }, []);\n\n  useEffect(() => {\n    async function readFile() {\n      const file1 = await getaccount();\n\n      if (file1 !== ZERO_ADDRESS) setAccountHash(file1);\n    }\n    readFile();\n  }, []);\n\n\n\n\n  async function setFile(hash) {\n    const ipfsWithSigner = ipfsContract.connect(defaultProvider.getSigner());\n    const tx = await ipfsWithSigner.setFile(hash);\n    console.log({ tx });\n\n    setIpfsHash(hash);\n    \n    ipfsWithSigner.store(hash);\n\n  \n  }\n\n  function SetContract() {\n\n\n      \n    storageContract = new ethers.Contract(itemInput2, abis.storage, defaultProvider);\n\n    console.log(itemInput2);\n    console.log(abis.storage);\n    console.log(storageContract);\n    return storageContract;\n      \n    \n  \n  }\n\n\n\n\n  async function Buyer() {\n    console.log(storageContract);\n \n    const storageWithSigner = storageContract.connect(defaultProvider.getSigner());\n  \n    try {\n      await storageWithSigner.buyerUpload(ipfsHash,itemInput);\n      \n    }\n    catch(err) {\n      console.log(err.message);\n      document.getElementById(\"text-box\").innerHTML = err.message\n    }\n    \n  \n  }\n\n\n  async function Seller() {\n\n    console.log(storageContract);\n\n    const storageWithSigner = storageContract.connect(defaultProvider.getSigner());\n    \n    try {\n      await storageWithSigner.sellerUpload(ipfsHash);\n      \n    }\n    catch(err) {\n      console.log(err.message);\n      document.getElementById(\"text-box\").innerHTML = err.message\n    }\n    \n    \n\n  \n  }\n  async function Set() {\n    console.log(storageContract);\n\n    \n    const storageWithSigner = storageContract.connect(defaultProvider.getSigner());\n   \n    try {\n      await storageWithSigner.SetEndTime(itemInput);\n      \n    }\n    catch(err) {\n      console.log(err.message);\n      document.getElementById(\"text-box\").innerHTML = err.message\n    }\n\n  \n  }\n  async function Extend() {\n\n    console.log(storageContract);\n\n    const storageWithSigner = storageContract.connect(defaultProvider.getSigner());\n\n    try {\n      await storageWithSigner.ExtendTime(itemInput1);\n      \n    }\n    catch(err) {\n      console.log(err.message);\n      document.getElementById(\"text-box\").innerHTML = err.message\n    }\n    \n  \n  }\n\n\n  async function status() {\n\n    var status_array=[\"ON\", \"BUYER_UPLOADED\", \"SELLER_UPLOADED\", \"DOC_OK\", \"DOC_DEFECT\", \"DOC_REJECTED\"];\n\n    console.log(storageContract);\n\n    const storageWithSigner = storageContract.connect(defaultProvider.getSigner());\n\n    try {\n      var statust = await storageWithSigner.getStatus();\n\n      document.getElementById(\"text-box1\").innerHTML = status_array[statust]\n      return \n      \n    }\n    catch(err) {\n      console.log(err.message);\n      document.getElementById(\"text-box\").innerHTML = err.message\n    }\n    \n    \n  \n  }\n  \n  \n  console.log(ipfsHash);\n  \n\n  const uploadFile = useCallback(async (file) => {\n    const files = [\n      {\n        path: file.name + file.path,\n        content: file,\n      },\n    ];\n\n    for await (const result of node.add(files)) {\n      await setFile(result.cid.string);\n    }\n  }, []);\n\n  const onDrop = useCallback(\n    (acceptedFiles) => {\n      uploadFile(acceptedFiles[0]);\n    },\n    [uploadFile]\n  );\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    multiple: false,\n    onDrop,\n  });\n\n  const [itemInput, setItemInput] = useState(\"\");\n  console.log(itemInput);\n  const [itemInput1, setItemInput1] = useState(\"\");\n  console.log(itemInput1);\n  const [itemInput2, setItemInput2] = useState(\"\");\n  console.log(itemInput2);\n\n  \n\n\n\n\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <div id=\"text-box\"></div>\n      <div>\n          Smart Contract: \n          <input type=\"text\" placeholder=\"Contract Hash\" value={itemInput2} onChange={e => setItemInput2(e.target.value)}\n          />\n          <button onClick={SetContract}>Fintech Set</button>\n         </div>\n         <button onClick={status}>Get Current Status</button>\n         <div id=\"text-box1\"></div>\n\n        <div {...getRootProps()} style={{ cursor: \"pointer\" }}>\n          <img src={logo} className=\"App-logo\" alt=\"react-logo\" />\n          <input {...getInputProps()} />\n          {isDragActive ? (\n            <p>Drop the files here ...</p>\n          ) : (\n            <p>\n              Drag 'n' drop some files here to upload to IPFS (or click the\n              logo)\n            </p>\n          )}\n        </div>\n        \n        <div>\n          {ipfsHash !== \"\" ? (   \n            <p>IPFS Hash: <mark className=\"mark-red\">\"{ipfsHash}\"</mark></p>\n            ) : (\n              \"\"\n            )}\n        \n        </div>  \n        <div>Current User Hash:<mark className=\"mark-yellow\">{accountHash}</mark></div>\n   \n        <div>\n          {ipfsHash !== \"\" ? (\n            \n\n            <a\n            \n              href={`https://ipfs.io/ipfs/${ipfsHash}`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              See current user file \n            </a>\n          ) : (\n            \"No user file set yet\"\n          )}\n\n        </div>\n        <div>\n         Buyer Sets Time and Uploads to The Smart Contract:  <input type=\"text\" placeholder=\"Enter Time\" value={itemInput} onChange={e => setItemInput(e.target.value)}/> <button onClick={Buyer}>Buyer Upload</button>\n        </div>\n        <div></div>\n      \n\n        <div>\n        Buyer Extends Time:\n        <input type=\"text\" placeholder=\"Enter an item\" value={itemInput1} onChange={e => setItemInput1(e.target.value)}\n       \n        />\n        <button onClick={Extend}>Buyer Extend</button>\n       </div>\n         <div>Seller Uploads to The Smart Contract:   <button onClick={Seller}>Seller Upload</button></div>\n\n      </header>\n\n    </div>\n  );\n  \n}\n\nexport default App;\n\n\n"]},"metadata":{},"sourceType":"module"}