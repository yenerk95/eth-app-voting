{"ast":null,"code":"/*!\n * bn.js - big numbers for bcrypto\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on indutny/bn.js:\n *   Copyright (c) 2015, Fedor Indutny (MIT License).\n *   https://github.com/indutny/bn.js\n *\n * Parts of this software are based on golang/go:\n *   Copyright (c) 2009, The Go Authors. All rights reserved.\n *   https://github.com/golang/go\n *\n * Parts of this software are based on openssl/openssl:\n *   Copyright (c) 1998-2018, The OpenSSL Project (Apache License v2.0).\n *   Copyright (c) 1995-1998, Eric A. Young, Tim J. Hudson. All rights reserved.\n *   https://github.com/openssl/openssl\n *\n * Parts of this software are based on libgmp:\n *   Copyright (c) 1991-1997, 1999-2014, Free Software Foundation, Inc.\n *   https://gmplib.org/\n *\n * Parts of this software are based on v8/v8:\n *   Copyright (c) 2017, The V8 Project Authors (BSD-Style License).\n *   https://github.com/v8/v8\n *\n * Resources:\n *   https://github.com/indutny/bn.js/blob/master/lib/bn.js\n *   https://github.com/indutny/miller-rabin/blob/master/lib/mr.js\n *   https://github.com/golang/go/blob/master/src/math/big/int.go\n *   https://github.com/golang/go/blob/master/src/math/big/nat.go\n *   https://github.com/golang/go/blob/master/src/math/big/prime.go\n *   https://github.com/openssl/openssl/tree/master/crypto/bn\n *   https://github.com/openssl/openssl/blob/master/crypto/bn/bn_kron.c\n *   https://github.com/gnutls/nettle/blob/master/mini-gmp.c\n *   https://github.com/v8/v8/blob/master/src/objects/bigint.cc\n */\n\n/* eslint valid-typeof: \"off\" */\n'use strict';\n\nvar _get = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _createForOfIteratorHelper = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _slicedToArray = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _classCallCheck = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _require = require('../internal/custom'),\n    custom = _require.custom;\n/*\n * Constants\n */\n\n\nvar zeros = ['', '0', '00', '000', '0000', '00000', '000000', '0000000', '00000000', '000000000', '0000000000', '00000000000', '000000000000', '0000000000000', '00000000000000', '000000000000000', '0000000000000000', '00000000000000000', '000000000000000000', '0000000000000000000', '00000000000000000000', '000000000000000000000', '0000000000000000000000', '00000000000000000000000', '000000000000000000000000', '0000000000000000000000000'];\nvar groupSizes = [0x00, 0x19, 0x10, 0x0c, 0x0b, 0x0a, 0x09, 0x08, 0x08, 0x07, 0x07, 0x07, 0x07, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05];\nvar groupBases = [0x00000000, 0x02000000, 0x0290d741, 0x01000000, 0x02e90edd, 0x039aa400, 0x0267bf47, 0x01000000, 0x0290d741, 0x00989680, 0x012959c3, 0x0222c000, 0x03bd7765, 0x0072e440, 0x00adcea1, 0x01000000, 0x01704f61, 0x0206fc40, 0x02cddcf9, 0x03d09000, 0x003e5185, 0x004ea360, 0x006235f7, 0x00798000, 0x009502f9, 0x00b54ba0, 0x00daf26b, 0x01069c00, 0x0138f9ad, 0x0172c9e0, 0x01b4d89f, 0x02000000, 0x025528a1, 0x02b54a20, 0x03216b93, 0x039aa400];\nvar primes = {\n  p192: null,\n  p224: null,\n  p521: null,\n  k256: null,\n  p25519: null,\n  p448: null\n};\nvar modes = {\n  NONE: 0,\n  QUO: 1,\n  REM: 2,\n  BOTH: 3,\n  EUCLID: 4,\n  ALL: 7\n};\nvar WND_WIDTH = 4;\nvar WND_SIZE = 1 << WND_WIDTH - 1;\nvar HAS_BIGINT = typeof BigInt === 'function';\n/**\n * BN\n */\n\nvar BN = /*#__PURE__*/function () {\n  function BN(num, base, endian) {\n    _classCallCheck(this, BN);\n\n    this.words = [0];\n    this.length = 1;\n    this.negative = 0;\n    this.red = null;\n    this.from(num, base, endian);\n  }\n  /*\n   * Addition Engine\n   */\n\n\n  _createClass(BN, [{\n    key: \"_iadd\",\n    value: function _iadd(a, b) {\n      var carry = 0;\n      var i = 0; // a.length > b.length\n\n      if (a.length < b.length) {\n        var _ref = [b, a];\n        a = _ref[0];\n        b = _ref[1];\n      }\n\n      if (a !== this) this._alloc(a.length);\n\n      for (; i < b.length; i++) {\n        var r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n        this.words[i] = r & 0x3ffffff;\n        carry = r >>> 26;\n      }\n\n      for (; carry !== 0 && i < a.length; i++) {\n        var _r = (a.words[i] | 0) + carry;\n\n        this.words[i] = _r & 0x3ffffff;\n        carry = _r >>> 26;\n      }\n\n      this.length = a.length;\n\n      if (carry !== 0) {\n        this._alloc(this.length + 1);\n\n        this.words[this.length++] = carry;\n      } else if (a !== this) {\n        // Copy the rest of the words.\n        for (; i < a.length; i++) {\n          this.words[i] = a.words[i];\n        }\n      } // Note: we shouldn't need to strip here.\n\n\n      return this;\n    }\n  }, {\n    key: \"_iaddn\",\n    value: function _iaddn(num) {\n      this.words[0] += num;\n      if (this.words[0] < 0x4000000) return this; // Carry.\n\n      var i = 0;\n\n      this._alloc(this.length + 1);\n\n      this.words[this.length] = 0;\n\n      for (; i < this.length && this.words[i] >= 0x4000000; i++) {\n        this.words[i] -= 0x4000000;\n        this.words[i + 1] += 1;\n      }\n\n      this.length = Math.max(this.length, i + 1); // Note: we shouldn't need to strip here.\n\n      return this;\n    }\n    /*\n     * Addition\n     */\n\n  }, {\n    key: \"iadd\",\n    value: function iadd(num) {\n      enforce(BN.isBN(num), 'num', 'bignum');\n\n      if (this.negative === num.negative) {\n        // x + y == x + y\n        // (-x) + (-y) == -(x + y)\n        this._iadd(this, num);\n      } else {\n        // x + (-y) == x - y == -(y - x)\n        // (-x) + y == y - x == -(x - y)\n        var cmp = this.ucmp(num); // x + (-x) == (-x) + x == 0\n\n        if (cmp === 0) {\n          this.words[0] = 0;\n          this.length = 1;\n          this.negative = 0;\n          return this;\n        }\n\n        if (cmp < 0) {\n          this._isub(num, this);\n\n          this.negative ^= 1;\n        } else {\n          this._isub(this, num);\n        }\n      }\n\n      return this;\n    }\n  }, {\n    key: \"iaddn\",\n    value: function iaddn(num) {\n      enforce(isSMI(num), 'num', 'smi');\n      var negative = num < 0 | 0;\n      if (negative) num = -num;\n\n      if (this.negative === negative) {\n        // x + y == x + y\n        // (-x) + (-y) == -(x + y)\n        this._iaddn(num);\n      } else {\n        // x + (-y) == x - y == -(y - x)\n        // (-x) + y == y - x == -(x - y)\n        if (this.length === 1 && this.words[0] < num) {\n          this.words[0] = num - this.words[0];\n          this.negative ^= 1;\n        } else {\n          this._isubn(num);\n        }\n      }\n\n      return this;\n    }\n  }, {\n    key: \"add\",\n    value: function add(num) {\n      enforce(BN.isBN(num), 'num', 'bignum');\n      if (num.length > this.length) return num.clone().iadd(this);\n      return this.clone().iadd(num);\n    }\n  }, {\n    key: \"addn\",\n    value: function addn(num) {\n      return this.clone().iaddn(num);\n    }\n    /*\n     * Subtraction Engine\n     */\n\n  }, {\n    key: \"_isub\",\n    value: function _isub(a, b) {\n      var carry = 0;\n      var i = 0; // a > b\n\n      assert(a.length >= b.length);\n      if (a !== this) this._alloc(a.length);\n\n      for (; i < b.length; i++) {\n        var r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n        carry = r >> 26;\n        this.words[i] = r & 0x3ffffff;\n      }\n\n      for (; carry !== 0 && i < a.length; i++) {\n        var _r2 = (a.words[i] | 0) + carry;\n\n        carry = _r2 >> 26;\n        this.words[i] = _r2 & 0x3ffffff;\n      }\n\n      assert(carry === 0); // Copy rest of the words.\n\n      if (a !== this) {\n        for (; i < a.length; i++) {\n          this.words[i] = a.words[i];\n        }\n      }\n\n      this.length = Math.max(this.length, i);\n      return this._strip();\n    }\n  }, {\n    key: \"_isubn\",\n    value: function _isubn(num) {\n      this.words[0] -= num;\n      if (this.words[0] >= 0) return this._normalize();\n      assert(this.length !== 1); // Carry.\n\n      this._alloc(this.length + 1);\n\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n\n      this.words[this.length] = 0;\n      return this._strip();\n    }\n    /*\n     * Subtraction\n     */\n\n  }, {\n    key: \"isub\",\n    value: function isub(num) {\n      enforce(BN.isBN(num), 'num', 'bignum');\n\n      if (this.negative !== num.negative) {\n        // x - (-y) == x + y\n        // (-x) - y == -(x + y)\n        this._iadd(this, num);\n      } else {\n        // x - y == x - y == -(y - x)\n        // (-x) - (-y) == y - x == -(x - y)\n        var cmp = this.ucmp(num); // x - x == 0\n\n        if (cmp === 0) {\n          this.words[0] = 0;\n          this.length = 1;\n          this.negative = 0;\n          return this;\n        }\n\n        if (cmp < 0) {\n          this._isub(num, this);\n\n          this.negative ^= 1;\n        } else {\n          this._isub(this, num);\n        }\n      }\n\n      return this;\n    }\n  }, {\n    key: \"isubn\",\n    value: function isubn(num) {\n      enforce(isSMI(num), 'num', 'smi');\n      var negative = num < 0 | 0;\n      if (negative) num = -num;\n\n      if (this.negative !== negative) {\n        // x - (-y) == x + y\n        // (-x) - y == -(x + y)\n        this._iaddn(num);\n      } else {\n        // x - y == x - y == -(y - x)\n        // (-x) - (-y) == y - x == -(x - y)\n        if (this.length === 1 && this.words[0] < num) {\n          this.words[0] = num - this.words[0];\n          this.negative ^= 1;\n        } else {\n          this._isubn(num);\n        }\n      }\n\n      return this;\n    }\n  }, {\n    key: \"sub\",\n    value: function sub(num) {\n      return this.clone().isub(num);\n    }\n  }, {\n    key: \"subn\",\n    value: function subn(num) {\n      return this.clone().isubn(num);\n    }\n    /*\n     * Multiplication Engine\n     */\n\n  }, {\n    key: \"_mul\",\n    value: function _mul(num, out) {\n      enforce(BN.isBN(num), 'num', 'bignum');\n      enforce(BN.isBN(out), 'out', 'bignum');\n      if (this.length === 10 && num.length === 10) return comb10MulTo(this, num, out);\n      var len = this.length + num.length;\n      if (len < 63) return smallMulTo(this, num, out);\n      if (len < 1024) return bigMulTo(this, num, out);\n      return jumboMulTo(this, num, out);\n    }\n    /*\n     * Multiplication\n     */\n\n  }, {\n    key: \"imul\",\n    value: function imul(num) {\n      return this.mul(num)._move(this);\n    }\n  }, {\n    key: \"imuln\",\n    value: function imuln(num) {\n      enforce(isSMI(num), 'num', 'smi');\n      var neg = num < 0 | 0;\n      if (neg) num = -num; // Carry.\n\n      var carry = 0;\n\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i] * num;\n        var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n        carry >>= 26;\n        carry += w / 0x4000000 | 0;\n        carry += lo >>> 26;\n        this.words[i] = lo & 0x3ffffff;\n      }\n\n      this.negative ^= neg;\n\n      if (carry !== 0) {\n        this._alloc(this.length + 1);\n\n        this.words[this.length++] = carry;\n      } else {\n        this._strip();\n      }\n\n      return this;\n    }\n  }, {\n    key: \"mul\",\n    value: function mul(num) {\n      enforce(BN.isBN(num), 'num', 'bignum');\n      var len = this.length + num.length;\n      var out = new BN();\n      out.words = new Array(len);\n\n      for (var i = 0; i < len; i++) {\n        out.words[i] = 0;\n      }\n\n      return this._mul(num, out);\n    }\n  }, {\n    key: \"muln\",\n    value: function muln(num) {\n      return this.clone().imuln(num);\n    }\n    /*\n     * Multiplication + Shift\n     */\n\n  }, {\n    key: \"mulShift\",\n    value: function mulShift(num, bits) {\n      enforce(BN.isBN(num), 'num', 'bignum');\n      enforce(bits >>> 0 === bits, 'bits', 'uint32');\n      var r = this.mul(num);\n      var b = r.utestn(bits - 1);\n      r.iushrn(bits);\n      if (this.negative ^ num.negative) return r.isubn(b);\n      return r.iaddn(b);\n    }\n    /*\n     * Division Engine\n     */\n\n  }, {\n    key: \"_div\",\n    value: function _div(num, flags) {\n      enforce(BN.isBN(num), 'num', 'bignum');\n      assert((flags & modes.ALL) === flags);\n      assert(flags !== modes.NONE);\n      var a = this;\n      var b = num;\n      nonzero(!b.isZero());\n      if (a.isZero()) return [new BN(0), new BN(0)];\n      var as = a.negative;\n      var bs = b.negative;\n      a.negative = 0;\n      b.negative = 0;\n      var q = null;\n      var r = null;\n\n      if (a.ucmp(b) < 0) {\n        if (flags & modes.QUO) q = new BN(0);\n        if (flags & modes.REM) r = a.clone();\n      } else if (b.length === 1) {\n        if (flags & modes.QUO) q = a.quon(b.words[0]);\n        if (flags & modes.REM) r = a.remn(b.words[0]);\n      } else {\n        var _a$_wordDiv = a._wordDiv(b, flags);\n\n        var _a$_wordDiv2 = _slicedToArray(_a$_wordDiv, 2);\n\n        q = _a$_wordDiv2[0];\n        r = _a$_wordDiv2[1];\n      }\n\n      a.negative = as;\n      b.negative = bs;\n\n      if (flags & modes.QUO) {\n        q.negative = a.negative ^ b.negative;\n\n        q._normalize();\n      }\n\n      if (flags & modes.REM) {\n        r.negative = a.negative;\n\n        r._normalize();\n      }\n\n      if (flags & modes.EUCLID) {\n        if (flags & modes.QUO) {\n          assert((flags & modes.REM) !== 0);\n\n          if (r.negative !== 0) {\n            if (b.negative !== 0) q.iaddn(1);else q.isubn(1);\n          }\n        }\n\n        if (flags & modes.REM) {\n          if (r.negative !== 0) {\n            if (b.negative !== 0) r.isub(b);else r.iadd(b);\n          }\n        }\n      }\n\n      return [q, r];\n    }\n  }, {\n    key: \"_wordDiv\",\n    value: function _wordDiv(num, flags) {\n      var a = this.clone();\n      var b = num;\n      var q = null;\n      var hi; // Normalize.\n\n      var word = b.words[b.length - 1] | 0;\n      var shift = 26 - countBits(word);\n\n      if (shift !== 0) {\n        b = b.clone();\n        a.iushln(shift);\n        b.iushln(shift);\n        hi = b.words[b.length - 1] | 0;\n      } else {\n        hi = word;\n      } // Initialize quotient.\n\n\n      var m = a.length - b.length;\n      assert(m >= 0);\n\n      if (flags & modes.QUO) {\n        q = new BN(0);\n        q.length = m + 1;\n        q.words = new Array(q.length);\n\n        for (var i = 0; i < q.length; i++) {\n          q.words[i] = 0;\n        }\n      } // Diff.\n\n\n      var d = a.clone();\n\n      d._ishlnsubmul(b, 1, m);\n\n      if (d.negative === 0) {\n        if (q) q.words[m] = 1;\n        a = d;\n      } // Divide.\n\n\n      for (var j = m - 1; j >= 0; j--) {\n        var ahi = a.words[b.length + j];\n        var alo = a.words[b.length + j - 1];\n        var quo = (ahi * 0x4000000 + alo) / hi | 0;\n        var qj = Math.min(quo, 0x3ffffff);\n\n        a._ishlnsubmul(b, qj, j);\n\n        while (a.negative !== 0) {\n          qj -= 1;\n          a.negative = 0;\n\n          a._ishlnsubmul(b, 1, j);\n\n          a.ineg();\n        }\n\n        if (q) q.words[j] = qj;\n      } // Strip.\n\n\n      if (q) q._strip(); // Denormalize.\n      // Note: we shouldn't need to strip `a` here.\n\n      if (flags & modes.REM && shift !== 0) a.iushrn(shift);\n      return [q, a];\n    }\n  }, {\n    key: \"_ishlnsubmul\",\n    value: function _ishlnsubmul(num, mul, shift) {\n      var carry = 0;\n      var i = 0;\n\n      this._expand(num.length + shift);\n\n      for (; i < num.length; i++) {\n        var k = (this.words[i + shift] | 0) + carry;\n        var r = num.words[i] * mul;\n        var w = k - (r & 0x3ffffff);\n        carry = (w >> 26) - (r / 0x4000000 | 0);\n        this.words[i + shift] = w & 0x3ffffff;\n      }\n\n      for (; i < this.length - shift; i++) {\n        var _w = (this.words[i + shift] | 0) + carry;\n\n        carry = _w >> 26;\n        this.words[i + shift] = _w & 0x3ffffff;\n      }\n\n      if (carry === 0) return this._strip(); // Subtraction overflow.\n\n      assert(carry === -1);\n      carry = 0;\n\n      for (var _i = 0; _i < this.length; _i++) {\n        var _w2 = -(this.words[_i] | 0) + carry;\n\n        carry = _w2 >> 26;\n        this.words[_i] = _w2 & 0x3ffffff;\n      }\n\n      this.negative = 1;\n      return this._strip();\n    }\n    /*\n     * Truncation Division + Modulo\n     */\n\n  }, {\n    key: \"quorem\",\n    value: function quorem(num) {\n      return this._div(num, modes.BOTH);\n    }\n    /*\n     * Truncation Division\n     */\n\n  }, {\n    key: \"iquo\",\n    value: function iquo(num) {\n      return this.quo(num)._move(this);\n    }\n  }, {\n    key: \"iquon\",\n    value: function iquon(num) {\n      enforce(isSMI(num), 'num', 'smi');\n      nonzero(num !== 0);\n      var neg = num < 0 | 0;\n      if (neg) num = -num;\n      var carry = 0;\n\n      for (var i = this.length - 1; i >= 0; i--) {\n        var w = (this.words[i] | 0) + carry * 0x4000000;\n        this.words[i] = w / num | 0;\n        carry = w % num;\n      }\n\n      this.negative ^= neg;\n      return this._strip();\n    }\n  }, {\n    key: \"quo\",\n    value: function quo(num) {\n      return this._div(num, modes.QUO)[0];\n    }\n  }, {\n    key: \"quon\",\n    value: function quon(num) {\n      return this.clone().iquon(num);\n    }\n    /*\n     * Truncation Modulo\n     */\n\n  }, {\n    key: \"irem\",\n    value: function irem(num) {\n      return this.rem(num)._move(this);\n    }\n  }, {\n    key: \"iremn\",\n    value: function iremn(num) {\n      var m = this.remrn(num);\n      if (m < 0) m = -m;\n      this.words[0] = m;\n      this.length = 1;\n      return this._normalize();\n    }\n  }, {\n    key: \"rem\",\n    value: function rem(num) {\n      return this._div(num, modes.REM)[1];\n    }\n  }, {\n    key: \"remn\",\n    value: function remn(num) {\n      return this.clone().iremn(num);\n    }\n  }, {\n    key: \"remrn\",\n    value: function remrn(num) {\n      enforce(isSMI(num), 'num', 'smi');\n      nonzero(num !== 0);\n      if (num < 0) num = -num;\n      var p = (1 << 26) % num;\n      var acc = 0;\n\n      for (var i = this.length - 1; i >= 0; i--) {\n        acc = (p * acc + (this.words[i] | 0)) % num;\n      }\n\n      return this.negative !== 0 ? -acc | 0 : acc;\n    }\n    /*\n     * Euclidean Division + Modulo\n     */\n\n  }, {\n    key: \"divmod\",\n    value: function divmod(num) {\n      return this._div(num, modes.BOTH | modes.EUCLID);\n    }\n    /*\n     * Euclidean Division\n     */\n\n  }, {\n    key: \"idiv\",\n    value: function idiv(num) {\n      return this.div(num)._move(this);\n    }\n  }, {\n    key: \"idivn\",\n    value: function idivn(num) {\n      if (this.negative === 0) return this.iquon(num);\n      var r = this.remrn(num);\n      this.iquon(num);\n\n      if (r < 0) {\n        if (num < 0) this.iaddn(1);else this.isubn(1);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"div\",\n    value: function div(num) {\n      return this._div(num, modes.BOTH | modes.EUCLID)[0];\n    }\n  }, {\n    key: \"divn\",\n    value: function divn(num) {\n      return this.clone().idivn(num);\n    }\n    /*\n     * Euclidean Modulo\n     */\n\n  }, {\n    key: \"imod\",\n    value: function imod(num) {\n      if (this.ucmp(num) < 0) {\n        if (this.negative !== 0) {\n          this._isub(num, this);\n\n          this.negative = 0;\n        }\n\n        return this;\n      }\n\n      return this.mod(num)._move(this);\n    }\n  }, {\n    key: \"imodn\",\n    value: function imodn(num) {\n      this.words[0] = this.modrn(num);\n      this.length = 1;\n      this.negative = 0;\n      return this;\n    }\n  }, {\n    key: \"mod\",\n    value: function mod(num) {\n      return this._div(num, modes.REM | modes.EUCLID)[1];\n    }\n  }, {\n    key: \"modn\",\n    value: function modn(num) {\n      return this.clone().imodn(num);\n    }\n  }, {\n    key: \"modrn\",\n    value: function modrn(num) {\n      enforce(isSMI(num), 'num', 'smi');\n      var r = this.remrn(num);\n\n      if (r < 0) {\n        if (num < 0) r -= num;else r += num;\n      }\n\n      return r;\n    }\n    /*\n     * Round Division\n     */\n\n  }, {\n    key: \"divRound\",\n    value: function divRound(num) {\n      var _this$quorem = this.quorem(num),\n          _this$quorem2 = _slicedToArray(_this$quorem, 2),\n          q = _this$quorem2[0],\n          r = _this$quorem2[1]; // Fast case - exact division.\n\n\n      if (r.isZero()) return q;\n      var bit = num.words[0] & 1;\n      num.iushrn(1);\n      var cmp = r.ucmp(num);\n      num.iushln(1);\n      num.words[0] |= bit; // Round down.\n\n      if (cmp < 0 || num.isOdd() && cmp === 0) return q; // Round up.\n\n      if (this.negative ^ num.negative) return q.isubn(1);\n      return q.iaddn(1);\n    }\n    /*\n     * Exponentiation\n     */\n\n  }, {\n    key: \"ipow\",\n    value: function ipow(num) {\n      return this.pow(num)._move(this);\n    }\n  }, {\n    key: \"ipown\",\n    value: function ipown(num) {\n      return this.pown(num)._move(this);\n    }\n  }, {\n    key: \"pow\",\n    value: function pow(num) {\n      enforce(BN.isBN(num), 'num', 'bignum');\n      var b = countBits(num.words[num.length - 1]);\n      var r = new BN(1);\n\n      for (var i = num.length - 1; i >= 0; i--) {\n        var word = num.words[i];\n\n        for (var j = b - 1; j >= 0; j--) {\n          r = r.sqr();\n          if (word >> j & 1) r = r.mul(this);\n        }\n\n        b = 26;\n      }\n\n      return r;\n    }\n  }, {\n    key: \"pown\",\n    value: function pown(num) {\n      enforce(isSMI(num), 'num', 'smi');\n      if (num < 0) num = -num;\n      if (num === 0) return new BN(1);\n      if (num === 1) return this.clone();\n      var bits = countBits(num);\n      var r = this;\n\n      for (var i = bits - 2; i >= 0; i--) {\n        r = r.sqr();\n        if (num >> i & 1) r = r.mul(this);\n      }\n\n      return r;\n    }\n  }, {\n    key: \"isqr\",\n    value: function isqr() {\n      return this.imul(this);\n    }\n  }, {\n    key: \"sqr\",\n    value: function sqr() {\n      return this.mul(this);\n    }\n    /*\n     * Roots Engine\n     */\n\n  }, {\n    key: \"_rootrem\",\n    value: function _rootrem(pow, rem) {\n      enforce(pow >>> 0 === pow, 'num', 'uint32');\n      if (pow === 0) throw new RangeError('Zeroth root.');\n      if (~pow & this.negative) throw new RangeError('Negative with even root.');\n      if (this.ucmpn(1) <= 0) return [this.clone(), new BN(0)];\n      var u = new BN(0);\n      var t = BN.shift(1, this.bitLength() / pow + 1 | 0);\n      var v, r;\n      if (this.negative !== 0) t.ineg();\n\n      if (pow === 2) {\n        do {\n          u = t;\n          t = this.quo(u);\n          t.iadd(u);\n          t.iushrn(1);\n        } while (t.ucmp(u) < 0);\n      } else {\n        do {\n          u = t;\n          t = u.pown(pow - 1);\n          t = this.quo(t);\n          v = u.muln(pow - 1);\n          t.iadd(v);\n          t = t.quon(pow);\n        } while (t.ucmp(u) < 0);\n      }\n\n      if (rem) {\n        t = u.pown(pow);\n        r = this.sub(t);\n      }\n\n      return [u, r];\n    }\n    /*\n     * Roots\n     */\n\n  }, {\n    key: \"rootrem\",\n    value: function rootrem(pow) {\n      return this._rootrem(pow, 1);\n    }\n  }, {\n    key: \"iroot\",\n    value: function iroot(pow) {\n      return this.root(pow)._move(this);\n    }\n  }, {\n    key: \"root\",\n    value: function root(pow) {\n      return this._rootrem(pow, 0)[0];\n    }\n  }, {\n    key: \"isPower\",\n    value: function isPower(pow) {\n      enforce(pow >>> 0 === pow, 'num', 'uint32');\n      if (pow === 0 || ~pow & this.negative) return false;\n\n      var _this$rootrem = this.rootrem(pow),\n          _this$rootrem2 = _slicedToArray(_this$rootrem, 2),\n          r = _this$rootrem2[1];\n\n      return r.sign() === 0;\n    }\n  }, {\n    key: \"sqrtrem\",\n    value: function sqrtrem() {\n      return this.rootrem(2);\n    }\n  }, {\n    key: \"isqrt\",\n    value: function isqrt() {\n      return this.sqrt()._move(this);\n    }\n  }, {\n    key: \"sqrt\",\n    value: function sqrt() {\n      return this.root(2);\n    }\n  }, {\n    key: \"isSquare\",\n    value: function isSquare() {\n      return this.isPower(2);\n    }\n    /*\n     * AND\n     */\n\n  }, {\n    key: \"iand\",\n    value: function iand(num) {\n      enforce(BN.isBN(num), 'num', 'bignum');\n      var x = this;\n      var y = num;\n      if (x === y) return x;\n      if ((x.negative | y.negative) === 0) return x.iuand(y);\n\n      if ((x.negative & y.negative) === 1) {\n        // (-x) & (-y) == ~(x-1) & ~(y-1)\n        //             == ~((x-1) | (y-1))\n        //             == -(((x-1) | (y-1)) + 1)\n        x.iaddn(1);\n        y.iaddn(1);\n        x.iuor(y);\n        x.isubn(1);\n        y.isubn(1);\n        return x;\n      } // Assume x is the positive number.\n\n\n      if (x.negative !== 0) {\n        var _ref2 = [y.clone(), x];\n        x = _ref2[0];\n        y = _ref2[1];\n      } // x & (-y) == x & ~(y-1)\n      //          == x & ~(y-1)\n\n\n      var width = x.bitLength();\n      y.iaddn(1);\n      y.inotn(width);\n      x.iuand(y);\n      y.inotn(width);\n      y.isubn(1);\n      return x._move(this);\n    }\n  }, {\n    key: \"iandn\",\n    value: function iandn(num) {\n      enforce(isSMI(num), 'num', 'smi');\n      if ((this.negative | num < 0) !== 0) return this.iand(new BN(num));\n      this.words[0] &= num;\n      this.length = 1;\n      return this;\n    }\n  }, {\n    key: \"and\",\n    value: function and(num) {\n      return this.clone().iand(num);\n    }\n  }, {\n    key: \"andn\",\n    value: function andn(num) {\n      return this.clone().iandn(num);\n    }\n  }, {\n    key: \"andrn\",\n    value: function andrn(num) {\n      enforce(isSMI(num), 'num', 'smi');\n\n      if ((this.negative | num < 0) !== 0) {\n        var n = this.iand(new BN(num));\n        if (n.length > 1) throw new RangeError('Number exceeds 26 bits.');\n        return n.negative !== 0 ? -n.words[0] : n.words[0];\n      }\n\n      return this.words[0] & num;\n    }\n    /*\n     * Unsigned AND\n     */\n\n  }, {\n    key: \"iuand\",\n    value: function iuand(num) {\n      enforce(BN.isBN(num), 'num', 'bignum');\n      this.length = Math.min(this.length, num.length);\n\n      for (var i = 0; i < this.length; i++) {\n        this.words[i] &= num.words[i];\n      }\n\n      return this._strip();\n    }\n  }, {\n    key: \"iuandn\",\n    value: function iuandn(num) {\n      enforce(isSMI(num), 'num', 'smi');\n      this.words[0] &= Math.abs(num);\n      this.length = 1;\n      return this._normalize();\n    }\n  }, {\n    key: \"uand\",\n    value: function uand(num) {\n      return this.clone().iuand(num);\n    }\n  }, {\n    key: \"uandn\",\n    value: function uandn(num) {\n      return this.clone().iuandn(num);\n    }\n  }, {\n    key: \"uandrn\",\n    value: function uandrn(num) {\n      enforce(isSMI(num), 'num', 'smi');\n      var n = this.words[0] & Math.abs(num);\n      return this.negative !== 0 ? -n | 0 : n;\n    }\n    /*\n     * OR\n     */\n\n  }, {\n    key: \"ior\",\n    value: function ior(num) {\n      enforce(BN.isBN(num), 'num', 'bignum');\n      var x = this;\n      var y = num;\n      if (x === y) return x;\n      if ((x.negative | y.negative) === 0) return x.iuor(y);\n\n      if ((x.negative & y.negative) === 1) {\n        // (-x) | (-y) == ~(x-1) | ~(y-1)\n        //             == ~((x-1) & (y-1))\n        //             == -(((x-1) & (y-1)) + 1)\n        x.iaddn(1);\n        y.iaddn(1);\n        x.iuand(y);\n        x.isubn(1);\n        y.isubn(1);\n        return x;\n      } // Assume x is the positive number.\n\n\n      y = y.clone();\n\n      if (x.negative !== 0) {\n        var _ref3 = [y, x];\n        x = _ref3[0];\n        y = _ref3[1];\n      } // x | (-y) == x | ~(y-1)\n      //          == ~((y-1) & ~x)\n      //          == -(((y-1) & ~x) + 1)\n\n\n      y.iaddn(1);\n      x.inotn(y.bitLength());\n      y.iuand(x);\n      y.isubn(1);\n      return y._move(this);\n    }\n  }, {\n    key: \"iorn\",\n    value: function iorn(num) {\n      enforce(isSMI(num), 'num', 'smi');\n      if ((this.negative | num < 0) !== 0) return this.ior(new BN(num));\n      this.words[0] |= num;\n      return this;\n    }\n  }, {\n    key: \"or\",\n    value: function or(num) {\n      return this.clone().ior(num);\n    }\n  }, {\n    key: \"orn\",\n    value: function orn(num) {\n      return this.clone().iorn(num);\n    }\n    /*\n     * Unsigned OR\n     */\n\n  }, {\n    key: \"iuor\",\n    value: function iuor(num) {\n      enforce(BN.isBN(num), 'num', 'bignum');\n\n      this._expand(num.length);\n\n      for (var i = 0; i < num.length; i++) {\n        this.words[i] |= num.words[i];\n      } // Note: we shouldn't need to strip here.\n\n\n      return this;\n    }\n  }, {\n    key: \"iuorn\",\n    value: function iuorn(num) {\n      enforce(isSMI(num), 'num', 'smi');\n      this.words[0] |= Math.abs(num);\n      return this;\n    }\n  }, {\n    key: \"uor\",\n    value: function uor(num) {\n      return this.clone().iuor(num);\n    }\n  }, {\n    key: \"uorn\",\n    value: function uorn(num) {\n      return this.clone().iuorn(num);\n    }\n    /*\n     * XOR\n     */\n\n  }, {\n    key: \"ixor\",\n    value: function ixor(num) {\n      enforce(BN.isBN(num), 'num', 'bignum');\n      var x = this;\n      var y = num;\n\n      if (x === y) {\n        x.words[0] = 0;\n        x.length = 1;\n        x.negative = 0;\n        return x;\n      }\n\n      if ((x.negative | y.negative) === 0) return x.iuxor(y);\n\n      if ((x.negative & y.negative) === 1) {\n        // (-x) ^ (-y) == ~(x-1) ^ ~(y-1)\n        //             == (x-1) ^ (y-1)\n        x.iaddn(1);\n        y.iaddn(1);\n        x.iuxor(y);\n        x.ineg();\n        y.isubn(1);\n        return x;\n      } // Assume x is the positive number.\n\n\n      if (x.negative !== 0) {\n        var _ref4 = [y.clone(), x];\n        x = _ref4[0];\n        y = _ref4[1];\n      } // x ^ (-y) == x ^ ~(y-1)\n      //          == ~(x ^ (y-1))\n      //          == -((x ^ (y-1)) + 1)\n\n\n      y.iaddn(1);\n      x.iuxor(y);\n      x.iaddn(1);\n      x.ineg();\n      y.isubn(1);\n      return x._move(this);\n    }\n  }, {\n    key: \"ixorn\",\n    value: function ixorn(num) {\n      enforce(isSMI(num), 'num', 'smi');\n      if ((this.negative | num < 0) !== 0) return this.ixor(new BN(num));\n      this.words[0] ^= num;\n      return this;\n    }\n  }, {\n    key: \"xor\",\n    value: function xor(num) {\n      return this.clone().ixor(num);\n    }\n  }, {\n    key: \"xorn\",\n    value: function xorn(num) {\n      return this.clone().ixorn(num);\n    }\n    /*\n     * Unsigned XOR\n     */\n\n  }, {\n    key: \"iuxor\",\n    value: function iuxor(num) {\n      enforce(BN.isBN(num), 'num', 'bignum');\n      var a = this;\n      var b = num;\n\n      if (a.length < b.length) {\n        var _ref5 = [b, a];\n        a = _ref5[0];\n        b = _ref5[1];\n      }\n\n      var i = 0;\n\n      for (; i < b.length; i++) {\n        this.words[i] = a.words[i] ^ b.words[i];\n      }\n\n      if (a !== this) {\n        this._alloc(a.length);\n\n        for (; i < a.length; i++) {\n          this.words[i] = a.words[i];\n        }\n      }\n\n      this.length = a.length;\n      return this._strip();\n    }\n  }, {\n    key: \"iuxorn\",\n    value: function iuxorn(num) {\n      enforce(isSMI(num), 'num', 'smi');\n      this.words[0] ^= Math.abs(num);\n      return this._normalize();\n    }\n  }, {\n    key: \"uxor\",\n    value: function uxor(num) {\n      return this.clone().iuxor(num);\n    }\n  }, {\n    key: \"uxorn\",\n    value: function uxorn(num) {\n      return this.clone().iuxorn(num);\n    }\n    /*\n     * NOT\n     */\n\n  }, {\n    key: \"inot\",\n    value: function inot() {\n      if (this.negative !== 0) {\n        // ~(-x) == ~(~(x-1)) == x-1\n        this.ineg().isubn(1);\n      } else {\n        // ~x == -x-1 == -(x+1)\n        this.iaddn(1).ineg();\n      }\n\n      return this;\n    }\n  }, {\n    key: \"not\",\n    value: function not() {\n      return this.clone().inot();\n    }\n  }, {\n    key: \"inotn\",\n    value: function inotn(width) {\n      enforce(width >>> 0 === width, 'width', 'uint32');\n      var r = width % 26;\n      var s = Math.ceil(width / 26);\n      var i = 0; // Extend the buffer with leading zeroes.\n\n      this._expand(s);\n\n      if (r > 0) s -= 1; // Handle complete words.\n\n      for (; i < s; i++) {\n        this.words[i] ^= 0x3ffffff;\n      } // Handle the residue.\n\n\n      if (r > 0) this.words[i] ^= (1 << r) - 1; // And remove leading zeroes.\n\n      return this._strip();\n    }\n  }, {\n    key: \"notn\",\n    value: function notn(width) {\n      return this.clone().inotn(width);\n    }\n    /*\n     * Left Shift\n     */\n\n  }, {\n    key: \"ishl\",\n    value: function ishl(num) {\n      enforce(BN.isBN(num), 'bits', 'bignum');\n      enforce(num.bitLength() <= 32, 'bits', 'uint32');\n      return this.ishln(num.toNumber());\n    }\n  }, {\n    key: \"ishln\",\n    value: function ishln(bits) {\n      return this.iushln(bits);\n    }\n  }, {\n    key: \"shl\",\n    value: function shl(num) {\n      return this.clone().ishl(num);\n    }\n  }, {\n    key: \"shln\",\n    value: function shln(bits) {\n      return this.clone().ishln(bits);\n    }\n    /*\n     * Unsigned Left Shift\n     */\n\n  }, {\n    key: \"iushl\",\n    value: function iushl(num) {\n      enforce(BN.isBN(num), 'bits', 'bignum');\n      enforce(num.bitLength() <= 32, 'bits', 'uint32');\n      return this.iushln(num.toNumber());\n    }\n  }, {\n    key: \"iushln\",\n    value: function iushln(bits) {\n      enforce(bits >>> 0 === bits, 'bits', 'uint32');\n      var r = bits % 26;\n      var s = (bits - r) / 26;\n      var mask = (1 << r) - 1 << 26 - r;\n\n      if (r !== 0) {\n        var carry = 0;\n\n        for (var i = 0; i < this.length; i++) {\n          var ncarry = this.words[i] & mask;\n          var c = (this.words[i] | 0) - ncarry << r;\n          this.words[i] = c | carry;\n          carry = ncarry >>> 26 - r;\n        }\n\n        if (carry !== 0) {\n          this._alloc(this.length + 1);\n\n          this.words[this.length++] = carry;\n        }\n      }\n\n      if (s !== 0) {\n        this._alloc(this.length + s);\n\n        for (var _i2 = this.length - 1; _i2 >= 0; _i2--) {\n          this.words[_i2 + s] = this.words[_i2];\n        }\n\n        for (var _i3 = 0; _i3 < s; _i3++) {\n          this.words[_i3] = 0;\n        }\n\n        this.length += s;\n      }\n\n      return this._strip();\n    }\n  }, {\n    key: \"ushl\",\n    value: function ushl(num) {\n      return this.clone().iushl(num);\n    }\n  }, {\n    key: \"ushln\",\n    value: function ushln(bits) {\n      return this.clone().iushln(bits);\n    }\n    /*\n     * Right Shift Engine\n     */\n\n  }, {\n    key: \"_split\",\n    value: function _split(bits, output) {\n      var r = bits % 26;\n      var s = Math.min((bits - r) / 26, this.length);\n      var mask = (1 << r) - 1; // Extended mode, copy masked part.\n\n      if (output) {\n        output._alloc(s);\n\n        for (var i = 0; i < s; i++) {\n          output.words[i] = this.words[i];\n        }\n\n        output.length = s;\n      }\n\n      if (s === 0) {// No-op, we should not move anything at all.\n      } else if (this.length > s) {\n        this.length -= s;\n\n        for (var _i4 = 0; _i4 < this.length; _i4++) {\n          this.words[_i4] = this.words[_i4 + s];\n        }\n      } else {\n        this.words[0] = 0;\n        this.length = 1;\n      }\n\n      var carry = 0;\n\n      if (r !== 0) {\n        for (var _i5 = this.length - 1; _i5 >= 0; _i5--) {\n          var word = this.words[_i5] | 0;\n          this.words[_i5] = carry << 26 - r | word >>> r;\n          carry = word & mask;\n        }\n      } // Push carried bits as a mask.\n\n\n      if (output) {\n        if (carry !== 0) {\n          output._alloc(output.length + 1);\n\n          output.words[output.length++] = carry;\n        } else {\n          if (output.length === 0) output.words[output.length++] = 0;\n\n          output._strip();\n        }\n      }\n\n      return this._strip();\n    }\n    /*\n     * Right Shift\n     */\n\n  }, {\n    key: \"ishr\",\n    value: function ishr(num) {\n      enforce(BN.isBN(num), 'bits', 'bignum');\n      enforce(num.bitLength() <= 32, 'bits', 'uint32');\n      return this.ishrn(num.toNumber());\n    }\n  }, {\n    key: \"ishrn\",\n    value: function ishrn(bits) {\n      enforce(bits >>> 0 === bits, 'bits', 'uint32');\n\n      if (this.negative !== 0) {\n        // (-x) >> y == ~(x-1) >> y\n        //           == ~((x-1) >> y)\n        //           == -(((x-1) >> y) + 1)\n        this.iaddn(1);\n        this.iushrn(bits);\n        this.isubn(1);\n        return this;\n      }\n\n      return this.iushrn(bits);\n    }\n  }, {\n    key: \"shr\",\n    value: function shr(num) {\n      return this.clone().ishr(num);\n    }\n  }, {\n    key: \"shrn\",\n    value: function shrn(bits) {\n      return this.clone().ishrn(bits);\n    }\n    /*\n     * Unsigned Right Shift\n     */\n\n  }, {\n    key: \"iushr\",\n    value: function iushr(num) {\n      enforce(BN.isBN(num), 'bits', 'bignum');\n      enforce(num.bitLength() <= 32, 'bits', 'uint32');\n      return this.iushrn(num.toNumber());\n    }\n  }, {\n    key: \"iushrn\",\n    value: function iushrn(bits) {\n      enforce(bits >>> 0 === bits, 'bits', 'uint32');\n      return this._split(bits, null);\n    }\n  }, {\n    key: \"ushr\",\n    value: function ushr(num) {\n      return this.clone().iushr(num);\n    }\n  }, {\n    key: \"ushrn\",\n    value: function ushrn(bits) {\n      return this.clone().iushrn(bits);\n    }\n    /*\n     * Bit Manipulation\n     */\n\n  }, {\n    key: \"setn\",\n    value: function setn(bit, val) {\n      enforce(bit >>> 0 === bit, 'bit', 'uint32');\n\n      if (this.negative !== 0) {\n        this.iaddn(1);\n        this.usetn(bit, !val);\n        this.isubn(1);\n        return this;\n      }\n\n      return this.usetn(bit, val);\n    }\n  }, {\n    key: \"usetn\",\n    value: function usetn(bit, val) {\n      enforce(bit >>> 0 === bit, 'bit', 'uint32');\n      var r = bit % 26;\n      var s = (bit - r) / 26;\n\n      this._expand(s + 1);\n\n      if (val) this.words[s] |= 1 << r;else this.words[s] &= ~(1 << r);\n      return this._strip();\n    }\n  }, {\n    key: \"testn\",\n    value: function testn(bit) {\n      enforce(bit >>> 0 === bit, 'bit', 'uint32');\n      var r = bit % 26;\n      var s = (bit - r) / 26; // Fast case: bit is much higher than all existing words.\n\n      if (this.length <= s) return this.negative; // Check bit and return.\n\n      var w = this.words[s];\n      var val = w >> r & 1;\n\n      if (this.negative !== 0) {\n        if (r > 0 && w & (1 << r) - 1) return val ^ 1;\n        var j = s;\n\n        while (j--) {\n          if (this.words[j] > 0) return val ^ 1;\n        }\n      }\n\n      return val;\n    }\n  }, {\n    key: \"utestn\",\n    value: function utestn(bit) {\n      enforce(bit >>> 0 === bit, 'bit', 'uint32');\n      var r = bit % 26;\n      var s = (bit - r) / 26; // Fast case: bit is much higher than all existing words.\n\n      if (this.length <= s) return 0; // Check bit and return.\n\n      return this.words[s] >> r & 1;\n    }\n  }, {\n    key: \"imaskn\",\n    value: function imaskn(bits) {\n      enforce(bits >>> 0 === bits, 'bits', 'uint32');\n\n      if (this.negative !== 0) {\n        this.iaddn(1);\n        this.inotn(bits + 1);\n        this.ineg();\n      }\n\n      return this.iumaskn(bits);\n    }\n  }, {\n    key: \"maskn\",\n    value: function maskn(bits) {\n      return this.clone().imaskn(bits);\n    }\n  }, {\n    key: \"iumaskn\",\n    value: function iumaskn(bits) {\n      enforce(bits >>> 0 === bits, 'bits', 'uint32');\n      var r = bits % 26;\n      var s = (bits - r) / 26;\n      if (this.length <= s) return this;\n      if (r !== 0) s += 1;\n      this.length = Math.min(s, this.length);\n      if (r !== 0) this.words[this.length - 1] &= (1 << r) - 1;\n      if (this.length === 0) this.words[this.length++] = 0;\n      return this._strip();\n    }\n  }, {\n    key: \"umaskn\",\n    value: function umaskn(bits) {\n      return this.clone().iumaskn(bits);\n    }\n  }, {\n    key: \"andln\",\n    value: function andln(num) {\n      return this.words[0] & num;\n    }\n  }, {\n    key: \"bit\",\n    value: function bit(pos) {\n      return this.utestn(pos);\n    }\n  }, {\n    key: \"bits\",\n    value: function bits(pos, width) {\n      enforce(pos >>> 0 === pos, 'pos', 'uint32');\n      enforce(width >>> 0 === width, 'width', 'uint32');\n      enforce(width <= 26, 'width', 'width');\n      var shift = pos % 26;\n      var index = (pos - shift) / 26;\n      if (index >= this.length) return 0;\n      var bits = this.words[index] >> shift & (1 << width) - 1;\n\n      if (shift + width > 26 && index + 1 < this.length) {\n        var more = shift + width - 26;\n        var next = this.words[index + 1] & (1 << more) - 1;\n        bits |= next << 26 - shift;\n      }\n\n      return bits;\n    }\n    /*\n     * Negation\n     */\n\n  }, {\n    key: \"ineg\",\n    value: function ineg() {\n      if (!this.isZero()) this.negative ^= 1;\n      return this;\n    }\n  }, {\n    key: \"neg\",\n    value: function neg() {\n      return this.clone().ineg();\n    }\n  }, {\n    key: \"iabs\",\n    value: function iabs() {\n      this.negative = 0;\n      return this;\n    }\n  }, {\n    key: \"abs\",\n    value: function abs() {\n      return this.clone().iabs();\n    }\n    /*\n     * Comparison\n     */\n\n  }, {\n    key: \"cmp\",\n    value: function cmp(num) {\n      enforce(BN.isBN(num), 'num', 'bignum');\n      if (this.negative !== num.negative) return num.negative - this.negative;\n      var res = this.ucmp(num);\n      if (this.negative !== 0) return -res | 0;\n      return res;\n    }\n  }, {\n    key: \"cmpn\",\n    value: function cmpn(num) {\n      enforce(isSMI(num), 'num', 'smi');\n      var negative = num < 0 | 0;\n      if (this.negative !== negative) return negative - this.negative;\n      var res = this.ucmpn(num);\n      if (this.negative !== 0) return -res | 0;\n      return res;\n    }\n  }, {\n    key: \"eq\",\n    value: function eq(num) {\n      return this.cmp(num) === 0;\n    }\n  }, {\n    key: \"eqn\",\n    value: function eqn(num) {\n      return this.cmpn(num) === 0;\n    }\n  }, {\n    key: \"gt\",\n    value: function gt(num) {\n      return this.cmp(num) > 0;\n    }\n  }, {\n    key: \"gtn\",\n    value: function gtn(num) {\n      return this.cmpn(num) > 0;\n    }\n  }, {\n    key: \"gte\",\n    value: function gte(num) {\n      return this.cmp(num) >= 0;\n    }\n  }, {\n    key: \"gten\",\n    value: function gten(num) {\n      return this.cmpn(num) >= 0;\n    }\n  }, {\n    key: \"lt\",\n    value: function lt(num) {\n      return this.cmp(num) < 0;\n    }\n  }, {\n    key: \"ltn\",\n    value: function ltn(num) {\n      return this.cmpn(num) < 0;\n    }\n  }, {\n    key: \"lte\",\n    value: function lte(num) {\n      return this.cmp(num) <= 0;\n    }\n  }, {\n    key: \"lten\",\n    value: function lten(num) {\n      return this.cmpn(num) <= 0;\n    }\n  }, {\n    key: \"sign\",\n    value: function sign() {\n      if (this.negative !== 0) return -1;\n      if (this.length === 1 && this.words[0] === 0) return 0;\n      return 1;\n    }\n  }, {\n    key: \"isZero\",\n    value: function isZero() {\n      return this.length === 1 && this.words[0] === 0;\n    }\n  }, {\n    key: \"isNeg\",\n    value: function isNeg() {\n      return this.negative !== 0;\n    }\n  }, {\n    key: \"isPos\",\n    value: function isPos() {\n      return this.negative === 0;\n    }\n  }, {\n    key: \"isOdd\",\n    value: function isOdd() {\n      return (this.words[0] & 1) === 1;\n    }\n  }, {\n    key: \"isEven\",\n    value: function isEven() {\n      return (this.words[0] & 1) === 0;\n    }\n    /*\n     * Unsigned Comparison\n     */\n\n  }, {\n    key: \"ucmp\",\n    value: function ucmp(num) {\n      enforce(BN.isBN(num), 'num', 'bignum');\n      if (this.length < num.length) return -1;\n      if (this.length > num.length) return 1;\n\n      for (var i = this.length - 1; i >= 0; i--) {\n        var a = this.words[i] | 0;\n        var b = num.words[i] | 0;\n        if (a === b) continue;\n        return (a > b) - (a < b);\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"ucmpn\",\n    value: function ucmpn(num) {\n      enforce(isSMI(num), 'num', 'smi');\n      if (this.length > 1) return 1;\n      var w = this.words[0] | 0;\n      if (num < 0) num = -num;\n      return (w > num) - (w < num);\n    }\n    /*\n     * Number Theoretic Functions\n     */\n\n  }, {\n    key: \"legendre\",\n    value: function legendre(num) {\n      var red = HAS_BIGINT ? BN.red(num) : BN.mont(num);\n      return this.toRed(red).redLegendre();\n    }\n  }, {\n    key: \"jacobi\",\n    value: function jacobi(num) {\n      enforce(BN.isBN(num), 'num', 'bignum');\n      if (num.isZero() || num.isEven()) throw new Error('jacobi: `num` must be odd.');\n\n      var a = this._cloneNormal();\n\n      var b = num.clone();\n      var j = 1;\n\n      if (b.isNeg()) {\n        if (a.isNeg()) j = -1;\n        b.ineg();\n      }\n\n      for (;;) {\n        if (b.cmpn(1) === 0) return j;\n        if (a.isZero()) return 0;\n        a.imod(b);\n        if (a.isZero()) return 0;\n        var s = a.zeroBits();\n\n        if (s & 1) {\n          var bmod8 = b.andln(7);\n          if (bmod8 === 3 || bmod8 === 5) j = -j;\n        }\n\n        var c = a.iushrn(s);\n        if (b.andln(3) === 3 && c.andln(3) === 3) j = -j;\n        a = b;\n        b = c;\n      }\n    }\n  }, {\n    key: \"kronecker\",\n    value: function kronecker(num) {\n      enforce(BN.isBN(num), 'num', 'bignum');\n      var table = [0, 1, 0, -1, 0, -1, 0, 1];\n\n      var a = this._cloneNormal();\n\n      var b = num.clone();\n      var s = 1;\n      if (b.isZero()) return a.ucmpn(1) === 0 ? s : 0;\n      if (!a.isOdd() && !b.isOdd()) return 0;\n      var z = b.zeroBits();\n      b.iushrn(z);\n      if (z & 1) s = table[a.andln(7)];\n\n      if (b.isNeg()) {\n        if (a.isNeg()) s = -s;\n        b.ineg();\n      }\n\n      for (;;) {\n        if (a.isZero()) return b.cmpn(1) === 0 ? s : 0;\n\n        var _z = a.zeroBits();\n\n        a.iushrn(_z);\n        if (_z & 1) s *= table[b.andln(7)];\n        var w = a.words[0] ^ a.negative * 0x3ffffff;\n        if (w & b.words[0] & 2) s = -s;\n        b.imod(a);\n        var _ref6 = [b, a];\n        a = _ref6[0];\n        b = _ref6[1];\n        b.negative = 0;\n      }\n    }\n  }, {\n    key: \"igcd\",\n    value: function igcd(num) {\n      return this.gcd(num)._move(this);\n    }\n  }, {\n    key: \"gcd\",\n    value: function gcd(num) {\n      enforce(BN.isBN(num), 'num', 'bignum');\n      if (this.isZero()) return num.abs();\n      if (num.isZero()) return this.abs();\n      var a = this.clone();\n      var b = num.clone();\n      a.negative = 0;\n      b.negative = 0; // Remove common factor of two.\n\n      var shift = a._factor2(b);\n\n      if (shift !== 0) {\n        a.iushrn(shift);\n        b.iushrn(shift);\n      }\n\n      for (;;) {\n        var az = a.zeroBits();\n        var bz = b.zeroBits();\n        if (az !== 0) a.iushrn(az);\n        if (bz !== 0) b.iushrn(bz);\n        var cmp = a.ucmp(b);\n\n        if (cmp < 0) {\n          // a > b\n          var _ref7 = [b, a];\n          a = _ref7[0];\n          b = _ref7[1];\n        } else if (cmp === 0 || b.ucmpn(1) === 0) {\n          // Break if a == b.\n          // Break if b == 1 to avoid repeated subtraction.\n          break;\n        }\n\n        a._isub(a, b);\n      }\n\n      return b.iushln(shift);\n    }\n  }, {\n    key: \"ilcm\",\n    value: function ilcm(num) {\n      return this.lcm(num)._move(this);\n    }\n  }, {\n    key: \"lcm\",\n    value: function lcm(num) {\n      enforce(BN.isBN(num), 'num', 'bignum');\n      if (this.isZero() || num.isZero()) return new BN(0);\n      return this.quo(this.gcd(num)).mul(num).iabs();\n    }\n  }, {\n    key: \"egcd\",\n    value: function egcd(num) {\n      enforce(BN.isBN(num), 'num', 'bignum');\n\n      if (this.isZero()) {\n        return [new BN(0), new BN(num.sign()), num.abs()];\n      }\n\n      if (num.isZero()) {\n        return [new BN(this.sign()), new BN(0), this.abs()];\n      }\n\n      var x = this.clone();\n      var y = num.clone();\n      x.negative = 0;\n      y.negative = 0; // A * x + B * y = x\n\n      var A = new BN(1);\n      var B = new BN(0); // C * x + D * y = y\n\n      var C = new BN(0);\n      var D = new BN(1); // Remove common factor of two.\n\n      var g = x._factor2(y);\n\n      if (g !== 0) {\n        x.iushrn(g);\n        y.iushrn(g);\n      }\n\n      var yp = y.clone();\n      var xp = x.clone();\n\n      while (!x.isZero()) {\n        var i = 0;\n\n        for (var im = 1; (x.words[0] & im) === 0 && i < 26; im <<= 1) {\n          i += 1;\n        }\n\n        if (i > 0) {\n          x.iushrn(i);\n\n          while (i > 0) {\n            if (A.isOdd() || B.isOdd()) {\n              A.iadd(yp);\n              B.isub(xp);\n            }\n\n            A.iushrn(1);\n            B.iushrn(1);\n            i -= 1;\n          }\n        }\n\n        var j = 0;\n\n        for (var jm = 1; (y.words[0] & jm) === 0 && j < 26; jm <<= 1) {\n          j += 1;\n        }\n\n        if (j > 0) {\n          y.iushrn(j);\n\n          while (j > 0) {\n            if (C.isOdd() || D.isOdd()) {\n              C.iadd(yp);\n              D.isub(xp);\n            }\n\n            C.iushrn(1);\n            D.iushrn(1);\n            j -= 1;\n          }\n        }\n\n        if (x.cmp(y) >= 0) {\n          x.isub(y);\n          A.isub(C);\n          B.isub(D);\n        } else {\n          y.isub(x);\n          C.isub(A);\n          D.isub(B);\n        }\n      }\n\n      if (this.negative !== 0) C.ineg();\n      if (num.negative !== 0) D.ineg();\n      return [C, D, y.iushln(g)];\n    }\n  }, {\n    key: \"iinvert\",\n    value: function iinvert(num) {\n      return this.invert(num)._move(this);\n    }\n  }, {\n    key: \"invert\",\n    value: function invert(num) {\n      enforce(BN.isBN(num), 'num', 'bignum');\n      range(num.sign() > 0, 'invert');\n      if (num.cmpn(1) === 0) throw new RangeError('Not invertible.');\n\n      var _this$egcd = this.egcd(num),\n          _this$egcd2 = _slicedToArray(_this$egcd, 3),\n          s = _this$egcd2[0],\n          g = _this$egcd2[2];\n\n      if (g.cmpn(1) !== 0) throw new RangeError('Not invertible.');\n      return s.imod(num);\n    }\n  }, {\n    key: \"ifermat\",\n    value: function ifermat(num) {\n      return this.fermat(num)._move(this);\n    }\n  }, {\n    key: \"fermat\",\n    value: function fermat(num) {\n      var red = HAS_BIGINT ? BN.red(num) : BN.mont(num);\n      return this.toRed(red).redFermat().fromRed();\n    }\n  }, {\n    key: \"ipowm\",\n    value: function ipowm(y, m, mont) {\n      return this.powm(y, m, mont)._move(this);\n    }\n  }, {\n    key: \"powm\",\n    value: function powm(y, m, mont) {\n      var red = !HAS_BIGINT && mont ? BN.mont(m) : BN.red(m);\n      return this.toRed(red).redPow(y).fromRed();\n    }\n  }, {\n    key: \"ipowmn\",\n    value: function ipowmn(y, m, mont) {\n      return this.powmn(y, m, mont)._move(this);\n    }\n  }, {\n    key: \"powmn\",\n    value: function powmn(y, m, mont) {\n      var red = mont ? BN.mont(m) : BN.red(m);\n      return this.toRed(red).redPown(y).fromRed();\n    }\n  }, {\n    key: \"isqrtm\",\n    value: function isqrtm(p) {\n      return this.sqrtm(p)._move(this);\n    }\n  }, {\n    key: \"sqrtm\",\n    value: function sqrtm(p) {\n      enforce(BN.isBN(p), 'p', 'bignum');\n      var red;\n\n      if (p.andln(3) === 3 || p.andln(7) === 5) {\n        // Probably not worth the setup.\n        red = BN.red(p);\n      } else {\n        red = BN.mont(p);\n      }\n\n      return this.toRed(red).redSqrt().fromRed();\n    }\n  }, {\n    key: \"isqrtpq\",\n    value: function isqrtpq(p, q) {\n      return this.sqrtpq(p, q)._move(this);\n    }\n  }, {\n    key: \"sqrtpq\",\n    value: function sqrtpq(p, q) {\n      var sp = this.sqrtm(p);\n      var sq = this.sqrtm(q);\n\n      var _p$egcd = p.egcd(q),\n          _p$egcd2 = _slicedToArray(_p$egcd, 2),\n          mp = _p$egcd2[0],\n          mq = _p$egcd2[1];\n\n      var lhs = sq.mul(mp).mul(p);\n      var rhs = sp.mul(mq).mul(q);\n      var n = p.mul(q);\n      return lhs.iadd(rhs).imod(n);\n    }\n    /*\n     * Primality Testing\n     */\n\n  }, {\n    key: \"isPrime\",\n    value: function isPrime(rng, reps, limit) {\n      enforce(reps >>> 0 === reps, 'reps', 'uint32');\n      if (!this.isPrimeMR(rng, reps + 1, true)) return false;\n      if (!this.isPrimeLucas(limit)) return false;\n      return true;\n    }\n  }, {\n    key: \"isPrimeMR\",\n    value: function isPrimeMR(rng, reps) {\n      var force2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      enforce(reps >>> 0 === reps, 'reps', 'uint32');\n      enforce(reps > 0, 'reps', 'integer');\n      enforce(typeof force2 === 'boolean', 'force2', 'boolean');\n      var n = this;\n\n      if (n.cmpn(7) < 0) {\n        return n.cmpn(2) === 0 || n.cmpn(3) === 0 || n.cmpn(5) === 0;\n      }\n\n      if (n.isEven()) return false;\n      var nm1 = n.subn(1);\n      var nm3 = nm1.subn(2);\n      var k = nm1.zeroBits();\n      var q = nm1.ushrn(k);\n      var red = BN.red(n);\n      var rnm1 = nm1.toRed(red);\n      var rone = new BN(1).toRed(red);\n\n      next: for (var i = 0; i < reps; i++) {\n        var x = void 0;\n\n        if (i === reps - 1 && force2) {\n          x = new BN(2);\n        } else {\n          x = BN.random(rng, 0, nm3);\n          x.iaddn(2);\n        }\n\n        var y = x.toRed(red).redPow(q);\n        if (y.cmp(rone) === 0 || y.cmp(rnm1) === 0) continue;\n\n        for (var j = 1; j < k; j++) {\n          y = y.redSqr();\n          if (y.cmp(rnm1) === 0) continue next;\n          if (y.cmp(rone) === 0) return false;\n        }\n\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"isPrimeLucas\",\n    value: function isPrimeLucas() {\n      var limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      enforce(limit >>> 0 === limit, 'limit', 'uint32');\n      var n = this; // Ignore 0 and 1.\n\n      if (n.cmpn(1) <= 0) return false; // Two is the only even prime.\n\n      if (n.isEven()) return n.cmpn(2) === 0;\n      var p = 3;\n\n      for (;;) {\n        if (p > 10000) {\n          // Thought to be impossible.\n          throw new Error(\"Cannot find (D/n) = -1 for \".concat(n.toString(10), \".\"));\n        }\n\n        if (limit !== 0 && p > limit) {\n          // Optional DoS limit.\n          return false;\n        }\n\n        var d = new BN(p * p - 4);\n        var j = d.jacobi(n);\n        if (j === -1) break;\n        if (j === 0) return n.cmpn(p + 2) === 0;\n\n        if (p === 40) {\n          if (n.isSquare()) return false;\n        }\n\n        p += 1;\n      }\n\n      var s = n.addn(1);\n      var r = s.zeroBits();\n      var nm2 = n.subn(2);\n      var x = new BN(2);\n      var y = new BN(p);\n      s.iushrn(r);\n\n      for (var i = s.bitLength(); i >= 0; i--) {\n        if (s.utestn(i)) {\n          x = x.mul(y).iadd(n).isubn(p).imod(n);\n          y = y.sqr().iadd(nm2).imod(n);\n        } else {\n          y = y.mul(x).iadd(n).isubn(p).imod(n);\n          x = x.sqr().iadd(nm2).imod(n);\n        }\n      }\n\n      if (x.cmpn(2) === 0 || x.cmp(nm2) === 0) {\n        var a = x.muln(p);\n        var b = y.ushln(1);\n\n        if (a.cmp(b) < 0) {\n          var _ref8 = [b, a];\n          a = _ref8[0];\n          b = _ref8[1];\n        }\n\n        if (a.isub(b).imod(n).isZero()) return true;\n      }\n\n      for (var t = 0; t < r - 1; t++) {\n        if (x.isZero()) return true;\n        if (x.cmpn(2) === 0) return false;\n        x = x.sqr().isubn(2).imod(n);\n      }\n\n      return false;\n    }\n    /*\n     * Twos Complement\n     */\n\n  }, {\n    key: \"toTwos\",\n    value: function toTwos(width) {\n      if (this.negative !== 0) return this.abs().inotn(width).iaddn(1);\n      return this.clone();\n    }\n  }, {\n    key: \"fromTwos\",\n    value: function fromTwos(width) {\n      enforce(width >>> 0 === width, 'width', 'uint32');\n      range(width > 0, 'width');\n      if (this.testn(width - 1)) return this.notn(width).iaddn(1).ineg();\n      return this.clone();\n    }\n    /*\n     * Reduction Context\n     */\n\n  }, {\n    key: \"toRed\",\n    value: function toRed(ctx) {\n      enforce(ctx instanceof Red, 'ctx', 'reduction context');\n      if (this.red) throw new Error('Already in reduction context.');\n      return ctx.convertTo(this);\n    }\n  }, {\n    key: \"fromRed\",\n    value: function fromRed() {\n      red(this.red, 'fromRed');\n      return this.red.convertFrom(this);\n    }\n  }, {\n    key: \"forceRed\",\n    value: function forceRed(ctx) {\n      enforce(ctx instanceof Red, 'ctx', 'reduction context');\n\n      if (this.red) {\n        if (!ctx.m.eq(this.red.m) || ctx.mont !== this.red.mont) throw new Error('Already in reduction context.');\n      } else {\n        range(this.negative === 0, 'red');\n        range(this.ucmp(ctx.m) < 0, 'red');\n      }\n\n      return this.clone()._forceRed(ctx);\n    }\n  }, {\n    key: \"redIAdd\",\n    value: function redIAdd(num) {\n      enforce(BN.isBN(num), 'num', 'bignum');\n      red(this.red, 'redIAdd');\n      return this.red.iadd(this, num);\n    }\n  }, {\n    key: \"redAdd\",\n    value: function redAdd(num) {\n      enforce(BN.isBN(num), 'num', 'bignum');\n      red(this.red, 'redAdd');\n      return this.red.add(this, num);\n    }\n  }, {\n    key: \"redIAddn\",\n    value: function redIAddn(num) {\n      enforce(isSMI(num), 'num', 'smi');\n      red(this.red, 'redIAddn');\n      return this.red.iaddn(this, num);\n    }\n  }, {\n    key: \"redAddn\",\n    value: function redAddn(num) {\n      enforce(isSMI(num), 'num', 'smi');\n      red(this.red, 'redAddn');\n      return this.red.addn(this, num);\n    }\n  }, {\n    key: \"redISub\",\n    value: function redISub(num) {\n      enforce(BN.isBN(num), 'num', 'bignum');\n      red(this.red, 'redISub');\n      return this.red.isub(this, num);\n    }\n  }, {\n    key: \"redSub\",\n    value: function redSub(num) {\n      enforce(BN.isBN(num), 'num', 'bignum');\n      red(this.red, 'redSub');\n      return this.red.sub(this, num);\n    }\n  }, {\n    key: \"redISubn\",\n    value: function redISubn(num) {\n      enforce(isSMI(num), 'num', 'smi');\n      red(this.red, 'redISubn');\n      return this.red.isubn(this, num);\n    }\n  }, {\n    key: \"redSubn\",\n    value: function redSubn(num) {\n      enforce(isSMI(num), 'num', 'smi');\n      red(this.red, 'redSubn');\n      return this.red.subn(this, num);\n    }\n  }, {\n    key: \"redIMul\",\n    value: function redIMul(num) {\n      enforce(BN.isBN(num), 'num', 'bignum');\n      red(this.red, 'redIMul');\n      return this.red.imul(this, num);\n    }\n  }, {\n    key: \"redMul\",\n    value: function redMul(num) {\n      enforce(BN.isBN(num), 'num', 'bignum');\n      red(this.red, 'redMul');\n      return this.red.mul(this, num);\n    }\n  }, {\n    key: \"redIMuln\",\n    value: function redIMuln(num) {\n      enforce(isSMI(num), 'num', 'smi');\n      red(this.red, 'redIMuln');\n      return this.red.imuln(this, num);\n    }\n  }, {\n    key: \"redMuln\",\n    value: function redMuln(num) {\n      enforce(isSMI(num), 'num', 'smi');\n      red(this.red, 'redMuln');\n      return this.red.muln(this, num);\n    }\n  }, {\n    key: \"redIDiv\",\n    value: function redIDiv(num) {\n      enforce(BN.isBN(num), 'num', 'bignum');\n      red(this.red, 'redIDiv');\n      return this.red.idiv(this, num);\n    }\n  }, {\n    key: \"redDiv\",\n    value: function redDiv(num) {\n      enforce(BN.isBN(num), 'num', 'bignum');\n      red(this.red, 'redDiv');\n      return this.red.div(this, num);\n    }\n  }, {\n    key: \"redIDivn\",\n    value: function redIDivn(num) {\n      enforce(isSMI(num), 'num', 'smi');\n      red(this.red, 'redIDivn');\n      return this.red.idivn(this, num);\n    }\n  }, {\n    key: \"redDivn\",\n    value: function redDivn(num) {\n      enforce(isSMI(num), 'num', 'smi');\n      red(this.red, 'redDivn');\n      return this.red.divn(this, num);\n    }\n  }, {\n    key: \"redIPow\",\n    value: function redIPow(num) {\n      enforce(BN.isBN(num), 'num', 'bignum');\n      red(this.red, 'redIPow');\n      nonred(!num.red, 'redIPow');\n      return this.red.ipow(this, num);\n    }\n  }, {\n    key: \"redPow\",\n    value: function redPow(num) {\n      enforce(BN.isBN(num), 'num', 'bignum');\n      red(this.red, 'redPow');\n      nonred(!num.red, 'redPow');\n      return this.red.pow(this, num);\n    }\n  }, {\n    key: \"redIPown\",\n    value: function redIPown(num) {\n      enforce(isSMI(num), 'num', 'smi');\n      red(this.red, 'redIPown');\n      return this.red.ipown(this, num);\n    }\n  }, {\n    key: \"redPown\",\n    value: function redPown(num) {\n      enforce(isSMI(num), 'num', 'smi');\n      red(this.red, 'redPown');\n      return this.red.pown(this, num);\n    }\n  }, {\n    key: \"redISqr\",\n    value: function redISqr() {\n      red(this.red, 'redISqr');\n      return this.red.isqr(this);\n    }\n  }, {\n    key: \"redSqr\",\n    value: function redSqr() {\n      red(this.red, 'redSqr');\n      return this.red.sqr(this);\n    }\n  }, {\n    key: \"redISqrt\",\n    value: function redISqrt() {\n      red(this.red, 'redISqrt');\n      return this.red.isqrt(this);\n    }\n  }, {\n    key: \"redSqrt\",\n    value: function redSqrt() {\n      red(this.red, 'redSqrt');\n      return this.red.sqrt(this);\n    }\n  }, {\n    key: \"redIDivSqrt\",\n    value: function redIDivSqrt(v) {\n      red(this.red, 'redIDivSqrt');\n      return this.red.idivsqrt(this, v);\n    }\n  }, {\n    key: \"redDivSqrt\",\n    value: function redDivSqrt(v) {\n      red(this.red, 'redDivSqrt');\n      return this.red.divsqrt(this, v);\n    }\n  }, {\n    key: \"redIsSquare\",\n    value: function redIsSquare() {\n      red(this.red, 'redIsSquare');\n      return this.red.isSquare(this);\n    }\n  }, {\n    key: \"redIShl\",\n    value: function redIShl(num) {\n      enforce(BN.isBN(num), 'num', 'bignum');\n      red(this.red, 'redIShl');\n      nonred(!num.red, 'redIShl');\n      return this.red.ishl(this, num);\n    }\n  }, {\n    key: \"redShl\",\n    value: function redShl(num) {\n      enforce(BN.isBN(num), 'num', 'bignum');\n      red(this.red, 'redShl');\n      nonred(!num.red, 'redShl');\n      return this.red.shl(this, num);\n    }\n  }, {\n    key: \"redIShln\",\n    value: function redIShln(num) {\n      enforce(num >>> 0 === num, 'num', 'uint32');\n      red(this.red, 'redIShln');\n      return this.red.ishln(this, num);\n    }\n  }, {\n    key: \"redShln\",\n    value: function redShln(num) {\n      enforce(num >>> 0 === num, 'num', 'uint32');\n      red(this.red, 'redShln');\n      return this.red.shln(this, num);\n    }\n  }, {\n    key: \"redINeg\",\n    value: function redINeg() {\n      red(this.red, 'redINeg');\n      return this.red.ineg(this);\n    }\n  }, {\n    key: \"redNeg\",\n    value: function redNeg() {\n      red(this.red, 'redNeg');\n      return this.red.neg(this);\n    }\n  }, {\n    key: \"redEq\",\n    value: function redEq(num) {\n      enforce(BN.isBN(num), 'num', 'bignum');\n      red(this.red, 'redEq');\n      return this.red.eq(this, num);\n    }\n  }, {\n    key: \"redEqn\",\n    value: function redEqn(num) {\n      enforce(isSMI(num), 'num', 'smi');\n      red(this.red, 'redEqn');\n      return this.red.eqn(this, num);\n    }\n  }, {\n    key: \"redIsHigh\",\n    value: function redIsHigh() {\n      red(this.red, 'redIsHigh');\n      return this.red.isHigh(this);\n    }\n  }, {\n    key: \"redIsLow\",\n    value: function redIsLow() {\n      red(this.red, 'redIsLow');\n      return this.red.isLow(this);\n    }\n  }, {\n    key: \"redIsOdd\",\n    value: function redIsOdd() {\n      red(this.red, 'redIsOdd');\n      return this.red.isOdd(this);\n    }\n  }, {\n    key: \"redIsEven\",\n    value: function redIsEven() {\n      red(this.red, 'redIsEven');\n      return this.red.isEven(this);\n    }\n  }, {\n    key: \"redLegendre\",\n    value: function redLegendre() {\n      red(this.red, 'redLegendre');\n      return this.red.legendre(this);\n    }\n  }, {\n    key: \"redJacobi\",\n    value: function redJacobi() {\n      red(this.red, 'redJacobi');\n      return this.red.jacobi(this);\n    }\n  }, {\n    key: \"redKronecker\",\n    value: function redKronecker() {\n      red(this.red, 'redKronecker');\n      return this.red.kronecker(this);\n    }\n  }, {\n    key: \"redIInvert\",\n    value: function redIInvert() {\n      red(this.red, 'redIInvert');\n      return this.red.iinvert(this);\n    }\n  }, {\n    key: \"redInvert\",\n    value: function redInvert() {\n      red(this.red, 'redInvert');\n      return this.red.invert(this);\n    }\n  }, {\n    key: \"redIFermat\",\n    value: function redIFermat() {\n      red(this.red, 'redIFermat');\n      return this.red.ifermat(this);\n    }\n  }, {\n    key: \"redFermat\",\n    value: function redFermat() {\n      red(this.red, 'redFermat');\n      return this.red.fermat(this);\n    }\n    /*\n     * Internal\n     */\n\n  }, {\n    key: \"_move\",\n    value: function _move(dest) {\n      dest.words = this.words;\n      dest.length = this.length;\n      dest.negative = this.negative;\n      dest.red = this.red;\n      return dest;\n    }\n  }, {\n    key: \"_alloc\",\n    value: function _alloc(size) {\n      while (this.words.length < size) {\n        this.words.push(0);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"_expand\",\n    value: function _expand(size) {\n      this._alloc(size);\n\n      while (this.length < size) {\n        this.words[this.length++] = 0;\n      }\n\n      return this;\n    }\n  }, {\n    key: \"_strip\",\n    value: function _strip() {\n      while (this.length > 1 && this.words[this.length - 1] === 0) {\n        this.length -= 1;\n      }\n\n      return this._normalize();\n    }\n  }, {\n    key: \"_normalize\",\n    value: function _normalize() {\n      assert(this.length > 0); // -0 = 0\n\n      if (this.length === 1 && this.words[0] === 0) this.negative = 0;\n      return this;\n    }\n  }, {\n    key: \"_check\",\n    value: function _check() {\n      // We never have a zero length number.\n      assert(this.length > 0); // Cannot exceed array bounds.\n\n      assert(this.length <= this.words.length);\n\n      if (this.length === 1) {\n        // Must be normalized.\n        if (this.words[0] === 0) assert(this.negative === 0);\n        return this;\n      } // Must be stripped.\n\n\n      assert(this.words[this.length - 1] !== 0);\n      return this;\n    }\n  }, {\n    key: \"_invertp\",\n    value: function _invertp(p) {\n      enforce(BN.isBN(p), 'p', 'bignum');\n      assert(this.negative === 0);\n      assert(p.sign() > 0);\n      if (this.isZero() || p.cmpn(1) === 0) throw new RangeError('Not invertible.');\n      var a = this.clone();\n      var b = p.clone();\n      var x1 = new BN(1);\n      var x2 = new BN(0);\n      var delta = b.clone();\n\n      while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n        var i = 0;\n\n        for (var im = 1; (a.words[0] & im) === 0 && i < 26; im <<= 1) {\n          i += 1;\n        }\n\n        if (i > 0) {\n          a.iushrn(i);\n\n          while (i > 0) {\n            if (x1.isOdd()) x1.iadd(delta);\n            x1.iushrn(1);\n            i -= 1;\n          }\n        }\n\n        var j = 0;\n\n        for (var jm = 1; (b.words[0] & jm) === 0 && j < 26; jm <<= 1) {\n          j += 1;\n        }\n\n        if (j > 0) {\n          b.iushrn(j);\n\n          while (j > 0) {\n            if (x2.isOdd()) x2.iadd(delta);\n            x2.iushrn(1);\n            j -= 1;\n          }\n        }\n\n        if (a.cmp(b) >= 0) {\n          a.isub(b);\n          x1.isub(x2);\n        } else {\n          b.isub(a);\n          x2.isub(x1);\n        }\n      } // Quick reduction (typically +/- 2P).\n\n\n      var res = a.cmpn(1) === 0 ? x1 : x2;\n\n      if (res.ucmp(p) >= 0) {\n        res._isub(res, p);\n\n        if (res.ucmp(p) >= 0) res._isub(res, p);\n      }\n\n      if (res.isNeg()) res.iadd(p);\n      return res;\n    }\n  }, {\n    key: \"_factor2\",\n    value: function _factor2(num) {\n      // Find common factor of two.\n      // Expects inputs to be non-zero.\n      if ((this.words[0] | num.words[0]) & 1) return 0;\n      var len = Math.min(this.length, num.length);\n      var r = 0;\n\n      for (var i = 0; i < len; i++) {\n        var b = _zeroBits(this.words[i] | num.words[i]);\n\n        r += b;\n        if (b !== 26) break;\n      }\n\n      return r;\n    }\n  }, {\n    key: \"_cloneNormal\",\n    value: function _cloneNormal() {\n      return this.red ? this.fromRed() : this.clone();\n    }\n  }, {\n    key: \"_forceRed\",\n    value: function _forceRed(ctx) {\n      this.red = ctx;\n      return this;\n    }\n    /*\n     * Helpers\n     */\n\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var copy = new BN();\n      copy.words = new Array(this.length);\n\n      for (var i = 0; i < this.length; i++) {\n        copy.words[i] = this.words[i];\n      }\n\n      copy.length = this.length;\n      copy.negative = this.negative;\n      copy.red = this.red;\n      return copy;\n    }\n  }, {\n    key: \"inject\",\n    value: function inject(num) {\n      enforce(BN.isBN(num), 'num', 'bignum');\n\n      this._alloc(num.length);\n\n      for (var i = 0; i < num.length; i++) {\n        this.words[i] = num.words[i];\n      }\n\n      this.length = num.length;\n      this.negative = num.negative;\n      this.red = num.red;\n      return this;\n    }\n  }, {\n    key: \"set\",\n    value: function set(num, endian) {\n      return this.fromNumber(num, endian);\n    }\n  }, {\n    key: \"swap\",\n    value: function swap(num) {\n      enforce(BN.isBN(num), 'num', 'bignum');\n      var x = this;\n      var y = num;\n      var _ref9 = [y.words, x.words];\n      x.words = _ref9[0];\n      y.words = _ref9[1];\n      var _ref10 = [y.length, x.length];\n      x.length = _ref10[0];\n      y.length = _ref10[1];\n      var _ref11 = [y.negative, x.negative];\n      x.negative = _ref11[0];\n      y.negative = _ref11[1];\n      var _ref12 = [y.red, x.red];\n      x.red = _ref12[0];\n      y.red = _ref12[1];\n      return x;\n    }\n  }, {\n    key: \"reverse\",\n    value: function reverse() {\n      var neg = this.negative;\n      this.fromBuffer(this.toBuffer('be'), 'le');\n      this.negative = neg;\n      return this;\n    }\n  }, {\n    key: \"byteLength\",\n    value: function byteLength() {\n      return Math.ceil(this.bitLength() / 8);\n    }\n  }, {\n    key: \"bitLength\",\n    value: function bitLength() {\n      var w = this.words[this.length - 1];\n      var hi = countBits(w);\n      return (this.length - 1) * 26 + hi;\n    }\n  }, {\n    key: \"zeroBits\",\n    value: function zeroBits() {\n      if (this.isZero()) return 0;\n      if (this.isOdd()) return 0;\n      var r = 0;\n\n      for (var i = 0; i < this.length; i++) {\n        var b = _zeroBits(this.words[i]);\n\n        r += b;\n        if (b !== 26) break;\n      }\n\n      return r;\n    }\n  }, {\n    key: \"isSafe\",\n    value: function isSafe() {\n      if (this.length <= 2) return true;\n      if (this.length === 3 && this.words[2] === 0x01) return true;\n      return false;\n    }\n  }, {\n    key: \"word\",\n    value: function word(pos) {\n      enforce(pos >>> 0 === pos, 'pos', 'uint32');\n      if (pos >= this.length) return 0;\n      return this.words[pos];\n    }\n  }, {\n    key: custom,\n    value: function value() {\n      var prefix = 'BN';\n      if (this.red) prefix = 'BN-R';\n      return \"<\".concat(prefix, \": \").concat(this.toString(10), \">\");\n    }\n    /*\n     * Constant Time\n     */\n\n  }, {\n    key: \"csign\",\n    value: function csign() {\n      return this.negative * -2 + 1 - this.czero();\n    }\n  }, {\n    key: \"czero\",\n    value: function czero() {\n      var zword = this.words[0] - 1 >>> 31;\n      return this.length - 2 >>> 31 & zword;\n    }\n  }, {\n    key: \"cneg\",\n    value: function cneg() {\n      return this.negative;\n    }\n  }, {\n    key: \"cpos\",\n    value: function cpos() {\n      return this.negative ^ 1;\n    }\n  }, {\n    key: \"ceq\",\n    value: function ceq(num) {\n      enforce(BN.isBN(num), 'num', 'bignum'); // Assumes `num` is the \"constant size\"\n      // parameter. Note that constant size\n      // doesn't necessarily mean secret.\n\n      var z = 0;\n\n      for (var i = 0; i < num.length; i++) {\n        z |= this.words[i % this.length] ^ num.words[i];\n      }\n\n      z |= this.length ^ num.length;\n      z |= this.negative ^ num.negative;\n      return z - 1 >>> 31;\n    }\n  }, {\n    key: \"ceqn\",\n    value: function ceqn(num) {\n      var neg = num >> 31 & 1;\n      var word = (num | 0) * (-neg | 1) & 0x3ffffff;\n      var z = 0;\n      z |= this.words[0] ^ word;\n      z |= this.length ^ 1;\n      z |= this.negative ^ neg;\n      return z - 1 >>> 31;\n    }\n  }, {\n    key: \"cswap\",\n    value: function cswap(num, flag) {\n      enforce(BN.isBN(num), 'num', 'bignum');\n      var x = this;\n      var y = num;\n      var cond = (flag >> 31 | -flag >> 31) & 1;\n      var mask = -cond & 0x3ffffff;\n\n      x._alloc(y.words.length);\n\n      y._alloc(x.words.length);\n\n      for (var i = 0; i < x.words.length; i++) {\n        var word = (x.words[i] ^ y.words[i]) & mask;\n        x.words[i] ^= word;\n        y.words[i] ^= word;\n      }\n\n      var length = (x.length ^ y.length) & mask;\n      var negative = (x.negative ^ y.negative) & mask;\n      x.length ^= length;\n      y.length ^= length;\n      x.negative ^= negative;\n      y.negative ^= negative;\n      return this;\n    }\n  }, {\n    key: \"cinject\",\n    value: function cinject(num, flag) {\n      enforce(BN.isBN(num), 'num', 'bignum');\n      var x = this;\n      var y = num;\n      var cond = (flag >> 31 | -flag >> 31) & 1;\n      var mask0 = cond - 1 & 0x3ffffff;\n      var mask1 = ~(cond - 1) & 0x3ffffff;\n\n      x._alloc(y.length);\n\n      for (var i = 0; i < y.length; i++) {\n        x.words[i] = x.words[i] & mask0 | y.words[i] & mask1;\n      }\n\n      x.length = x.length & mask0 | y.length & mask1;\n      x.negative = x.negative & mask0 | y.negative & mask1;\n      return this;\n    }\n  }, {\n    key: \"cset\",\n    value: function cset(num, flag) {\n      var cond = (flag >> 31 | -flag >> 31) & 1;\n      var mask0 = cond - 1 & 0x3ffffff;\n      var mask1 = ~(cond - 1) & 0x3ffffff;\n      var neg = num >> 31 & 1;\n      var word = (num | 0) * (-neg | 1) & 0x3ffffff;\n      this.words[0] = this.words[0] & mask0 | word & mask1;\n      this.length = this.length & mask0 | 1 & mask1;\n      this.negative = this.negative & mask0 | neg & mask1;\n      return this;\n    }\n    /*\n     * Conversion\n     */\n\n  }, {\n    key: \"toNumber\",\n    value: function toNumber() {\n      var num = this.words[0];\n\n      if (this.length === 2) {\n        num += this.words[1] * 0x4000000;\n      } else if (this.length === 3 && this.words[2] === 0x01) {\n        // Note: at this stage it is known that the top bit is set.\n        num += 0x10000000000000 + this.words[1] * 0x4000000;\n      } else if (this.length > 2) {\n        throw new RangeError('Number can only safely store up to 53 bits.');\n      }\n\n      return this.negative !== 0 ? -num : num;\n    }\n  }, {\n    key: \"toDouble\",\n    value: function toDouble() {\n      var num = 0;\n\n      for (var i = this.length - 1; i >= 0; i--) {\n        num = num * 0x4000000 + this.words[i];\n      }\n\n      return this.negative !== 0 ? -num : num;\n    }\n  }, {\n    key: \"valueOf\",\n    value: function valueOf() {\n      return this.toDouble();\n    }\n  }, {\n    key: \"toBigInt\",\n    value: function toBigInt() {\n      if (!HAS_BIGINT) throw new Error('BigInt is not supported!');\n      var s52 = BigInt(52);\n      var s26 = BigInt(26);\n      var i = this.length - 1;\n      var num = BigInt(0);\n\n      for (; i >= 1; i -= 2) {\n        var hi = this.words[i] * 0x4000000;\n        var lo = this.words[i - 1];\n        num = num << s52 | BigInt(hi + lo);\n      }\n\n      if (i >= 0) num = num << s26 | BigInt(this.words[0]);\n      return this.negative !== 0 ? -num : num;\n    }\n  }, {\n    key: \"toBool\",\n    value: function toBool() {\n      return !this.isZero();\n    }\n  }, {\n    key: \"toString\",\n    value: function toString(base, padding) {\n      base = getBase(base);\n      if (padding == null) padding = 0;\n      if (padding === 0) padding = 1;\n      enforce(base >>> 0 === base, 'base', 'uint32');\n      enforce(padding >>> 0 === padding, 'padding', 'uint32');\n      if (base < 2 || base > 36) throw new RangeError('Base ranges between 2 and 36.');\n\n      this._check();\n\n      if (base === 16) {\n        var _out = '';\n        var off = 0;\n        var carry = 0;\n\n        for (var i = 0; i < this.length; i++) {\n          var w = this.words[i];\n          var word = ((w << off | carry) & 0xffffff).toString(16);\n          carry = w >>> 24 - off & 0xffffff;\n          if (carry !== 0 || i !== this.length - 1) _out = zeros[6 - word.length] + word + _out;else _out = word + _out;\n          off += 2;\n\n          if (off >= 26) {\n            off -= 26;\n            i -= 1;\n          }\n        }\n\n        if (carry !== 0) _out = carry.toString(16) + _out;\n\n        while (_out.length % padding !== 0) {\n          _out = '0' + _out;\n        }\n\n        if (this.negative !== 0) _out = '-' + _out;\n        return _out;\n      }\n\n      var groupSize = groupSizes[base - 1];\n      var groupBase = groupBases[base - 1];\n      var c = this.clone();\n      var out = '';\n      c.negative = 0;\n\n      while (!c.isZero()) {\n        var r = c.remrn(groupBase).toString(base);\n        c.iquon(groupBase);\n        if (!c.isZero()) out = zeros[groupSize - r.length] + r + out;else out = r + out;\n      }\n\n      if (this.isZero()) out = '0';\n\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n\n      if (this.negative !== 0) out = '-' + out;\n      return out;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this.toString(16, 2);\n    }\n  }, {\n    key: \"toArray\",\n    value: function toArray(endian, length) {\n      return this.toArrayLike(Array, endian, length);\n    }\n  }, {\n    key: \"toBuffer\",\n    value: function toBuffer(endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    }\n  }, {\n    key: \"toArrayLike\",\n    value: function toArrayLike(ArrayType, endian, length) {\n      if (endian == null) endian = 'be';\n      if (length == null) length = 0;\n      enforce(typeof ArrayType === 'function', 'ArrayType', 'function');\n      enforce(endian === 'be' || endian === 'le', 'endian', 'endianness');\n      enforce(length >>> 0 === length, 'length', 'uint32');\n\n      this._check();\n\n      var bytes = this.byteLength();\n      var size = length || Math.max(1, bytes);\n      if (bytes > size) throw new RangeError('Byte array longer than desired length.');\n      var res = allocate(ArrayType, size); // See: https://github.com/indutny/bn.js/pull/222\n\n      if (endian === 'be') {\n        var pos = res.length - 1;\n        var carry = 0;\n\n        for (var i = 0; i < this.length; i++) {\n          var shift = (i & 3) << 1;\n          var word = this.words[i] << shift | carry;\n          res[pos--] = word & 0xff;\n          if (pos >= 0) res[pos--] = word >>> 8 & 0xff;\n          if (pos >= 0) res[pos--] = word >>> 16 & 0xff;\n\n          if (shift === 6) {\n            if (pos >= 0) res[pos--] = word >>> 24 & 0xff;\n            carry = 0;\n          } else {\n            carry = word >>> 24;\n          }\n        }\n\n        if (pos >= 0) {\n          res[pos--] = carry;\n\n          while (pos >= 0) {\n            res[pos--] = 0;\n          }\n\n          carry = 0;\n        }\n\n        assert(carry === 0);\n      } else {\n        var _pos = 0;\n        var _carry = 0;\n\n        for (var _i6 = 0; _i6 < this.length; _i6++) {\n          var _shift = (_i6 & 3) << 1;\n\n          var _word = this.words[_i6] << _shift | _carry;\n\n          res[_pos++] = _word & 0xff;\n          if (_pos < res.length) res[_pos++] = _word >>> 8 & 0xff;\n          if (_pos < res.length) res[_pos++] = _word >>> 16 & 0xff;\n\n          if (_shift === 6) {\n            if (_pos < res.length) res[_pos++] = _word >>> 24 & 0xff;\n            _carry = 0;\n          } else {\n            _carry = _word >>> 24;\n          }\n        }\n\n        if (_pos < res.length) {\n          res[_pos++] = _carry;\n\n          while (_pos < res.length) {\n            res[_pos++] = 0;\n          }\n\n          _carry = 0;\n        }\n\n        assert(_carry === 0);\n      }\n\n      return res;\n    }\n  }, {\n    key: \"encode\",\n    value: function encode(endian, length) {\n      return this.toBuffer(endian, length);\n    }\n    /*\n     * Instantiation\n     */\n\n  }, {\n    key: \"of\",\n    value: function of(num, endian) {\n      return this.fromNumber(num, endian);\n    }\n  }, {\n    key: \"fromNumber\",\n    value: function fromNumber(num, endian) {\n      if (endian == null) endian = 'be';\n      enforce(isInteger(num), 'num', 'integer');\n      enforce(endian === 'be' || endian === 'le', 'endian', 'endianness');\n      var neg = num < 0 | 0;\n      if (neg) num = -num;\n\n      if (num < 0x4000000) {\n        this.words[0] = num & 0x3ffffff;\n        this.length = 1;\n      } else if (num < 0x10000000000000) {\n        this.words = [num & 0x3ffffff, num / 0x4000000 & 0x3ffffff];\n        this.length = 2;\n      } else {\n        this.words = [num & 0x3ffffff, num / 0x4000000 & 0x3ffffff, 1];\n        this.length = 3;\n      }\n\n      this.negative = neg;\n      if (endian === 'le') this.reverse();\n      return this;\n    }\n  }, {\n    key: \"fromDouble\",\n    value: function fromDouble(num, endian) {\n      if (endian == null) endian = 'be';\n      enforce(typeof num === 'number', 'num', 'double');\n      enforce(endian === 'be' || endian === 'le', 'endian', 'endianness');\n      if (!isFinite(num)) num = 0;\n      var neg = num <= -1 | 0;\n      if (num < 0) num = -num;\n      num = Math.floor(num);\n      this.words = [];\n\n      while (num > 0) {\n        var lo = num % 0x4000000;\n        var hi = (num - lo) / 0x4000000;\n        this.words.push(lo);\n        num = hi;\n      }\n\n      if (this.words.length === 0) this.words.push(0);\n      this.length = this.words.length;\n      this.negative = neg;\n      if (endian === 'le') this.reverse();\n      return this;\n    }\n  }, {\n    key: \"fromBigInt\",\n    value: function fromBigInt(num, endian) {\n      if (endian == null) endian = 'be';\n      enforce(typeof num === 'bigint', 'num', 'bigint');\n      enforce(endian === 'be' || endian === 'le', 'endian', 'endianness');\n      if (!HAS_BIGINT) throw new Error('BigInt is not supported!'); // You know the implementation has a\n      // problem when strings are twice\n      // as fast as bigints.\n\n      var start = num < BigInt(0) | 0;\n\n      this._fromHex(num.toString(16), start);\n\n      this.negative = start;\n      if (endian === 'le') this.reverse();\n      return this;\n    }\n  }, {\n    key: \"fromBool\",\n    value: function fromBool(value) {\n      enforce(typeof value === 'boolean', 'value', 'boolean');\n      this.words[0] = value | 0;\n      this.length = 1;\n      this.negative = 0;\n      return this;\n    }\n  }, {\n    key: \"fromString\",\n    value: function fromString(str, base, endian) {\n      if (base === 'le' || base === 'be') {\n        var _ref13 = [endian, base];\n        base = _ref13[0];\n        endian = _ref13[1];\n      }\n\n      base = getBase(base);\n      if (endian == null) endian = 'be';\n      enforce(typeof str === 'string', 'string', 'string');\n      enforce(base >>> 0 === base, 'base', 'uint32');\n      enforce(endian === 'be' || endian === 'le', 'endian', 'endianness');\n      if (base < 2 || base > 36) throw new Error('Base ranges between 2 and 36.');\n      str = str.replace(/\\s+/g, '');\n      var start = 0;\n      if (str.length > 0 && str.charCodeAt(0) === 0x2d) start = 1;\n      if (base === 16) this._fromHex(str, start);else this._fromBase(str, base, start);\n      this.negative = start;\n\n      this._normalize();\n\n      if (endian === 'le') this.reverse();\n      return this;\n    }\n  }, {\n    key: \"_fromHex\",\n    value: function _fromHex(str, start) {\n      this.length = Math.max(2, Math.ceil((str.length - start) / 6));\n      this.words = new Array(this.length);\n\n      for (var _i7 = 0; _i7 < this.length; _i7++) {\n        this.words[_i7] = 0;\n      } // Scan 24-bit chunks and add them to the number.\n\n\n      var off = 0;\n      var i = str.length - 6;\n      var j = 0;\n\n      for (; i >= start; i -= 6) {\n        var w = parseHex(str, i, i + 6);\n        this.words[j] |= w << off & 0x3ffffff; // `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb.\n\n        this.words[j + 1] |= w >>> 26 - off & 0x3fffff;\n        off += 24;\n\n        if (off >= 26) {\n          off -= 26;\n          j += 1;\n        }\n      }\n\n      if (i + 6 !== start) {\n        var _w3 = parseHex(str, start, i + 6);\n\n        this.words[j] |= _w3 << off & 0x3ffffff;\n        this.words[j + 1] |= _w3 >>> 26 - off & 0x3fffff;\n      }\n\n      return this._strip();\n    }\n  }, {\n    key: \"_fromBase\",\n    value: function _fromBase(str, base, start) {\n      // Initialize as zero.\n      this.words[0] = 0;\n      this.length = 1;\n      this.negative = 0; // Find length of limb in base.\n\n      var limbLen = 0;\n      var limbPow = 1;\n\n      for (; limbPow <= 0x3ffffff; limbPow *= base) {\n        limbLen += 1;\n      }\n\n      limbLen -= 1;\n      limbPow = limbPow / base | 0;\n      var total = str.length - start;\n      var mod = total % limbLen;\n      var end = Math.min(total, total - mod) + start;\n      var i = start;\n\n      for (; i < end; i += limbLen) {\n        var word = parseBase(str, i, i + limbLen, base);\n        this.imuln(limbPow);\n\n        this._iaddn(word);\n      }\n\n      if (mod !== 0) {\n        var pow = Math.pow(base, mod);\n\n        var _word2 = parseBase(str, i, str.length, base);\n\n        this.imuln(pow);\n\n        this._iaddn(_word2);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      if (BN.isBN(json)) {\n        if (json.red) return json.fromRed();\n        return json.clone();\n      }\n\n      if (Array.isArray(json)) {\n        var _iterator = _createForOfIteratorHelper(json),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var chunk = _step.value;\n            enforce(typeof chunk === 'string', 'chunk', 'string');\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        json = json.join('');\n      }\n\n      return this.fromString(json, 16);\n    }\n  }, {\n    key: \"fromBN\",\n    value: function fromBN(num) {\n      return this.inject(num);\n    }\n  }, {\n    key: \"fromArray\",\n    value: function fromArray(data, endian) {\n      enforce(Array.isArray(data), 'data', 'array');\n      return this.fromArrayLike(data, endian);\n    }\n  }, {\n    key: \"fromBuffer\",\n    value: function fromBuffer(data, endian) {\n      enforce(Buffer.isBuffer(data), 'data', 'buffer');\n      return this.fromArrayLike(data, endian);\n    }\n  }, {\n    key: \"fromArrayLike\",\n    value: function fromArrayLike(data, endian) {\n      if (endian == null) endian = 'be';\n      enforce(data && data.length >>> 0 === data.length, 'data', 'array-like');\n      enforce(endian === 'be' || endian === 'le', 'endian', 'endianness');\n\n      if (data.length === 0) {\n        this.words[0] = 0;\n        this.length = 1;\n        this.negative = 0;\n        return this;\n      }\n\n      this.length = Math.max(2, Math.ceil(data.length / 3));\n      this.words = new Array(this.length);\n      this.negative = 0;\n\n      for (var i = 0; i < this.length; i++) {\n        this.words[i] = 0;\n      }\n\n      var left = data.length % 3;\n      var off = 0;\n      var j = 0;\n      var w = 0;\n\n      if (endian === 'be') {\n        for (var _i8 = data.length - 1; _i8 >= 2; _i8 -= 3) {\n          var _w4 = data[_i8] | data[_i8 - 1] << 8 | data[_i8 - 2] << 16;\n\n          this.words[j] |= _w4 << off & 0x3ffffff;\n          this.words[j + 1] = _w4 >>> 26 - off & 0x3ffffff;\n          off += 24;\n\n          if (off >= 26) {\n            off -= 26;\n            j += 1;\n          }\n        }\n\n        switch (left) {\n          case 2:\n            w = data[1] | data[0] << 8;\n            break;\n\n          case 1:\n            w = data[0];\n            break;\n        }\n      } else {\n        var len = data.length - left;\n\n        for (var _i9 = 0; _i9 < len; _i9 += 3) {\n          var _w5 = data[_i9] | data[_i9 + 1] << 8 | data[_i9 + 2] << 16;\n\n          this.words[j] |= _w5 << off & 0x3ffffff;\n          this.words[j + 1] = _w5 >>> 26 - off & 0x3ffffff;\n          off += 24;\n\n          if (off >= 26) {\n            off -= 26;\n            j += 1;\n          }\n        }\n\n        switch (left) {\n          case 2:\n            w = data[len] | data[len + 1] << 8;\n            break;\n\n          case 1:\n            w = data[len];\n            break;\n        }\n      }\n\n      if (left > 0) {\n        this.words[j] |= w << off & 0x3ffffff;\n        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n      }\n\n      return this._strip();\n    }\n  }, {\n    key: \"decode\",\n    value: function decode(data, endian) {\n      return this.fromBuffer(data, endian);\n    }\n  }, {\n    key: \"from\",\n    value: function from(num, base, endian) {\n      if (num == null) return this;\n\n      if (base === 'le' || base === 'be') {\n        var _ref14 = [endian, base];\n        base = _ref14[0];\n        endian = _ref14[1];\n      }\n\n      if (typeof num === 'number') return this.fromNumber(num, endian);\n      if (typeof num === 'bigint') return this.fromBigInt(num, endian);\n      if (typeof num === 'string') return this.fromString(num, base, endian);\n\n      if (typeof num === 'object') {\n        if (BN.isBN(num)) return this.fromBN(num, endian);\n        if (num.length >>> 0 === num.length) return this.fromArrayLike(num, endian);\n      }\n\n      if (typeof num === 'boolean') return this.fromBool(num);\n      throw new TypeError('Non-numeric object passed to BN.');\n    }\n    /*\n     * Static Methods\n     */\n\n  }], [{\n    key: \"min\",\n    value: function min() {\n      var min = null;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      for (var _i10 = 0, _args = args; _i10 < _args.length; _i10++) {\n        var num = _args[_i10];\n        enforce(BN.isBN(num), 'num', 'bignum');\n        if (!min || num.cmp(min) < 0) min = num;\n      }\n\n      return min || new BN(0);\n    }\n  }, {\n    key: \"max\",\n    value: function max() {\n      var max = null;\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      for (var _i11 = 0, _args2 = args; _i11 < _args2.length; _i11++) {\n        var num = _args2[_i11];\n        enforce(BN.isBN(num), 'num', 'bignum');\n        if (!max || num.cmp(max) > 0) max = num;\n      }\n\n      return max || new BN(0);\n    }\n  }, {\n    key: \"cmp\",\n    value: function cmp(a, b) {\n      enforce(BN.isBN(a), 'a', 'bignum');\n      return a.cmp(b);\n    }\n  }, {\n    key: \"ucmp\",\n    value: function ucmp(a, b) {\n      enforce(BN.isBN(a), 'a', 'bignum');\n      return a.ucmp(b);\n    }\n  }, {\n    key: \"red\",\n    value: function red(num) {\n      return new Red(num);\n    }\n  }, {\n    key: \"barrett\",\n    value: function barrett(num) {\n      return new Barrett(num);\n    }\n  }, {\n    key: \"mont\",\n    value: function mont(num) {\n      return new Mont(num);\n    }\n  }, {\n    key: \"_prime\",\n    value: function _prime(name) {\n      if (primes[name]) return primes[name];\n      var prime;\n      if (name === 'p192') prime = new P192();else if (name === 'p224') prime = new P224();else if (name === 'p521') prime = new P521();else if (name === 'k256') prime = new K256();else if (name === 'p25519') prime = new P25519();else if (name === 'p448') prime = new P448();else throw new Error(\"Unknown prime: \\\"\".concat(name, \"\\\".\"));\n      primes[name] = prime;\n      return prime;\n    }\n  }, {\n    key: \"prime\",\n    value: function prime(name) {\n      return BN._prime(name).p.clone();\n    }\n  }, {\n    key: \"pow\",\n    value: function pow(num, exp) {\n      if (num === 2) return BN.shift(1, exp);\n      return new BN().fromNumber(num).pown(exp);\n    }\n  }, {\n    key: \"shift\",\n    value: function shift(num, bits) {\n      if (num === 1) return new BN(0).usetn(bits, 1);\n      return new BN().fromNumber(num).ishln(bits);\n    }\n  }, {\n    key: \"mask\",\n    value: function mask(bits) {\n      return BN.shift(1, bits).isubn(1);\n    }\n  }, {\n    key: \"randomBits\",\n    value: function randomBits(rng, bits) {\n      enforce(rng != null, 'rng', 'rng');\n      enforce(bits >>> 0 === bits, 'bits', 'uint32');\n\n      if (typeof rng === 'object') {\n        enforce(typeof rng.randomBytes === 'function', 'rng', 'rng');\n        var size = bits + 7 >>> 3;\n        var total = size * 8;\n        var bytes = rng.randomBytes(size);\n        enforce(Buffer.isBuffer(bytes), 'bytes', 'buffer');\n        if (bytes.length !== size) throw new RangeError('Invalid number of bytes returned from RNG.');\n\n        var _num = BN.fromBuffer(bytes);\n\n        if (total > bits) _num.iushrn(total - bits);\n        return _num;\n      }\n\n      enforce(typeof rng === 'function', 'rng', 'rng');\n      var num = rng(bits);\n      enforce(BN.isBN(num), 'num', 'bignum');\n      range(num.negative === 0, 'RNG');\n      nonred(!num.red, 'RNG');\n      if (num.bitLength() > bits) throw new RangeError('Invalid number of bits returned from RNG.');\n      return num;\n    }\n  }, {\n    key: \"random\",\n    value: function random(rng, min, max) {\n      min = BN.cast(min, 16);\n      max = BN.cast(max, 16);\n      if (min.cmp(max) > 0) throw new RangeError('Minimum cannot be greater than maximum.');\n      var space = max.sub(min).iabs();\n      var bits = space.bitLength();\n      if (bits === 0) return min.clone();\n\n      for (;;) {\n        var num = BN.randomBits(rng, bits); // Maximum is _exclusive_!\n\n        if (num.cmp(space) >= 0) continue; // Minimum is _inclusive_!\n\n        num.iadd(min);\n        return num;\n      }\n    }\n  }, {\n    key: \"of\",\n    value: function of(num, endian) {\n      return new BN().of(num, endian);\n    }\n  }, {\n    key: \"fromNumber\",\n    value: function fromNumber(num, endian) {\n      return new BN().fromNumber(num, endian);\n    }\n  }, {\n    key: \"fromDouble\",\n    value: function fromDouble(num, endian) {\n      return new BN().fromDouble(num, endian);\n    }\n  }, {\n    key: \"fromBigInt\",\n    value: function fromBigInt(num, endian) {\n      return new BN().fromBigInt(num, endian);\n    }\n  }, {\n    key: \"fromBool\",\n    value: function fromBool(value) {\n      return new BN().fromBool(value);\n    }\n  }, {\n    key: \"fromString\",\n    value: function fromString(str, base, endian) {\n      return new BN().fromString(str, base, endian);\n    }\n  }, {\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      return new BN().fromJSON(json);\n    }\n  }, {\n    key: \"fromBN\",\n    value: function fromBN(num) {\n      return new BN().fromBN(num);\n    }\n  }, {\n    key: \"fromArray\",\n    value: function fromArray(data, endian) {\n      return new BN().fromArray(data, endian);\n    }\n  }, {\n    key: \"fromBuffer\",\n    value: function fromBuffer(data, endian) {\n      return new BN().fromBuffer(data, endian);\n    }\n  }, {\n    key: \"fromArrayLike\",\n    value: function fromArrayLike(data, endian) {\n      return new BN().fromArrayLike(data, endian);\n    }\n  }, {\n    key: \"decode\",\n    value: function decode(data, endian) {\n      return new BN().decode(data, endian);\n    }\n  }, {\n    key: \"from\",\n    value: function from(num, base, endian) {\n      return new BN().from(num, base, endian);\n    }\n  }, {\n    key: \"cast\",\n    value: function cast(num, base, endian) {\n      if (BN.isBN(num)) return num;\n      return new BN(num, base, endian);\n    }\n  }, {\n    key: \"isBN\",\n    value: function isBN(obj) {\n      return obj instanceof BN;\n    }\n  }]);\n\n  return BN;\n}();\n/*\n * Static\n */\n\n\nBN.BN = BN;\nBN.wordSize = 26;\nBN.native = 0;\n/**\n * Prime\n */\n\nvar Prime = /*#__PURE__*/function () {\n  function Prime(name, p) {\n    _classCallCheck(this, Prime);\n\n    // P = 2^N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = BN.shift(1, this.n).isub(this.p);\n    this.lo = this.p.clone();\n    this.one = this.p.clone();\n  }\n\n  _createClass(Prime, [{\n    key: \"ireduce\",\n    value: function ireduce(num) {\n      // Assumes that `num` is less than `P^2`:\n      // num = HI * (2^N - K) + HI * K + LO = HI * K + LO (mod P)\n      var neg = num.negative !== 0; // Track bits.\n\n      var bits = num.bitLength(); // Must be less than P^2.\n\n      assert(bits <= this.n * 2); // Ensure positive.\n\n      num.negative = 0; // Reduce.\n\n      while (bits > this.n) {\n        // lo = num & ((1 << n) - 1)\n        // num = num >> n\n        this.split(num, this.lo); // num = num * K\n\n        this.imulK(num); // num = num + lo\n\n        num._iadd(num, this.lo); // bits = bitlen(num)\n\n\n        bits = num.bitLength();\n      } // Final reduction.\n\n\n      var cmp = bits < this.n ? -1 : num.ucmp(this.p);\n\n      if (cmp === 0) {\n        num.words[0] = 0;\n        num.length = 1;\n      } else if (cmp > 0) {\n        num._isub(num, this.p);\n      } else {// Note: we shouldn't need to strip here.\n      } // Adjust sign.\n\n\n      if (neg && !num.isZero()) num._isub(this.p, num);\n      return num;\n    }\n  }, {\n    key: \"split\",\n    value: function split(input, out) {\n      input._split(this.n, out);\n    }\n  }, {\n    key: \"imulK\",\n    value: function imulK(num) {\n      return num.imul(this.k);\n    }\n  }]);\n\n  return Prime;\n}();\n/**\n * P192\n */\n\n\nvar P192 = /*#__PURE__*/function (_Prime) {\n  _inherits(P192, _Prime);\n\n  var _super = _createSuper(P192);\n\n  function P192() {\n    _classCallCheck(this, P192);\n\n    // 2^192 - 2^64 - 1 (= 3 mod 4)\n    return _super.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe' + 'ffffffff ffffffff');\n  }\n\n  _createClass(P192, [{\n    key: \"imulK\",\n    value: function imulK(num) {\n      // K = 0x10000000000000001\n      // K = 2^64 + 1\n      var one = this.one.inject(num);\n      return num.iushln(64)._iadd(num, one);\n    }\n  }]);\n\n  return P192;\n}(Prime);\n/**\n * P224\n */\n\n\nvar P224 = /*#__PURE__*/function (_Prime2) {\n  _inherits(P224, _Prime2);\n\n  var _super2 = _createSuper(P224);\n\n  function P224() {\n    _classCallCheck(this, P224);\n\n    // 2^224 - 2^96 + 1 (no congruence)\n    return _super2.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff' + '00000000 00000000 00000001');\n  }\n\n  _createClass(P224, [{\n    key: \"imulK\",\n    value: function imulK(num) {\n      // K = 0xffffffffffffffffffffffff\n      // K = 2^96 - 1\n      var one = this.one.inject(num);\n      return num.iushln(96)._isub(num, one);\n    }\n  }]);\n\n  return P224;\n}(Prime);\n/**\n * P521\n */\n\n\nvar P521 = /*#__PURE__*/function (_Prime3) {\n  _inherits(P521, _Prime3);\n\n  var _super3 = _createSuper(P521);\n\n  function P521() {\n    _classCallCheck(this, P521);\n\n    // 2^521 - 1 (= 3 mod 4)\n    return _super3.call(this, 'p521', '000001ff ffffffff ffffffff ffffffff' + 'ffffffff ffffffff ffffffff ffffffff' + 'ffffffff ffffffff ffffffff ffffffff' + 'ffffffff ffffffff ffffffff ffffffff' + 'ffffffff');\n  }\n\n  _createClass(P521, [{\n    key: \"imulK\",\n    value: function imulK(num) {\n      // K = 0x01\n      return num;\n    }\n  }]);\n\n  return P521;\n}(Prime);\n/**\n * K256\n */\n\n\nvar K256 = /*#__PURE__*/function (_Prime4) {\n  _inherits(K256, _Prime4);\n\n  var _super4 = _createSuper(K256);\n\n  function K256() {\n    _classCallCheck(this, K256);\n\n    // 2^256 - 2^32 - 977 (= 3 mod 4)\n    return _super4.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff' + 'ffffffff ffffffff fffffffe fffffc2f');\n  }\n\n  _createClass(K256, [{\n    key: \"split\",\n    value: function split(input, output) {\n      // 256 = 9 * 26 + 22\n      var mask = 0x3fffff;\n      var len = Math.min(input.length, 9);\n\n      output._alloc(len + 1);\n\n      for (var _i12 = 0; _i12 < len; _i12++) {\n        output.words[_i12] = input.words[_i12];\n      }\n\n      output.length = len;\n\n      if (input.length <= 9) {\n        output._strip();\n\n        input.words[0] = 0;\n        input.length = 1;\n        return;\n      } // Shift by 9 limbs.\n\n\n      var prev = input.words[9];\n      var i = 10;\n      output.words[output.length++] = prev & mask;\n\n      output._strip();\n\n      for (; i < input.length; i++) {\n        var next = input.words[i] | 0;\n        input.words[i - 10] = (next & mask) << 4 | prev >>> 22;\n        prev = next;\n      }\n\n      prev >>>= 22;\n      input.words[i - 10] = prev;\n      if (prev === 0 && input.length > 10) input.length -= 10;else input.length -= 9;\n\n      input._strip(); // Unsure if we need this.\n\n    }\n  }, {\n    key: \"imulK\",\n    value: function imulK(num) {\n      // K = 0x1000003d1 = [0x40, 0x3d1]\n      // K = 2^32 + 977\n      num._expand(num.length + 2); // Bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n\n\n      var lo = 0;\n\n      for (var i = 0; i < num.length; i++) {\n        var w = num.words[i];\n        lo += w * 0x3d1;\n        num.words[i] = lo & 0x3ffffff;\n        lo = w * 0x40 + Math.floor(lo / 0x4000000);\n      } // Fast length reduction.\n\n\n      if (num.words[num.length - 1] === 0) {\n        num.length -= 1;\n        if (num.words[num.length - 1] === 0) num.length -= 1;\n      } // Note: we shouldn't need to strip here.\n\n\n      return num;\n    }\n  }]);\n\n  return K256;\n}(Prime);\n/**\n * P25519\n */\n\n\nvar P25519 = /*#__PURE__*/function (_Prime5) {\n  _inherits(P25519, _Prime5);\n\n  var _super5 = _createSuper(P25519);\n\n  function P25519() {\n    _classCallCheck(this, P25519);\n\n    // 2^255 - 19 (= 5 mod 8)\n    return _super5.call(this, 'p25519', '7fffffff ffffffff ffffffff ffffffff' + 'ffffffff ffffffff ffffffff ffffffed');\n  }\n\n  _createClass(P25519, [{\n    key: \"imulK\",\n    value: function imulK(num) {\n      // K = 0x13\n      var carry = 0;\n\n      for (var i = 0; i < num.length; i++) {\n        var w = num.words[i] * 0x13 + carry;\n        carry = w >>> 26;\n        num.words[i] = w & 0x3ffffff;\n      }\n\n      if (carry !== 0) {\n        num._alloc(num.length + 1);\n\n        num.words[num.length++] = carry;\n      } // Note: we shouldn't need to strip here.\n\n\n      return num;\n    }\n  }]);\n\n  return P25519;\n}(Prime);\n/**\n * P448\n */\n\n\nvar P448 = /*#__PURE__*/function (_Prime6) {\n  _inherits(P448, _Prime6);\n\n  var _super6 = _createSuper(P448);\n\n  function P448() {\n    _classCallCheck(this, P448);\n\n    // 2^448 - 2^224 - 1 (= 3 mod 4)\n    return _super6.call(this, 'p448', 'ffffffff ffffffff ffffffff ffffffff' + 'ffffffff ffffffff fffffffe ffffffff' + 'ffffffff ffffffff ffffffff ffffffff' + 'ffffffff ffffffff');\n  }\n\n  _createClass(P448, [{\n    key: \"imulK\",\n    value: function imulK(num) {\n      // K = 0x100000000000000000000000000000000000000000000000000000001\n      // K = 2^224 + 1\n      var one = this.one.inject(num);\n      return num.iushln(224)._iadd(num, one);\n    }\n  }]);\n\n  return P448;\n}(Prime);\n/**\n * Reduction Engine\n */\n\n\nvar Red = /*#__PURE__*/function () {\n  function Red(m) {\n    _classCallCheck(this, Red);\n\n    var prime = null;\n\n    if (typeof m === 'string') {\n      prime = BN._prime(m);\n      m = prime.p;\n    }\n\n    enforce(BN.isBN(m), 'm', 'bignum');\n    nonred(!m.red, 'reduction');\n    range(m.sign() > 0, 'reduction');\n    this.m = m;\n    this.prime = prime;\n    this.mb = null;\n    this.sm1 = null;\n  }\n\n  _createClass(Red, [{\n    key: \"_verify1\",\n    value: function _verify1(a) {\n      range(a.negative === 0, 'red');\n      red(a.red != null, 'red');\n    }\n  }, {\n    key: \"_verify2\",\n    value: function _verify2(a, b) {\n      range((a.negative | b.negative) === 0, 'red');\n      red(a.red != null && a.red === b.red, 'red');\n    }\n  }, {\n    key: \"precompute\",\n    value: function precompute() {\n      // Precompute `sqrt(-1)` for primes congruent to 5 mod 8.\n      if (this.sm1 === null && this.m.andln(7) === 5) {\n        var x = new BN(2).toRed(this);\n        var e = this.m.subn(1).iushrn(2); // sqrt(-1) = 2^((p - 1) / 4) mod p\n\n        this.sm1 = this.pow(x, e);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"convertTo\",\n    value: function convertTo(num) {\n      var res = num.mod(this.m);\n      res.red = this;\n      return res;\n    }\n  }, {\n    key: \"convertFrom\",\n    value: function convertFrom(num) {\n      var res = num.clone();\n      res.red = null;\n      return res;\n    }\n  }, {\n    key: \"intTo\",\n    value: function intTo(a) {\n      return a;\n    }\n  }, {\n    key: \"intFrom\",\n    value: function intFrom(a) {\n      return a;\n    }\n  }, {\n    key: \"imod\",\n    value: function imod(a) {\n      if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n      return a.imod(this.m)._forceRed(this);\n    }\n  }, {\n    key: \"iadd\",\n    value: function iadd(a, b) {\n      this._verify2(a, b);\n\n      a._iadd(a, b);\n\n      if (a.ucmp(this.m) >= 0) a._isub(a, this.m);\n      return a;\n    }\n  }, {\n    key: \"add\",\n    value: function add(a, b) {\n      if (a.length < b.length) return this.iadd(b.clone(), a);\n      return this.iadd(a.clone(), b);\n    }\n  }, {\n    key: \"iaddn\",\n    value: function iaddn(a, num) {\n      this._verify1(a);\n\n      if (num < 0) return this.isubn(a, -num);\n      if (this.m.length === 1) num %= this.m.words[0];\n\n      a._iaddn(num);\n\n      if (a.ucmp(this.m) >= 0) a._isub(a, this.m);\n      return a;\n    }\n  }, {\n    key: \"addn\",\n    value: function addn(a, num) {\n      return this.iaddn(a.clone(), num);\n    }\n  }, {\n    key: \"isub\",\n    value: function isub(a, b) {\n      this._verify2(a, b); //  0: a - a mod m == 0\n      // -1: a - b mod m == m - (b - a)\n      // +1: a - b mod m == a - b\n\n\n      var cmp = a.ucmp(b);\n\n      if (cmp === 0) {\n        a.words[0] = 0;\n        a.length = 1;\n        return a;\n      }\n\n      if (cmp < 0) {\n        a._isub(b, a);\n\n        a._isub(this.m, a);\n      } else {\n        a._isub(a, b);\n      }\n\n      return a;\n    }\n  }, {\n    key: \"sub\",\n    value: function sub(a, b) {\n      return this.isub(a.clone(), b);\n    }\n  }, {\n    key: \"isubn\",\n    value: function isubn(a, num) {\n      this._verify1(a);\n\n      if (num < 0) return this.iaddn(a, -num);\n      if (this.m.length === 1) num %= this.m.words[0]; //  <: a - b mod m == m - (b - a)\n      // >=: a - b mod m == a - b\n\n      if (a.length === 1 && a.words[0] < num) {\n        a.words[0] = num - a.words[0];\n\n        a._isub(this.m, a);\n      } else {\n        a._isubn(num);\n      }\n\n      return a;\n    }\n  }, {\n    key: \"subn\",\n    value: function subn(a, num) {\n      return this.isubn(a.clone(), num);\n    }\n  }, {\n    key: \"imul\",\n    value: function imul(a, b) {\n      this._verify2(a, b);\n\n      return this.imod(a.imul(b));\n    }\n  }, {\n    key: \"mul\",\n    value: function mul(a, b) {\n      this._verify2(a, b);\n\n      return this.imod(a.mul(b));\n    }\n  }, {\n    key: \"imuln\",\n    value: function imuln(a, num) {\n      this._verify1(a);\n\n      if (a.isZero()) return a;\n\n      if (num === 0) {\n        a.words[0] = 0;\n        a.length = 1;\n        return a;\n      }\n\n      var neg = num < 0;\n      if (neg) num = -num;\n      if (this.m.length === 1) num %= this.m.words[0];\n      a.imuln(num);\n\n      if (num <= 16) {\n        // Quick reduction.\n        while (a.ucmp(this.m) >= 0) {\n          a._isub(a, this.m);\n        }\n      } else {\n        this.imod(a);\n      }\n\n      if (neg) this.ineg(a);\n      return a;\n    }\n  }, {\n    key: \"muln\",\n    value: function muln(a, num) {\n      return this.imuln(a.clone(), num);\n    }\n  }, {\n    key: \"idiv\",\n    value: function idiv(a, b) {\n      return this.div(a, b)._move(a);\n    }\n  }, {\n    key: \"div\",\n    value: function div(a, b) {\n      return this.mul(a, this.invert(b));\n    }\n  }, {\n    key: \"idivn\",\n    value: function idivn(a, num) {\n      return this.divn(a, num)._move(a);\n    }\n  }, {\n    key: \"divn\",\n    value: function divn(a, num) {\n      return this.div(a, this.convertTo(new BN(num)));\n    }\n  }, {\n    key: \"ipow\",\n    value: function ipow(a, num) {\n      return this.pow(a, num)._move(a);\n    }\n  }, {\n    key: \"pow\",\n    value: function pow(a, num) {\n      this._verify1(a);\n\n      if (num.isNeg()) a = this.invert(a); // Small exponent.\n\n      if (num.length === 1) return this.pown(a, num.words[0]); // Call out to BigInt.\n\n      if (HAS_BIGINT && !this.prime) return this.powInt(a, num); // Otherwise, a BN implementation.\n\n      return this.powNum(a, num);\n    }\n  }, {\n    key: \"powNum\",\n    value: function powNum(a, num) {\n      // Sliding window.\n      var wnd = new Array(WND_SIZE);\n      wnd[0] = this.sqrn(a, WND_WIDTH - 1);\n      wnd[1] = this.mul(wnd[0], a);\n\n      for (var _i13 = 2; _i13 < WND_SIZE; _i13++) {\n        wnd[_i13] = this.mul(wnd[_i13 - 1], a);\n      }\n\n      var i = num.bitLength();\n      var r = new BN(1).toRed(this);\n\n      while (i >= WND_WIDTH) {\n        var pos = i - WND_WIDTH;\n        var bits = num.bits(pos, WND_WIDTH);\n\n        if (bits < WND_SIZE) {\n          r = this.sqr(r);\n          i -= 1;\n          continue;\n        }\n\n        r = this.sqrn(r, WND_WIDTH);\n        r = this.mul(r, wnd[bits & ~WND_SIZE]);\n        i = pos;\n      }\n\n      if (i > 0) {\n        var _bits = num.bits(0, i);\n\n        while (i--) {\n          r = this.sqr(r);\n          if (_bits >> i & 1) r = this.mul(r, a);\n        }\n      }\n\n      return r;\n    }\n  }, {\n    key: \"powInt\",\n    value: function powInt(a, num) {\n      if (this.mb === null) this.mb = this.m.toBigInt();\n      var x = this.intFrom(a.toBigInt());\n\n      var y = _powInt(x, num, this.mb);\n\n      var z = this.intTo(y);\n      return BN.fromBigInt(z)._forceRed(this);\n    }\n  }, {\n    key: \"sqrn\",\n    value: function sqrn(a, n) {\n      for (var i = 0; i < n; i++) {\n        a = this.sqr(a);\n      }\n\n      return a;\n    }\n  }, {\n    key: \"ipown\",\n    value: function ipown(a, num) {\n      return this.pown(a, num)._move(a);\n    }\n  }, {\n    key: \"pown\",\n    value: function pown(a, num) {\n      this._verify1(a);\n\n      if (num < 0) {\n        a = this.invert(a);\n        num = -num;\n      }\n\n      if (num === 0) return new BN(1).toRed(this);\n      if (num === 1) return a.clone();\n      var bits = countBits(num);\n      var r = a;\n\n      for (var i = bits - 2; i >= 0; i--) {\n        r = this.sqr(r);\n        if (num >> i & 1) r = this.mul(r, a);\n      }\n\n      return r;\n    }\n  }, {\n    key: \"isqr\",\n    value: function isqr(a) {\n      return this.imul(a, a);\n    }\n  }, {\n    key: \"sqr\",\n    value: function sqr(a) {\n      return this.mul(a, a);\n    }\n  }, {\n    key: \"isqrt\",\n    value: function isqrt(x) {\n      return this.sqrt(x)._move(x);\n    }\n  }, {\n    key: \"sqrt\",\n    value: function sqrt(x) {\n      this._verify1(x); // Fast case (p = 3 mod 4).\n\n\n      if (this.m.andln(3) === 3) return this.sqrt3mod4(x); // Fast case (p = 5 mod 8).\n\n      if (this.m.andln(7) === 5) {\n        if (this.sm1 != null) return this.sqrt5mod8sm1(x);\n        return this.sqrt5mod8(x);\n      } // Slow case (Tonelli-Shanks).\n\n\n      return this.sqrt0(x);\n    }\n  }, {\n    key: \"sqrt3mod4\",\n    value: function sqrt3mod4(x) {\n      var e = this.m.addn(1).iushrn(2); // (p + 1) / 4\n\n      var b = this.pow(x, e);\n      if (!this.sqr(b).eq(x)) throw new Error('X is not a square mod P.');\n      return b;\n    }\n  }, {\n    key: \"sqrt5mod8\",\n    value: function sqrt5mod8(x) {\n      // Atkin's Algorithm.\n      var one = new BN(1).toRed(this);\n      var e = this.m.ushrn(3); // (p - 5) / 8\n\n      var x2 = this.add(x, x);\n      var alpha = this.pow(x2, e);\n      var beta = this.mul(x2, this.sqr(alpha));\n      var b = this.mul(this.mul(alpha, x), this.isub(beta, one));\n      if (!this.sqr(b).eq(x)) throw new Error('X is not a square mod P.');\n      return b;\n    }\n  }, {\n    key: \"sqrt5mod8sm1\",\n    value: function sqrt5mod8sm1(x) {\n      var e = this.m.addn(3).iushrn(3); // (p + 3) / 8\n\n      var b = this.pow(x, e);\n      if (this.sqr(b).eq(x)) return b;\n      var c = this.mul(b, this.sm1);\n      if (this.sqr(c).eq(x)) return c;\n      throw new Error('X is not a square mod P.');\n    }\n  }, {\n    key: \"sqrt0\",\n    value: function sqrt0(x) {\n      if (this.m.cmpn(1) === 0 || !this.m.isOdd()) throw new Error('Invalid prime.');\n\n      switch (this.jacobi(x)) {\n        case -1:\n          throw new Error('X is not a square mod P.');\n\n        case 0:\n          return new BN(0)._forceRed(this);\n\n        case 1:\n          break;\n      }\n\n      var one = new BN(1).toRed(this);\n      var s = this.m.subn(1);\n      var e = s.zeroBits();\n      s.iushrn(e);\n      var n = new BN(2).toRed(this);\n\n      while (this.jacobi(n) !== -1) {\n        this.iadd(n, one);\n      }\n\n      var b = this.pow(x, s);\n      var g = this.pow(n, s);\n      var y = this.pow(x, s.iaddn(1).iushrn(1));\n      var k = e;\n\n      for (;;) {\n        var t = b;\n        var m = 0;\n\n        while (t.cmp(one) !== 0 && m < k) {\n          t = this.sqr(t);\n          m += 1;\n        }\n\n        if (m === 0) break;\n        assert(m < k);\n        t = this.sqrn(g, k - m - 1);\n        g = this.sqr(t);\n        y = this.mul(y, t);\n        b = this.mul(b, g);\n        k = m;\n      }\n\n      return y;\n    }\n  }, {\n    key: \"idivsqrt\",\n    value: function idivsqrt(u, v) {\n      return this.divsqrt(u, v)._move(u);\n    }\n  }, {\n    key: \"divsqrt\",\n    value: function divsqrt(u, v) {\n      this._verify2(u, v); // v = 0\n\n\n      if (v.isZero()) throw new RangeError('Not invertible.'); // p = 3 mod 4\n\n      if (this.m.andln(3) === 3) return this.divsqrt3mod4(u, v); // p = 5 mod 8\n\n      if (this.sm1 != null && this.m.andln(7) === 5) return this.divsqrt5mod8(u, v);\n      return this.sqrt(this.div(u, v));\n    }\n  }, {\n    key: \"divsqrt3mod4\",\n    value: function divsqrt3mod4(u, v) {\n      // x = u^3 * v * (u^5 * v^3)^((p - 3) / 4) mod p\n      var e = this.m.subn(3).iushrn(2);\n      var u2 = this.sqr(u);\n      var u3 = this.mul(u2, u);\n      var u5 = this.mul(u3, u2);\n      var v3 = this.mul(this.sqr(v), v);\n      var p = this.pow(this.mul(u5, v3), e);\n      var x = this.mul(this.mul(u3, v), p);\n      var c = this.mul(v, this.sqr(x));\n      if (c.cmp(u) === 0) return x;\n      throw new Error('X is not a square mod P.');\n    }\n  }, {\n    key: \"divsqrt5mod8\",\n    value: function divsqrt5mod8(u, v) {\n      // x = u * v^3 * (u * v^7)^((p - 5) / 8) mod p\n      var e = this.m.subn(5).iushrn(3);\n      var v3 = this.mul(this.sqr(v), v);\n      var v7 = this.mul(this.sqr(v3), v);\n      var p = this.pow(this.mul(u, v7), e);\n      var x = this.mul(this.mul(u, v3), p);\n      var c = this.mul(v, this.sqr(x));\n      if (c.cmp(u) === 0) return x;\n      if (this.ineg(c).cmp(u) === 0) return this.mul(x, this.sm1);\n      throw new Error('X is not a square mod P.');\n    }\n  }, {\n    key: \"isSquare\",\n    value: function isSquare(a) {\n      var symbol;\n      if (this.prime || this.coprime) symbol = this.legendre(a);else if (this.m.isOdd()) symbol = this.jacobi(a);else symbol = this.kronecker(a);\n      return Boolean(~symbol >>> 31);\n    }\n  }, {\n    key: \"ishl\",\n    value: function ishl(a, num) {\n      this._verify1(a);\n\n      return this.imod(a.iushl(num));\n    }\n  }, {\n    key: \"shl\",\n    value: function shl(a, num) {\n      return this.ishl(a.clone(), num);\n    }\n  }, {\n    key: \"ishln\",\n    value: function ishln(a, num) {\n      this._verify1(a);\n\n      a.iushln(num);\n\n      if (num <= 4) {\n        // Quick reduction.\n        while (a.ucmp(this.m) >= 0) {\n          a._isub(a, this.m);\n        }\n      } else {\n        this.imod(a);\n      }\n\n      return a;\n    }\n  }, {\n    key: \"shln\",\n    value: function shln(a, num) {\n      return this.ishln(a.clone(), num);\n    }\n  }, {\n    key: \"ineg\",\n    value: function ineg(a) {\n      this._verify1(a);\n\n      if (!a.isZero()) a._isub(this.m, a);\n      return a;\n    }\n  }, {\n    key: \"neg\",\n    value: function neg(a) {\n      return this.ineg(a.clone());\n    }\n  }, {\n    key: \"eq\",\n    value: function eq(a, b) {\n      this._verify2(a, b);\n\n      return a.ucmp(b) === 0;\n    }\n  }, {\n    key: \"eqn\",\n    value: function eqn(a, num) {\n      this._verify1(a);\n\n      if (this.m.length === 1) {\n        num %= this.m.words[0];\n        if (num < 0) num += this.m.words[0];\n        return a.ucmpn(num) === 0;\n      }\n\n      if (num < 0) {\n        this.m._isubn(-num);\n\n        var cmp = a.ucmp(this.m);\n\n        this.m._iaddn(-num);\n\n        return cmp === 0;\n      }\n\n      return a.ucmpn(num) === 0;\n    }\n  }, {\n    key: \"isHigh\",\n    value: function isHigh(a) {\n      return !this.isLow(a);\n    }\n  }, {\n    key: \"isLow\",\n    value: function isLow(a) {\n      this._verify1(a);\n\n      return a.ucmp(this.m.ushrn(1)) <= 0;\n    }\n  }, {\n    key: \"isOdd\",\n    value: function isOdd(a) {\n      this._verify1(a);\n\n      return a.isOdd();\n    }\n  }, {\n    key: \"isEven\",\n    value: function isEven(a) {\n      this._verify1(a);\n\n      return a.isEven();\n    }\n  }, {\n    key: \"legendre\",\n    value: function legendre(num) {\n      this._verify1(num);\n\n      if (this.m.isEven()) throw new Error('legendre: `num` must be odd.'); // Euler's criterion.\n\n      var e = this.m.subn(1).iushrn(1); // (p - 1) / 2\n\n      var symbol = this.pow(num, e);\n      var one = new BN(1).toRed(this);\n      var a = symbol.czero();\n      var b = symbol.ceq(one);\n      var c = symbol.ceq(this.ineg(one)); // Must be one of these.\n\n      if ((a | b | c) === 0) throw new Error('Invalid prime.'); // Cannot be multiple.\n\n      assert(a + b + c === 1); // 0, 1, or -1.\n\n      return b - c;\n    }\n  }, {\n    key: \"jacobi\",\n    value: function jacobi(a) {\n      this._verify1(a);\n\n      return a.jacobi(this.m);\n    }\n  }, {\n    key: \"kronecker\",\n    value: function kronecker(a) {\n      this._verify1(a);\n\n      return a.kronecker(this.m);\n    }\n  }, {\n    key: \"iinvert\",\n    value: function iinvert(a) {\n      return this.invert(a)._move(a);\n    }\n  }, {\n    key: \"invert\",\n    value: function invert(a) {\n      this._verify1(a);\n\n      if (this.prime) return this.imod(a._invertp(this.m));\n      return a.invert(this.m)._forceRed(this);\n    }\n  }, {\n    key: \"ifermat\",\n    value: function ifermat(a) {\n      return this.fermat(a)._move(a);\n    }\n  }, {\n    key: \"fermat\",\n    value: function fermat(a) {\n      this._verify1(a);\n\n      if (a.isZero() || this.m.cmpn(1) === 0) throw new RangeError('Not invertible.'); // Invert using fermat's little theorem.\n\n      return this.pow(a, this.m.subn(2));\n    }\n  }, {\n    key: custom,\n    value: function value() {\n      if (this.prime) return \"<Red: \".concat(this.prime.name, \">\");\n      return \"<Red: \".concat(this.m.toString(10), \">\");\n    }\n  }, {\n    key: \"mont\",\n    get: function get() {\n      return false;\n    }\n  }, {\n    key: \"coprime\",\n    get: function get() {\n      return false;\n    }\n  }]);\n\n  return Red;\n}();\n/**\n * Barrett Engine\n */\n\n\nvar Barrett = /*#__PURE__*/function (_Red) {\n  _inherits(Barrett, _Red);\n\n  var _super7 = _createSuper(Barrett);\n\n  function Barrett(m) {\n    var _this;\n\n    _classCallCheck(this, Barrett);\n\n    _this = _super7.call(this, m);\n    _this.prime = null;\n    _this.n = _this.m.bitLength();\n    if (_this.n % 26 !== 0) _this.n += 26 - _this.n % 26;\n    _this.k = _this.n * 2;\n    _this.w = _this.k / 26;\n    _this.b = BN.shift(1, _this.k).div(_this.m);\n    return _this;\n  }\n\n  _createClass(Barrett, [{\n    key: \"convertTo\",\n    value: function convertTo(num) {\n      if (num.length > this.w) return _get(_getPrototypeOf(Barrett.prototype), \"convertTo\", this).call(this, num);\n      return this.imod(num.clone());\n    }\n  }, {\n    key: \"_shift\",\n    value: function _shift(q) {\n      var i = 0;\n      var j = this.w;\n\n      while (j < q.length) {\n        q.words[i++] = q.words[j++];\n      }\n\n      if (i === 0) q.words[i++] = 0;\n      q.length = i;\n    }\n  }, {\n    key: \"imod\",\n    value: function imod(a) {\n      var neg = a.negative;\n      assert(a.length <= this.w);\n      a.negative = 0;\n      var q = a.mul(this.b); // Shift right by `k` bits.\n\n      this._shift(q);\n\n      a._isub(a, q.mul(this.m));\n\n      if (a.ucmp(this.m) >= 0) a._isub(a, this.m);\n      if (neg && !a.isZero()) a._isub(this.m, a);\n      a.red = this;\n      return a;\n    }\n  }]);\n\n  return Barrett;\n}(Red);\n/**\n * Montgomery Engine\n */\n\n\nvar Mont = /*#__PURE__*/function (_Red2) {\n  _inherits(Mont, _Red2);\n\n  var _super8 = _createSuper(Mont);\n\n  function Mont(m) {\n    var _this2;\n\n    _classCallCheck(this, Mont);\n\n    _this2 = _super8.call(this, m);\n    _this2.prime = null;\n    _this2.n = _this2.m.bitLength();\n    if (_this2.n % 26 !== 0) _this2.n += 26 - _this2.n % 26;\n    _this2.r = BN.shift(1, _this2.n);\n    _this2.r2 = BN.shift(1, _this2.n * 2).imod(_this2.m);\n    _this2.ri = _this2.r._invertp(_this2.m).imod(_this2.m);\n    _this2.mi = _this2.r.mul(_this2.ri).isubn(1).div(_this2.m);\n    _this2.rib = null;\n    return _this2;\n  }\n\n  _createClass(Mont, [{\n    key: \"convertTo\",\n    value: function convertTo(num) {\n      return this.imod(num.ushln(this.n));\n    }\n  }, {\n    key: \"convertFrom\",\n    value: function convertFrom(num) {\n      var r = this.imod(num.mul(this.ri));\n      r.red = null;\n      return r;\n    }\n  }, {\n    key: \"intTo\",\n    value: function intTo(a) {\n      return (a << BigInt(this.n)) % this.mb;\n    }\n  }, {\n    key: \"intFrom\",\n    value: function intFrom(a) {\n      if (this.rib === null) this.rib = this.ri.toBigInt();\n      return a * this.rib % this.mb;\n    }\n  }, {\n    key: \"iaddn\",\n    value: function iaddn(a, num) {\n      return this.iadd(a, this.convertTo(new BN(num)));\n    }\n  }, {\n    key: \"isubn\",\n    value: function isubn(a, num) {\n      return this.isub(a, this.convertTo(new BN(num)));\n    }\n  }, {\n    key: \"imul\",\n    value: function imul(a, b) {\n      return this.mul(a, b)._move(a);\n    }\n  }, {\n    key: \"mul\",\n    value: function mul(a, b) {\n      this._verify2(a, b);\n\n      if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n      var t = a.mul(b);\n      var c = t.umaskn(this.n).mul(this.mi).iumaskn(this.n);\n      var u = t.iadd(c.mul(this.m)).iushrn(this.n);\n      if (u.ucmp(this.m) >= 0) u._isub(u, this.m);\n      return u._forceRed(this);\n    }\n  }, {\n    key: \"imuln\",\n    value: function imuln(a, num) {\n      this._verify1(a);\n\n      if (a.isZero()) return a;\n\n      if (num === 0) {\n        a.words[0] = 0;\n        a.length = 1;\n        return a;\n      }\n\n      var neg = num < 0;\n      if (neg) num = -num;\n      if (this.m.length === 1) num %= this.m.words[0];\n      var bits = countBits(num); // Potentially compute with additions.\n      // This avoids an expensive division.\n\n      if (bits > 5) {\n        // Slow case (num > 31).\n        this.imul(a, this.convertTo(new BN(num)));\n      } else if ((num & num - 1) === 0) {\n        // Optimize for powers of two.\n        for (var i = 0; i < bits - 1; i++) {\n          this.iadd(a, a);\n        }\n      } else {\n        // Multiply left to right.\n        var c = a.clone();\n\n        for (var _i14 = bits - 2; _i14 >= 0; _i14--) {\n          this.iadd(a, a);\n          if (num >> _i14 & 1) this.iadd(a, c);\n        }\n      }\n\n      if (neg) this.ineg(a);\n      return a;\n    }\n  }, {\n    key: \"eqn\",\n    value: function eqn(a, num) {\n      this._verify1(a);\n\n      if (num === 0) return a.isZero();\n      return a.ucmp(this.convertTo(new BN(num))) === 0;\n    }\n  }, {\n    key: \"isLow\",\n    value: function isLow(a) {\n      this._verify1(a);\n\n      return this.convertFrom(a).ucmp(this.m.ushrn(1)) <= 0;\n    }\n  }, {\n    key: \"isOdd\",\n    value: function isOdd(a) {\n      this._verify1(a);\n\n      return this.convertFrom(a).isOdd();\n    }\n  }, {\n    key: \"isEven\",\n    value: function isEven(a) {\n      this._verify1(a);\n\n      return this.convertFrom(a).isEven();\n    }\n  }, {\n    key: \"invert\",\n    value: function invert(a) {\n      this._verify1(a); // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n\n\n      return this.imod(a._invertp(this.m).mul(this.r2));\n    }\n  }, {\n    key: \"mont\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"coprime\",\n    get: function get() {\n      return true;\n    }\n  }]);\n\n  return Mont;\n}(Red);\n/*\n * Helpers\n */\n\n\nfunction makeError(Error, msg, start) {\n  var err = new Error(msg);\n  if (Error.captureStackTrace) Error.captureStackTrace(err, start);\n  return err;\n}\n\nfunction assert(value, message) {\n  if (!value) {\n    var msg = message || 'Assertion failed.';\n    throw makeError(Error, msg, assert);\n  }\n}\n\nfunction enforce(value, name, type) {\n  if (!value) {\n    var msg = \"\\\"\".concat(name, \"\\\" must be a(n) \").concat(type, \".\");\n    throw makeError(TypeError, msg, enforce);\n  }\n}\n\nfunction range(value, name) {\n  if (!value) {\n    var msg = \"\\\"\".concat(name, \"\\\" only works with positive numbers.\");\n    throw makeError(RangeError, msg, range);\n  }\n}\n\nfunction red(value, name) {\n  if (!value) {\n    var msg = \"\\\"\".concat(name, \"\\\" only works with red numbers.\");\n    throw makeError(TypeError, msg, red);\n  }\n}\n\nfunction nonred(value, name) {\n  if (!value) {\n    var msg = \"\\\"\".concat(name, \"\\\" only works with normal numbers.\");\n    throw makeError(TypeError, msg, nonred);\n  }\n}\n\nfunction nonzero(value) {\n  if (!value) {\n    var msg = 'Cannot divide by zero.';\n    throw makeError(RangeError, msg, nonzero);\n  }\n}\n\nfunction isInteger(num) {\n  return Number.isSafeInteger(num);\n}\n\nfunction isSMI(num) {\n  return isInteger(num) && num >= -0x3ffffff && num <= 0x3ffffff;\n}\n\nfunction allocate(ArrayType, size) {\n  if (ArrayType.allocUnsafeSlow) return ArrayType.allocUnsafeSlow(size);\n  return new ArrayType(size);\n}\n\nfunction getBase(base) {\n  if (base == null) return 10;\n  if (typeof base === 'number') return base;\n\n  switch (base) {\n    case 'bin':\n      return 2;\n\n    case 'oct':\n      return 8;\n\n    case 'dec':\n      return 10;\n\n    case 'hex':\n      return 16;\n  }\n\n  return 0;\n}\n/*\n * Internal\n */\n\n\nfunction countBits(w) {\n  if (Math.clz32) return 32 - Math.clz32(w);\n  var t = w;\n  var r = 0;\n\n  if (t >= 0x1000) {\n    r += 13;\n    t >>>= 13;\n  }\n\n  if (t >= 0x40) {\n    r += 7;\n    t >>>= 7;\n  }\n\n  if (t >= 0x8) {\n    r += 4;\n    t >>>= 4;\n  }\n\n  if (t >= 0x02) {\n    r += 2;\n    t >>>= 2;\n  }\n\n  return r + t;\n}\n\nfunction _zeroBits(w) {\n  // Shortcut.\n  if (w === 0) return 26;\n  var t = w;\n  var r = 0;\n\n  if ((t & 0x1fff) === 0) {\n    r += 13;\n    t >>>= 13;\n  }\n\n  if ((t & 0x7f) === 0) {\n    r += 7;\n    t >>>= 7;\n  }\n\n  if ((t & 0xf) === 0) {\n    r += 4;\n    t >>>= 4;\n  }\n\n  if ((t & 0x3) === 0) {\n    r += 2;\n    t >>>= 2;\n  }\n\n  if ((t & 0x1) === 0) r += 1;\n  return r;\n}\n\nfunction parseHex(str, start, end) {\n  var len = Math.min(str.length, end);\n  var r = 0;\n  var z = 0;\n\n  for (var i = start; i < len; i++) {\n    var c = str.charCodeAt(i) - 48;\n    r <<= 4;\n    var b = void 0;\n\n    if (c >= 49 && c <= 54) {\n      // 'a' - 'f'\n      b = c - 49 + 0xa;\n    } else if (c >= 17 && c <= 22) {\n      // 'A' - 'F'\n      b = c - 17 + 0xa;\n    } else {\n      // '0' - '9'\n      b = c;\n    }\n\n    r |= b;\n    z |= b;\n  }\n\n  if (z & ~15) throw new Error('Invalid string.');\n  return r;\n}\n\nfunction parseBase(str, start, end, mul) {\n  var len = Math.min(str.length, end);\n  var r = 0;\n\n  for (var i = start; i < len; i++) {\n    var c = str.charCodeAt(i) - 48;\n    r *= mul;\n    var b = void 0;\n\n    if (c >= 49) {\n      // 'a'\n      b = c - 49 + 0xa;\n    } else if (c >= 17) {\n      // 'A'\n      b = c - 17 + 0xa;\n    } else {\n      // '0' - '9'\n      b = c;\n    }\n\n    if (c < 0 || c > 207 || b >= mul) throw new Error('Invalid string.');\n    r += b;\n  }\n\n  return r;\n}\n/*\n * Exponentiation (bigint)\n */\n\n\nfunction _powInt(x, e, m) {\n  // Sliding window.\n  var wnd = new Array(WND_SIZE);\n  wnd[0] = sqrn(x, WND_WIDTH - 1, m);\n  wnd[1] = wnd[0] * x;\n\n  for (var _i15 = 2; _i15 < WND_SIZE; _i15++) {\n    wnd[_i15] = wnd[_i15 - 1] * x % m;\n  }\n\n  var i = e.bitLength();\n  var r = BigInt(1);\n\n  while (i >= WND_WIDTH) {\n    var pos = i - WND_WIDTH;\n    var bits = e.bits(pos, WND_WIDTH);\n\n    if (bits < WND_SIZE) {\n      r = r * r % m;\n      i -= 1;\n      continue;\n    }\n\n    r = sqrn(r, WND_WIDTH, m);\n    r = r * wnd[bits & ~WND_SIZE] % m;\n    i = pos;\n  }\n\n  if (i > 0) {\n    var _bits2 = e.bits(0, i);\n\n    while (i--) {\n      r = r * r % m;\n      if (_bits2 >> i & 1) r = r * x % m;\n    }\n  }\n\n  return r;\n}\n\nfunction sqrn(x, n, m) {\n  for (var i = 0; i < n; i++) {\n    x = x * x % m;\n  }\n\n  return x;\n}\n/*\n * Multiplication\n */\n\n\nfunction smallMulTo(self, num, out) {\n  var len = self.length + num.length;\n  out.negative = self.negative ^ num.negative;\n\n  out._alloc(len);\n\n  out.length = len; // Peel one iteration (compiler can't\n  // do it, because of code complexity).\n\n  var a = self.words[0];\n  var b = num.words[0];\n  var r = a * b;\n  var lo = r & 0x3ffffff;\n  var carry = r / 0x4000000 | 0;\n  var k = 1;\n  out.words[0] = lo;\n\n  for (; k < out.length - 1; k++) {\n    // Sum all words with the same\n    // `i + j = k` and accumulate\n    // `ncarry`, note that ncarry\n    // could be >= 0x3ffffff.\n    var ncarry = carry >>> 26;\n    var rword = carry & 0x3ffffff;\n    var min = Math.max(0, k - self.length + 1);\n    var max = Math.min(k, num.length - 1);\n\n    for (var j = min; j <= max; j++) {\n      var i = k - j;\n      var _a = self.words[i];\n      var _b = num.words[j];\n\n      var _r3 = _a * _b + rword;\n\n      ncarry += _r3 / 0x4000000 | 0;\n      rword = _r3 & 0x3ffffff;\n    }\n\n    out.words[k] = rword | 0;\n    carry = ncarry | 0;\n  }\n\n  if (carry !== 0) out.words[k] = carry | 0;else out.length -= 1;\n  return out._strip();\n}\n\nfunction bigMulTo(self, num, out) {\n  var len = self.length + num.length;\n  out.negative = self.negative ^ num.negative;\n\n  out._alloc(len);\n\n  out.length = len;\n  var carry = 0;\n  var hncarry = 0;\n  var k = 0;\n\n  for (; k < out.length - 1; k++) {\n    // Sum all words with the same\n    // `i + j = k` and accumulate\n    // `ncarry`, note that ncarry\n    // could be >= 0x3ffffff.\n    var ncarry = hncarry;\n    hncarry = 0;\n    var rword = carry & 0x3ffffff;\n    var min = Math.max(0, k - self.length + 1);\n    var max = Math.min(k, num.length - 1);\n\n    for (var j = min; j <= max; j++) {\n      var i = k - j;\n      var a = self.words[i];\n      var b = num.words[j];\n      var r = a * b;\n      var lo = r & 0x3ffffff;\n      ncarry = ncarry + (r / 0x4000000 | 0) | 0;\n      lo = lo + rword | 0;\n      rword = lo & 0x3ffffff;\n      ncarry = ncarry + (lo >>> 26) | 0;\n      hncarry += ncarry >>> 26;\n      ncarry &= 0x3ffffff;\n    }\n\n    out.words[k] = rword;\n    carry = ncarry;\n    ncarry = hncarry;\n  }\n\n  if (carry !== 0) out.words[k] = carry;else out.length -= 1;\n  return out._strip();\n}\n\nfunction jumboMulTo(x, y, out) {\n  // v8 has a 2147483519 bit max (~256mb).\n  if (!HAS_BIGINT || x.length + y.length > 82595519) return bigMulTo(x, y, out);\n  var zero = BigInt(0);\n  var mask = BigInt(0x3ffffff);\n  var shift = BigInt(26);\n  var z = x.toBigInt() * y.toBigInt();\n  var neg = z < zero | 0;\n  if (neg) z = -z;\n  var i = 0;\n\n  while (z > zero) {\n    out.words[i++] = Number(z & mask);\n    z >>= shift;\n  }\n\n  if (i === 0) out.words[i++] = 0;\n  out.length = i;\n  out.negative = neg;\n  return out;\n}\n\nfunction comb10MulTo(self, num, out) {\n  var a = self.words;\n  var b = num.words;\n  var o = out.words;\n  var a0 = a[0] | 0;\n  var al0 = a0 & 0x1fff;\n  var ah0 = a0 >>> 13;\n  var a1 = a[1] | 0;\n  var al1 = a1 & 0x1fff;\n  var ah1 = a1 >>> 13;\n  var a2 = a[2] | 0;\n  var al2 = a2 & 0x1fff;\n  var ah2 = a2 >>> 13;\n  var a3 = a[3] | 0;\n  var al3 = a3 & 0x1fff;\n  var ah3 = a3 >>> 13;\n  var a4 = a[4] | 0;\n  var al4 = a4 & 0x1fff;\n  var ah4 = a4 >>> 13;\n  var a5 = a[5] | 0;\n  var al5 = a5 & 0x1fff;\n  var ah5 = a5 >>> 13;\n  var a6 = a[6] | 0;\n  var al6 = a6 & 0x1fff;\n  var ah6 = a6 >>> 13;\n  var a7 = a[7] | 0;\n  var al7 = a7 & 0x1fff;\n  var ah7 = a7 >>> 13;\n  var a8 = a[8] | 0;\n  var al8 = a8 & 0x1fff;\n  var ah8 = a8 >>> 13;\n  var a9 = a[9] | 0;\n  var al9 = a9 & 0x1fff;\n  var ah9 = a9 >>> 13;\n  var b0 = b[0] | 0;\n  var bl0 = b0 & 0x1fff;\n  var bh0 = b0 >>> 13;\n  var b1 = b[1] | 0;\n  var bl1 = b1 & 0x1fff;\n  var bh1 = b1 >>> 13;\n  var b2 = b[2] | 0;\n  var bl2 = b2 & 0x1fff;\n  var bh2 = b2 >>> 13;\n  var b3 = b[3] | 0;\n  var bl3 = b3 & 0x1fff;\n  var bh3 = b3 >>> 13;\n  var b4 = b[4] | 0;\n  var bl4 = b4 & 0x1fff;\n  var bh4 = b4 >>> 13;\n  var b5 = b[5] | 0;\n  var bl5 = b5 & 0x1fff;\n  var bh5 = b5 >>> 13;\n  var b6 = b[6] | 0;\n  var bl6 = b6 & 0x1fff;\n  var bh6 = b6 >>> 13;\n  var b7 = b[7] | 0;\n  var bl7 = b7 & 0x1fff;\n  var bh7 = b7 >>> 13;\n  var b8 = b[8] | 0;\n  var bl8 = b8 & 0x1fff;\n  var bh8 = b8 >>> 13;\n  var b9 = b[9] | 0;\n  var bl9 = b9 & 0x1fff;\n  var bh9 = b9 >>> 13;\n  var c = 0;\n  var lo, mid, hi;\n  out.negative = self.negative ^ num.negative;\n\n  out._alloc(20);\n\n  out.length = 19;\n  /* k = 0 */\n\n  lo = Math.imul(al0, bl0);\n  mid = Math.imul(al0, bh0);\n  mid = mid + Math.imul(ah0, bl0) | 0;\n  hi = Math.imul(ah0, bh0);\n  var w0 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n  c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;\n  w0 &= 0x3ffffff;\n  /* k = 1 */\n\n  lo = Math.imul(al1, bl0);\n  mid = Math.imul(al1, bh0);\n  mid = mid + Math.imul(ah1, bl0) | 0;\n  hi = Math.imul(ah1, bh0);\n  lo = lo + Math.imul(al0, bl1) | 0;\n  mid = mid + Math.imul(al0, bh1) | 0;\n  mid = mid + Math.imul(ah0, bl1) | 0;\n  hi = hi + Math.imul(ah0, bh1) | 0;\n  var w1 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n  c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;\n  w1 &= 0x3ffffff;\n  /* k = 2 */\n\n  lo = Math.imul(al2, bl0);\n  mid = Math.imul(al2, bh0);\n  mid = mid + Math.imul(ah2, bl0) | 0;\n  hi = Math.imul(ah2, bh0);\n  lo = lo + Math.imul(al1, bl1) | 0;\n  mid = mid + Math.imul(al1, bh1) | 0;\n  mid = mid + Math.imul(ah1, bl1) | 0;\n  hi = hi + Math.imul(ah1, bh1) | 0;\n  lo = lo + Math.imul(al0, bl2) | 0;\n  mid = mid + Math.imul(al0, bh2) | 0;\n  mid = mid + Math.imul(ah0, bl2) | 0;\n  hi = hi + Math.imul(ah0, bh2) | 0;\n  var w2 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n  c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;\n  w2 &= 0x3ffffff;\n  /* k = 3 */\n\n  lo = Math.imul(al3, bl0);\n  mid = Math.imul(al3, bh0);\n  mid = mid + Math.imul(ah3, bl0) | 0;\n  hi = Math.imul(ah3, bh0);\n  lo = lo + Math.imul(al2, bl1) | 0;\n  mid = mid + Math.imul(al2, bh1) | 0;\n  mid = mid + Math.imul(ah2, bl1) | 0;\n  hi = hi + Math.imul(ah2, bh1) | 0;\n  lo = lo + Math.imul(al1, bl2) | 0;\n  mid = mid + Math.imul(al1, bh2) | 0;\n  mid = mid + Math.imul(ah1, bl2) | 0;\n  hi = hi + Math.imul(ah1, bh2) | 0;\n  lo = lo + Math.imul(al0, bl3) | 0;\n  mid = mid + Math.imul(al0, bh3) | 0;\n  mid = mid + Math.imul(ah0, bl3) | 0;\n  hi = hi + Math.imul(ah0, bh3) | 0;\n  var w3 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n  c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;\n  w3 &= 0x3ffffff;\n  /* k = 4 */\n\n  lo = Math.imul(al4, bl0);\n  mid = Math.imul(al4, bh0);\n  mid = mid + Math.imul(ah4, bl0) | 0;\n  hi = Math.imul(ah4, bh0);\n  lo = lo + Math.imul(al3, bl1) | 0;\n  mid = mid + Math.imul(al3, bh1) | 0;\n  mid = mid + Math.imul(ah3, bl1) | 0;\n  hi = hi + Math.imul(ah3, bh1) | 0;\n  lo = lo + Math.imul(al2, bl2) | 0;\n  mid = mid + Math.imul(al2, bh2) | 0;\n  mid = mid + Math.imul(ah2, bl2) | 0;\n  hi = hi + Math.imul(ah2, bh2) | 0;\n  lo = lo + Math.imul(al1, bl3) | 0;\n  mid = mid + Math.imul(al1, bh3) | 0;\n  mid = mid + Math.imul(ah1, bl3) | 0;\n  hi = hi + Math.imul(ah1, bh3) | 0;\n  lo = lo + Math.imul(al0, bl4) | 0;\n  mid = mid + Math.imul(al0, bh4) | 0;\n  mid = mid + Math.imul(ah0, bl4) | 0;\n  hi = hi + Math.imul(ah0, bh4) | 0;\n  var w4 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n  c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;\n  w4 &= 0x3ffffff;\n  /* k = 5 */\n\n  lo = Math.imul(al5, bl0);\n  mid = Math.imul(al5, bh0);\n  mid = mid + Math.imul(ah5, bl0) | 0;\n  hi = Math.imul(ah5, bh0);\n  lo = lo + Math.imul(al4, bl1) | 0;\n  mid = mid + Math.imul(al4, bh1) | 0;\n  mid = mid + Math.imul(ah4, bl1) | 0;\n  hi = hi + Math.imul(ah4, bh1) | 0;\n  lo = lo + Math.imul(al3, bl2) | 0;\n  mid = mid + Math.imul(al3, bh2) | 0;\n  mid = mid + Math.imul(ah3, bl2) | 0;\n  hi = hi + Math.imul(ah3, bh2) | 0;\n  lo = lo + Math.imul(al2, bl3) | 0;\n  mid = mid + Math.imul(al2, bh3) | 0;\n  mid = mid + Math.imul(ah2, bl3) | 0;\n  hi = hi + Math.imul(ah2, bh3) | 0;\n  lo = lo + Math.imul(al1, bl4) | 0;\n  mid = mid + Math.imul(al1, bh4) | 0;\n  mid = mid + Math.imul(ah1, bl4) | 0;\n  hi = hi + Math.imul(ah1, bh4) | 0;\n  lo = lo + Math.imul(al0, bl5) | 0;\n  mid = mid + Math.imul(al0, bh5) | 0;\n  mid = mid + Math.imul(ah0, bl5) | 0;\n  hi = hi + Math.imul(ah0, bh5) | 0;\n  var w5 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n  c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;\n  w5 &= 0x3ffffff;\n  /* k = 6 */\n\n  lo = Math.imul(al6, bl0);\n  mid = Math.imul(al6, bh0);\n  mid = mid + Math.imul(ah6, bl0) | 0;\n  hi = Math.imul(ah6, bh0);\n  lo = lo + Math.imul(al5, bl1) | 0;\n  mid = mid + Math.imul(al5, bh1) | 0;\n  mid = mid + Math.imul(ah5, bl1) | 0;\n  hi = hi + Math.imul(ah5, bh1) | 0;\n  lo = lo + Math.imul(al4, bl2) | 0;\n  mid = mid + Math.imul(al4, bh2) | 0;\n  mid = mid + Math.imul(ah4, bl2) | 0;\n  hi = hi + Math.imul(ah4, bh2) | 0;\n  lo = lo + Math.imul(al3, bl3) | 0;\n  mid = mid + Math.imul(al3, bh3) | 0;\n  mid = mid + Math.imul(ah3, bl3) | 0;\n  hi = hi + Math.imul(ah3, bh3) | 0;\n  lo = lo + Math.imul(al2, bl4) | 0;\n  mid = mid + Math.imul(al2, bh4) | 0;\n  mid = mid + Math.imul(ah2, bl4) | 0;\n  hi = hi + Math.imul(ah2, bh4) | 0;\n  lo = lo + Math.imul(al1, bl5) | 0;\n  mid = mid + Math.imul(al1, bh5) | 0;\n  mid = mid + Math.imul(ah1, bl5) | 0;\n  hi = hi + Math.imul(ah1, bh5) | 0;\n  lo = lo + Math.imul(al0, bl6) | 0;\n  mid = mid + Math.imul(al0, bh6) | 0;\n  mid = mid + Math.imul(ah0, bl6) | 0;\n  hi = hi + Math.imul(ah0, bh6) | 0;\n  var w6 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n  c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;\n  w6 &= 0x3ffffff;\n  /* k = 7 */\n\n  lo = Math.imul(al7, bl0);\n  mid = Math.imul(al7, bh0);\n  mid = mid + Math.imul(ah7, bl0) | 0;\n  hi = Math.imul(ah7, bh0);\n  lo = lo + Math.imul(al6, bl1) | 0;\n  mid = mid + Math.imul(al6, bh1) | 0;\n  mid = mid + Math.imul(ah6, bl1) | 0;\n  hi = hi + Math.imul(ah6, bh1) | 0;\n  lo = lo + Math.imul(al5, bl2) | 0;\n  mid = mid + Math.imul(al5, bh2) | 0;\n  mid = mid + Math.imul(ah5, bl2) | 0;\n  hi = hi + Math.imul(ah5, bh2) | 0;\n  lo = lo + Math.imul(al4, bl3) | 0;\n  mid = mid + Math.imul(al4, bh3) | 0;\n  mid = mid + Math.imul(ah4, bl3) | 0;\n  hi = hi + Math.imul(ah4, bh3) | 0;\n  lo = lo + Math.imul(al3, bl4) | 0;\n  mid = mid + Math.imul(al3, bh4) | 0;\n  mid = mid + Math.imul(ah3, bl4) | 0;\n  hi = hi + Math.imul(ah3, bh4) | 0;\n  lo = lo + Math.imul(al2, bl5) | 0;\n  mid = mid + Math.imul(al2, bh5) | 0;\n  mid = mid + Math.imul(ah2, bl5) | 0;\n  hi = hi + Math.imul(ah2, bh5) | 0;\n  lo = lo + Math.imul(al1, bl6) | 0;\n  mid = mid + Math.imul(al1, bh6) | 0;\n  mid = mid + Math.imul(ah1, bl6) | 0;\n  hi = hi + Math.imul(ah1, bh6) | 0;\n  lo = lo + Math.imul(al0, bl7) | 0;\n  mid = mid + Math.imul(al0, bh7) | 0;\n  mid = mid + Math.imul(ah0, bl7) | 0;\n  hi = hi + Math.imul(ah0, bh7) | 0;\n  var w7 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n  c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;\n  w7 &= 0x3ffffff;\n  /* k = 8 */\n\n  lo = Math.imul(al8, bl0);\n  mid = Math.imul(al8, bh0);\n  mid = mid + Math.imul(ah8, bl0) | 0;\n  hi = Math.imul(ah8, bh0);\n  lo = lo + Math.imul(al7, bl1) | 0;\n  mid = mid + Math.imul(al7, bh1) | 0;\n  mid = mid + Math.imul(ah7, bl1) | 0;\n  hi = hi + Math.imul(ah7, bh1) | 0;\n  lo = lo + Math.imul(al6, bl2) | 0;\n  mid = mid + Math.imul(al6, bh2) | 0;\n  mid = mid + Math.imul(ah6, bl2) | 0;\n  hi = hi + Math.imul(ah6, bh2) | 0;\n  lo = lo + Math.imul(al5, bl3) | 0;\n  mid = mid + Math.imul(al5, bh3) | 0;\n  mid = mid + Math.imul(ah5, bl3) | 0;\n  hi = hi + Math.imul(ah5, bh3) | 0;\n  lo = lo + Math.imul(al4, bl4) | 0;\n  mid = mid + Math.imul(al4, bh4) | 0;\n  mid = mid + Math.imul(ah4, bl4) | 0;\n  hi = hi + Math.imul(ah4, bh4) | 0;\n  lo = lo + Math.imul(al3, bl5) | 0;\n  mid = mid + Math.imul(al3, bh5) | 0;\n  mid = mid + Math.imul(ah3, bl5) | 0;\n  hi = hi + Math.imul(ah3, bh5) | 0;\n  lo = lo + Math.imul(al2, bl6) | 0;\n  mid = mid + Math.imul(al2, bh6) | 0;\n  mid = mid + Math.imul(ah2, bl6) | 0;\n  hi = hi + Math.imul(ah2, bh6) | 0;\n  lo = lo + Math.imul(al1, bl7) | 0;\n  mid = mid + Math.imul(al1, bh7) | 0;\n  mid = mid + Math.imul(ah1, bl7) | 0;\n  hi = hi + Math.imul(ah1, bh7) | 0;\n  lo = lo + Math.imul(al0, bl8) | 0;\n  mid = mid + Math.imul(al0, bh8) | 0;\n  mid = mid + Math.imul(ah0, bl8) | 0;\n  hi = hi + Math.imul(ah0, bh8) | 0;\n  var w8 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n  c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;\n  w8 &= 0x3ffffff;\n  /* k = 9 */\n\n  lo = Math.imul(al9, bl0);\n  mid = Math.imul(al9, bh0);\n  mid = mid + Math.imul(ah9, bl0) | 0;\n  hi = Math.imul(ah9, bh0);\n  lo = lo + Math.imul(al8, bl1) | 0;\n  mid = mid + Math.imul(al8, bh1) | 0;\n  mid = mid + Math.imul(ah8, bl1) | 0;\n  hi = hi + Math.imul(ah8, bh1) | 0;\n  lo = lo + Math.imul(al7, bl2) | 0;\n  mid = mid + Math.imul(al7, bh2) | 0;\n  mid = mid + Math.imul(ah7, bl2) | 0;\n  hi = hi + Math.imul(ah7, bh2) | 0;\n  lo = lo + Math.imul(al6, bl3) | 0;\n  mid = mid + Math.imul(al6, bh3) | 0;\n  mid = mid + Math.imul(ah6, bl3) | 0;\n  hi = hi + Math.imul(ah6, bh3) | 0;\n  lo = lo + Math.imul(al5, bl4) | 0;\n  mid = mid + Math.imul(al5, bh4) | 0;\n  mid = mid + Math.imul(ah5, bl4) | 0;\n  hi = hi + Math.imul(ah5, bh4) | 0;\n  lo = lo + Math.imul(al4, bl5) | 0;\n  mid = mid + Math.imul(al4, bh5) | 0;\n  mid = mid + Math.imul(ah4, bl5) | 0;\n  hi = hi + Math.imul(ah4, bh5) | 0;\n  lo = lo + Math.imul(al3, bl6) | 0;\n  mid = mid + Math.imul(al3, bh6) | 0;\n  mid = mid + Math.imul(ah3, bl6) | 0;\n  hi = hi + Math.imul(ah3, bh6) | 0;\n  lo = lo + Math.imul(al2, bl7) | 0;\n  mid = mid + Math.imul(al2, bh7) | 0;\n  mid = mid + Math.imul(ah2, bl7) | 0;\n  hi = hi + Math.imul(ah2, bh7) | 0;\n  lo = lo + Math.imul(al1, bl8) | 0;\n  mid = mid + Math.imul(al1, bh8) | 0;\n  mid = mid + Math.imul(ah1, bl8) | 0;\n  hi = hi + Math.imul(ah1, bh8) | 0;\n  lo = lo + Math.imul(al0, bl9) | 0;\n  mid = mid + Math.imul(al0, bh9) | 0;\n  mid = mid + Math.imul(ah0, bl9) | 0;\n  hi = hi + Math.imul(ah0, bh9) | 0;\n  var w9 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n  c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;\n  w9 &= 0x3ffffff;\n  /* k = 10 */\n\n  lo = Math.imul(al9, bl1);\n  mid = Math.imul(al9, bh1);\n  mid = mid + Math.imul(ah9, bl1) | 0;\n  hi = Math.imul(ah9, bh1);\n  lo = lo + Math.imul(al8, bl2) | 0;\n  mid = mid + Math.imul(al8, bh2) | 0;\n  mid = mid + Math.imul(ah8, bl2) | 0;\n  hi = hi + Math.imul(ah8, bh2) | 0;\n  lo = lo + Math.imul(al7, bl3) | 0;\n  mid = mid + Math.imul(al7, bh3) | 0;\n  mid = mid + Math.imul(ah7, bl3) | 0;\n  hi = hi + Math.imul(ah7, bh3) | 0;\n  lo = lo + Math.imul(al6, bl4) | 0;\n  mid = mid + Math.imul(al6, bh4) | 0;\n  mid = mid + Math.imul(ah6, bl4) | 0;\n  hi = hi + Math.imul(ah6, bh4) | 0;\n  lo = lo + Math.imul(al5, bl5) | 0;\n  mid = mid + Math.imul(al5, bh5) | 0;\n  mid = mid + Math.imul(ah5, bl5) | 0;\n  hi = hi + Math.imul(ah5, bh5) | 0;\n  lo = lo + Math.imul(al4, bl6) | 0;\n  mid = mid + Math.imul(al4, bh6) | 0;\n  mid = mid + Math.imul(ah4, bl6) | 0;\n  hi = hi + Math.imul(ah4, bh6) | 0;\n  lo = lo + Math.imul(al3, bl7) | 0;\n  mid = mid + Math.imul(al3, bh7) | 0;\n  mid = mid + Math.imul(ah3, bl7) | 0;\n  hi = hi + Math.imul(ah3, bh7) | 0;\n  lo = lo + Math.imul(al2, bl8) | 0;\n  mid = mid + Math.imul(al2, bh8) | 0;\n  mid = mid + Math.imul(ah2, bl8) | 0;\n  hi = hi + Math.imul(ah2, bh8) | 0;\n  lo = lo + Math.imul(al1, bl9) | 0;\n  mid = mid + Math.imul(al1, bh9) | 0;\n  mid = mid + Math.imul(ah1, bl9) | 0;\n  hi = hi + Math.imul(ah1, bh9) | 0;\n  var w10 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n  c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;\n  w10 &= 0x3ffffff;\n  /* k = 11 */\n\n  lo = Math.imul(al9, bl2);\n  mid = Math.imul(al9, bh2);\n  mid = mid + Math.imul(ah9, bl2) | 0;\n  hi = Math.imul(ah9, bh2);\n  lo = lo + Math.imul(al8, bl3) | 0;\n  mid = mid + Math.imul(al8, bh3) | 0;\n  mid = mid + Math.imul(ah8, bl3) | 0;\n  hi = hi + Math.imul(ah8, bh3) | 0;\n  lo = lo + Math.imul(al7, bl4) | 0;\n  mid = mid + Math.imul(al7, bh4) | 0;\n  mid = mid + Math.imul(ah7, bl4) | 0;\n  hi = hi + Math.imul(ah7, bh4) | 0;\n  lo = lo + Math.imul(al6, bl5) | 0;\n  mid = mid + Math.imul(al6, bh5) | 0;\n  mid = mid + Math.imul(ah6, bl5) | 0;\n  hi = hi + Math.imul(ah6, bh5) | 0;\n  lo = lo + Math.imul(al5, bl6) | 0;\n  mid = mid + Math.imul(al5, bh6) | 0;\n  mid = mid + Math.imul(ah5, bl6) | 0;\n  hi = hi + Math.imul(ah5, bh6) | 0;\n  lo = lo + Math.imul(al4, bl7) | 0;\n  mid = mid + Math.imul(al4, bh7) | 0;\n  mid = mid + Math.imul(ah4, bl7) | 0;\n  hi = hi + Math.imul(ah4, bh7) | 0;\n  lo = lo + Math.imul(al3, bl8) | 0;\n  mid = mid + Math.imul(al3, bh8) | 0;\n  mid = mid + Math.imul(ah3, bl8) | 0;\n  hi = hi + Math.imul(ah3, bh8) | 0;\n  lo = lo + Math.imul(al2, bl9) | 0;\n  mid = mid + Math.imul(al2, bh9) | 0;\n  mid = mid + Math.imul(ah2, bl9) | 0;\n  hi = hi + Math.imul(ah2, bh9) | 0;\n  var w11 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n  c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;\n  w11 &= 0x3ffffff;\n  /* k = 12 */\n\n  lo = Math.imul(al9, bl3);\n  mid = Math.imul(al9, bh3);\n  mid = mid + Math.imul(ah9, bl3) | 0;\n  hi = Math.imul(ah9, bh3);\n  lo = lo + Math.imul(al8, bl4) | 0;\n  mid = mid + Math.imul(al8, bh4) | 0;\n  mid = mid + Math.imul(ah8, bl4) | 0;\n  hi = hi + Math.imul(ah8, bh4) | 0;\n  lo = lo + Math.imul(al7, bl5) | 0;\n  mid = mid + Math.imul(al7, bh5) | 0;\n  mid = mid + Math.imul(ah7, bl5) | 0;\n  hi = hi + Math.imul(ah7, bh5) | 0;\n  lo = lo + Math.imul(al6, bl6) | 0;\n  mid = mid + Math.imul(al6, bh6) | 0;\n  mid = mid + Math.imul(ah6, bl6) | 0;\n  hi = hi + Math.imul(ah6, bh6) | 0;\n  lo = lo + Math.imul(al5, bl7) | 0;\n  mid = mid + Math.imul(al5, bh7) | 0;\n  mid = mid + Math.imul(ah5, bl7) | 0;\n  hi = hi + Math.imul(ah5, bh7) | 0;\n  lo = lo + Math.imul(al4, bl8) | 0;\n  mid = mid + Math.imul(al4, bh8) | 0;\n  mid = mid + Math.imul(ah4, bl8) | 0;\n  hi = hi + Math.imul(ah4, bh8) | 0;\n  lo = lo + Math.imul(al3, bl9) | 0;\n  mid = mid + Math.imul(al3, bh9) | 0;\n  mid = mid + Math.imul(ah3, bl9) | 0;\n  hi = hi + Math.imul(ah3, bh9) | 0;\n  var w12 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n  c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;\n  w12 &= 0x3ffffff;\n  /* k = 13 */\n\n  lo = Math.imul(al9, bl4);\n  mid = Math.imul(al9, bh4);\n  mid = mid + Math.imul(ah9, bl4) | 0;\n  hi = Math.imul(ah9, bh4);\n  lo = lo + Math.imul(al8, bl5) | 0;\n  mid = mid + Math.imul(al8, bh5) | 0;\n  mid = mid + Math.imul(ah8, bl5) | 0;\n  hi = hi + Math.imul(ah8, bh5) | 0;\n  lo = lo + Math.imul(al7, bl6) | 0;\n  mid = mid + Math.imul(al7, bh6) | 0;\n  mid = mid + Math.imul(ah7, bl6) | 0;\n  hi = hi + Math.imul(ah7, bh6) | 0;\n  lo = lo + Math.imul(al6, bl7) | 0;\n  mid = mid + Math.imul(al6, bh7) | 0;\n  mid = mid + Math.imul(ah6, bl7) | 0;\n  hi = hi + Math.imul(ah6, bh7) | 0;\n  lo = lo + Math.imul(al5, bl8) | 0;\n  mid = mid + Math.imul(al5, bh8) | 0;\n  mid = mid + Math.imul(ah5, bl8) | 0;\n  hi = hi + Math.imul(ah5, bh8) | 0;\n  lo = lo + Math.imul(al4, bl9) | 0;\n  mid = mid + Math.imul(al4, bh9) | 0;\n  mid = mid + Math.imul(ah4, bl9) | 0;\n  hi = hi + Math.imul(ah4, bh9) | 0;\n  var w13 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n  c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;\n  w13 &= 0x3ffffff;\n  /* k = 14 */\n\n  lo = Math.imul(al9, bl5);\n  mid = Math.imul(al9, bh5);\n  mid = mid + Math.imul(ah9, bl5) | 0;\n  hi = Math.imul(ah9, bh5);\n  lo = lo + Math.imul(al8, bl6) | 0;\n  mid = mid + Math.imul(al8, bh6) | 0;\n  mid = mid + Math.imul(ah8, bl6) | 0;\n  hi = hi + Math.imul(ah8, bh6) | 0;\n  lo = lo + Math.imul(al7, bl7) | 0;\n  mid = mid + Math.imul(al7, bh7) | 0;\n  mid = mid + Math.imul(ah7, bl7) | 0;\n  hi = hi + Math.imul(ah7, bh7) | 0;\n  lo = lo + Math.imul(al6, bl8) | 0;\n  mid = mid + Math.imul(al6, bh8) | 0;\n  mid = mid + Math.imul(ah6, bl8) | 0;\n  hi = hi + Math.imul(ah6, bh8) | 0;\n  lo = lo + Math.imul(al5, bl9) | 0;\n  mid = mid + Math.imul(al5, bh9) | 0;\n  mid = mid + Math.imul(ah5, bl9) | 0;\n  hi = hi + Math.imul(ah5, bh9) | 0;\n  var w14 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n  c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;\n  w14 &= 0x3ffffff;\n  /* k = 15 */\n\n  lo = Math.imul(al9, bl6);\n  mid = Math.imul(al9, bh6);\n  mid = mid + Math.imul(ah9, bl6) | 0;\n  hi = Math.imul(ah9, bh6);\n  lo = lo + Math.imul(al8, bl7) | 0;\n  mid = mid + Math.imul(al8, bh7) | 0;\n  mid = mid + Math.imul(ah8, bl7) | 0;\n  hi = hi + Math.imul(ah8, bh7) | 0;\n  lo = lo + Math.imul(al7, bl8) | 0;\n  mid = mid + Math.imul(al7, bh8) | 0;\n  mid = mid + Math.imul(ah7, bl8) | 0;\n  hi = hi + Math.imul(ah7, bh8) | 0;\n  lo = lo + Math.imul(al6, bl9) | 0;\n  mid = mid + Math.imul(al6, bh9) | 0;\n  mid = mid + Math.imul(ah6, bl9) | 0;\n  hi = hi + Math.imul(ah6, bh9) | 0;\n  var w15 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n  c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;\n  w15 &= 0x3ffffff;\n  /* k = 16 */\n\n  lo = Math.imul(al9, bl7);\n  mid = Math.imul(al9, bh7);\n  mid = mid + Math.imul(ah9, bl7) | 0;\n  hi = Math.imul(ah9, bh7);\n  lo = lo + Math.imul(al8, bl8) | 0;\n  mid = mid + Math.imul(al8, bh8) | 0;\n  mid = mid + Math.imul(ah8, bl8) | 0;\n  hi = hi + Math.imul(ah8, bh8) | 0;\n  lo = lo + Math.imul(al7, bl9) | 0;\n  mid = mid + Math.imul(al7, bh9) | 0;\n  mid = mid + Math.imul(ah7, bl9) | 0;\n  hi = hi + Math.imul(ah7, bh9) | 0;\n  var w16 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n  c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;\n  w16 &= 0x3ffffff;\n  /* k = 17 */\n\n  lo = Math.imul(al9, bl8);\n  mid = Math.imul(al9, bh8);\n  mid = mid + Math.imul(ah9, bl8) | 0;\n  hi = Math.imul(ah9, bh8);\n  lo = lo + Math.imul(al8, bl9) | 0;\n  mid = mid + Math.imul(al8, bh9) | 0;\n  mid = mid + Math.imul(ah8, bl9) | 0;\n  hi = hi + Math.imul(ah8, bh9) | 0;\n  var w17 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n  c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;\n  w17 &= 0x3ffffff;\n  /* k = 18 */\n\n  lo = Math.imul(al9, bl9);\n  mid = Math.imul(al9, bh9);\n  mid = mid + Math.imul(ah9, bl9) | 0;\n  hi = Math.imul(ah9, bh9);\n  var w18 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n  c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;\n  w18 &= 0x3ffffff;\n  o[0] = w0;\n  o[1] = w1;\n  o[2] = w2;\n  o[3] = w3;\n  o[4] = w4;\n  o[5] = w5;\n  o[6] = w6;\n  o[7] = w7;\n  o[8] = w8;\n  o[9] = w9;\n  o[10] = w10;\n  o[11] = w11;\n  o[12] = w12;\n  o[13] = w13;\n  o[14] = w14;\n  o[15] = w15;\n  o[16] = w16;\n  o[17] = w17;\n  o[18] = w18;\n\n  if (c !== 0) {\n    o[19] = c;\n    out.length += 1;\n  } // Note: we shouldn't need to strip here.\n\n\n  return out;\n} // Polyfill comb.\n\n\nif (!Math.imul) comb10MulTo = smallMulTo;\n/*\n * Expose\n */\n\nBN.Red = Red;\nmodule.exports = BN;","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/bcrypto/lib/js/bn.js"],"names":["require","custom","zeros","groupSizes","groupBases","primes","p192","p224","p521","k256","p25519","p448","modes","NONE","QUO","REM","BOTH","EUCLID","ALL","WND_WIDTH","WND_SIZE","HAS_BIGINT","BigInt","BN","num","base","endian","words","length","negative","red","from","a","b","carry","i","_alloc","r","Math","max","enforce","isBN","_iadd","cmp","ucmp","_isub","isSMI","_iaddn","_isubn","clone","iadd","iaddn","assert","_strip","_normalize","isub","isubn","out","comb10MulTo","len","smallMulTo","bigMulTo","jumboMulTo","mul","_move","neg","w","lo","Array","_mul","imuln","bits","utestn","iushrn","flags","nonzero","isZero","as","bs","q","quon","remn","_wordDiv","hi","word","shift","countBits","iushln","m","d","_ishlnsubmul","j","ahi","alo","quo","qj","min","ineg","_expand","k","_div","iquon","rem","remrn","iremn","p","acc","div","idivn","mod","modrn","imodn","quorem","bit","isOdd","pow","pown","sqr","imul","RangeError","ucmpn","u","t","bitLength","v","muln","sub","_rootrem","root","rootrem","sign","sqrt","isPower","x","y","iuand","iuor","width","inotn","iand","iandn","n","abs","iuandn","ior","iorn","iuorn","iuxor","ixor","ixorn","iuxorn","inot","s","ceil","ishln","toNumber","ishl","mask","ncarry","c","iushl","output","ishrn","ishr","_split","iushr","val","usetn","iumaskn","imaskn","pos","index","more","next","iabs","res","cmpn","mont","toRed","redLegendre","isEven","Error","_cloneNormal","isNeg","imod","zeroBits","bmod8","andln","table","z","gcd","_factor2","az","bz","lcm","A","B","C","D","g","yp","xp","im","jm","invert","range","egcd","fermat","redFermat","fromRed","powm","redPow","powmn","redPown","sqrtm","redSqrt","sqrtpq","sp","sq","mp","mq","lhs","rhs","rng","reps","limit","isPrimeMR","isPrimeLucas","force2","nm1","subn","nm3","ushrn","rnm1","rone","random","redSqr","toString","jacobi","isSquare","addn","nm2","ushln","testn","notn","ctx","Red","convertTo","convertFrom","eq","_forceRed","add","idiv","divn","nonred","ipow","ipown","isqr","isqrt","idivsqrt","divsqrt","shl","shln","eqn","isHigh","isLow","legendre","kronecker","iinvert","ifermat","dest","size","push","x1","x2","delta","copy","fromNumber","fromBuffer","toBuffer","prefix","czero","zword","flag","cond","mask0","mask1","toDouble","s52","s26","padding","getBase","_check","off","groupSize","groupBase","toArrayLike","Buffer","ArrayType","bytes","byteLength","allocate","isInteger","reverse","isFinite","floor","start","_fromHex","value","str","replace","charCodeAt","_fromBase","parseHex","limbLen","limbPow","total","end","parseBase","json","isArray","chunk","join","fromString","inject","data","fromArrayLike","isBuffer","left","fromBigInt","fromBN","fromBool","TypeError","args","Barrett","Mont","name","prime","P192","P224","P521","K256","P25519","P448","_prime","exp","randomBytes","cast","space","randomBits","of","fromDouble","fromJSON","fromArray","decode","obj","wordSize","native","Prime","one","split","imulK","input","prev","mb","sm1","e","ireduce","_verify2","_verify1","powInt","powNum","wnd","sqrn","toBigInt","intFrom","intTo","sqrt3mod4","sqrt5mod8sm1","sqrt5mod8","sqrt0","alpha","beta","divsqrt3mod4","divsqrt5mod8","u2","u3","u5","v3","v7","symbol","coprime","Boolean","ceq","_invertp","_shift","r2","ri","mi","rib","umaskn","makeError","msg","err","captureStackTrace","message","type","Number","isSafeInteger","allocUnsafeSlow","clz32","self","rword","hncarry","zero","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","mid","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","module","exports"],"mappings":"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","sourcesContent":["/*!\n * bn.js - big numbers for bcrypto\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on indutny/bn.js:\n *   Copyright (c) 2015, Fedor Indutny (MIT License).\n *   https://github.com/indutny/bn.js\n *\n * Parts of this software are based on golang/go:\n *   Copyright (c) 2009, The Go Authors. All rights reserved.\n *   https://github.com/golang/go\n *\n * Parts of this software are based on openssl/openssl:\n *   Copyright (c) 1998-2018, The OpenSSL Project (Apache License v2.0).\n *   Copyright (c) 1995-1998, Eric A. Young, Tim J. Hudson. All rights reserved.\n *   https://github.com/openssl/openssl\n *\n * Parts of this software are based on libgmp:\n *   Copyright (c) 1991-1997, 1999-2014, Free Software Foundation, Inc.\n *   https://gmplib.org/\n *\n * Parts of this software are based on v8/v8:\n *   Copyright (c) 2017, The V8 Project Authors (BSD-Style License).\n *   https://github.com/v8/v8\n *\n * Resources:\n *   https://github.com/indutny/bn.js/blob/master/lib/bn.js\n *   https://github.com/indutny/miller-rabin/blob/master/lib/mr.js\n *   https://github.com/golang/go/blob/master/src/math/big/int.go\n *   https://github.com/golang/go/blob/master/src/math/big/nat.go\n *   https://github.com/golang/go/blob/master/src/math/big/prime.go\n *   https://github.com/openssl/openssl/tree/master/crypto/bn\n *   https://github.com/openssl/openssl/blob/master/crypto/bn/bn_kron.c\n *   https://github.com/gnutls/nettle/blob/master/mini-gmp.c\n *   https://github.com/v8/v8/blob/master/src/objects/bigint.cc\n */\n\n/* eslint valid-typeof: \"off\" */\n\n'use strict';\n\nconst {custom} = require('../internal/custom');\n\n/*\n * Constants\n */\n\nconst zeros = [\n  '',\n  '0',\n  '00',\n  '000',\n  '0000',\n  '00000',\n  '000000',\n  '0000000',\n  '00000000',\n  '000000000',\n  '0000000000',\n  '00000000000',\n  '000000000000',\n  '0000000000000',\n  '00000000000000',\n  '000000000000000',\n  '0000000000000000',\n  '00000000000000000',\n  '000000000000000000',\n  '0000000000000000000',\n  '00000000000000000000',\n  '000000000000000000000',\n  '0000000000000000000000',\n  '00000000000000000000000',\n  '000000000000000000000000',\n  '0000000000000000000000000'\n];\n\nconst groupSizes = [\n  0x00, 0x19, 0x10, 0x0c, 0x0b, 0x0a,\n  0x09, 0x08, 0x08, 0x07, 0x07, 0x07,\n  0x07, 0x06, 0x06, 0x06, 0x06, 0x06,\n  0x06, 0x06, 0x05, 0x05, 0x05, 0x05,\n  0x05, 0x05, 0x05, 0x05, 0x05, 0x05,\n  0x05, 0x05, 0x05, 0x05, 0x05, 0x05\n];\n\nconst groupBases = [\n  0x00000000, 0x02000000, 0x0290d741, 0x01000000,\n  0x02e90edd, 0x039aa400, 0x0267bf47, 0x01000000,\n  0x0290d741, 0x00989680, 0x012959c3, 0x0222c000,\n  0x03bd7765, 0x0072e440, 0x00adcea1, 0x01000000,\n  0x01704f61, 0x0206fc40, 0x02cddcf9, 0x03d09000,\n  0x003e5185, 0x004ea360, 0x006235f7, 0x00798000,\n  0x009502f9, 0x00b54ba0, 0x00daf26b, 0x01069c00,\n  0x0138f9ad, 0x0172c9e0, 0x01b4d89f, 0x02000000,\n  0x025528a1, 0x02b54a20, 0x03216b93, 0x039aa400\n];\n\nconst primes = {\n  p192: null,\n  p224: null,\n  p521: null,\n  k256: null,\n  p25519: null,\n  p448: null\n};\n\nconst modes = {\n  NONE: 0,\n  QUO: 1,\n  REM: 2,\n  BOTH: 3,\n  EUCLID: 4,\n  ALL: 7\n};\n\nconst WND_WIDTH = 4;\nconst WND_SIZE = 1 << (WND_WIDTH - 1);\n\nconst HAS_BIGINT = typeof BigInt === 'function';\n\n/**\n * BN\n */\n\nclass BN {\n  constructor(num, base, endian) {\n    this.words = [0];\n    this.length = 1;\n    this.negative = 0;\n    this.red = null;\n    this.from(num, base, endian);\n  }\n\n  /*\n   * Addition Engine\n   */\n\n  _iadd(a, b) {\n    let carry = 0;\n    let i = 0;\n\n    // a.length > b.length\n    if (a.length < b.length)\n      [a, b] = [b, a];\n\n    if (a !== this)\n      this._alloc(a.length);\n\n    for (; i < b.length; i++) {\n      const r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n\n      this.words[i] = r & 0x3ffffff;\n\n      carry = r >>> 26;\n    }\n\n    for (; carry !== 0 && i < a.length; i++) {\n      const r = (a.words[i] | 0) + carry;\n\n      this.words[i] = r & 0x3ffffff;\n\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n\n    if (carry !== 0) {\n      this._alloc(this.length + 1);\n      this.words[this.length++] = carry;\n    } else if (a !== this) {\n      // Copy the rest of the words.\n      for (; i < a.length; i++)\n        this.words[i] = a.words[i];\n    }\n\n    // Note: we shouldn't need to strip here.\n    return this;\n  }\n\n  _iaddn(num) {\n    this.words[0] += num;\n\n    if (this.words[0] < 0x4000000)\n      return this;\n\n    // Carry.\n    let i = 0;\n\n    this._alloc(this.length + 1);\n\n    this.words[this.length] = 0;\n\n    for (; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      this.words[i + 1] += 1;\n    }\n\n    this.length = Math.max(this.length, i + 1);\n\n    // Note: we shouldn't need to strip here.\n    return this;\n  }\n\n  /*\n   * Addition\n   */\n\n  iadd(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    if (this.negative === num.negative) {\n      // x + y == x + y\n      // (-x) + (-y) == -(x + y)\n      this._iadd(this, num);\n    } else {\n      // x + (-y) == x - y == -(y - x)\n      // (-x) + y == y - x == -(x - y)\n      const cmp = this.ucmp(num);\n\n      // x + (-x) == (-x) + x == 0\n      if (cmp === 0) {\n        this.words[0] = 0;\n        this.length = 1;\n        this.negative = 0;\n        return this;\n      }\n\n      if (cmp < 0) {\n        this._isub(num, this);\n        this.negative ^= 1;\n      } else {\n        this._isub(this, num);\n      }\n    }\n\n    return this;\n  }\n\n  iaddn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n\n    const negative = (num < 0) | 0;\n\n    if (negative)\n      num = -num;\n\n    if (this.negative === negative) {\n      // x + y == x + y\n      // (-x) + (-y) == -(x + y)\n      this._iaddn(num);\n    } else {\n      // x + (-y) == x - y == -(y - x)\n      // (-x) + y == y - x == -(x - y)\n      if (this.length === 1 && this.words[0] < num) {\n        this.words[0] = num - this.words[0];\n        this.negative ^= 1;\n      } else {\n        this._isubn(num);\n      }\n    }\n\n    return this;\n  }\n\n  add(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    if (num.length > this.length)\n      return num.clone().iadd(this);\n\n    return this.clone().iadd(num);\n  }\n\n  addn(num) {\n    return this.clone().iaddn(num);\n  }\n\n  /*\n   * Subtraction Engine\n   */\n\n  _isub(a, b) {\n    let carry = 0;\n    let i = 0;\n\n    // a > b\n    assert(a.length >= b.length);\n\n    if (a !== this)\n      this._alloc(a.length);\n\n    for (; i < b.length; i++) {\n      const r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n\n      carry = r >> 26;\n\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    for (; carry !== 0 && i < a.length; i++) {\n      const r = (a.words[i] | 0) + carry;\n\n      carry = r >> 26;\n\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    assert(carry === 0);\n\n    // Copy rest of the words.\n    if (a !== this) {\n      for (; i < a.length; i++)\n        this.words[i] = a.words[i];\n    }\n\n    this.length = Math.max(this.length, i);\n\n    return this._strip();\n  }\n\n  _isubn(num) {\n    this.words[0] -= num;\n\n    if (this.words[0] >= 0)\n      return this._normalize();\n\n    assert(this.length !== 1);\n\n    // Carry.\n    this._alloc(this.length + 1);\n\n    for (let i = 0; i < this.length && this.words[i] < 0; i++) {\n      this.words[i] += 0x4000000;\n      this.words[i + 1] -= 1;\n    }\n\n    this.words[this.length] = 0;\n\n    return this._strip();\n  }\n\n  /*\n   * Subtraction\n   */\n\n  isub(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    if (this.negative !== num.negative) {\n      // x - (-y) == x + y\n      // (-x) - y == -(x + y)\n      this._iadd(this, num);\n    } else {\n      // x - y == x - y == -(y - x)\n      // (-x) - (-y) == y - x == -(x - y)\n      const cmp = this.ucmp(num);\n\n      // x - x == 0\n      if (cmp === 0) {\n        this.words[0] = 0;\n        this.length = 1;\n        this.negative = 0;\n        return this;\n      }\n\n      if (cmp < 0) {\n        this._isub(num, this);\n        this.negative ^= 1;\n      } else {\n        this._isub(this, num);\n      }\n    }\n\n    return this;\n  }\n\n  isubn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n\n    const negative = (num < 0) | 0;\n\n    if (negative)\n      num = -num;\n\n    if (this.negative !== negative) {\n      // x - (-y) == x + y\n      // (-x) - y == -(x + y)\n      this._iaddn(num);\n    } else {\n      // x - y == x - y == -(y - x)\n      // (-x) - (-y) == y - x == -(x - y)\n      if (this.length === 1 && this.words[0] < num) {\n        this.words[0] = num - this.words[0];\n        this.negative ^= 1;\n      } else {\n        this._isubn(num);\n      }\n    }\n\n    return this;\n  }\n\n  sub(num) {\n    return this.clone().isub(num);\n  }\n\n  subn(num) {\n    return this.clone().isubn(num);\n  }\n\n  /*\n   * Multiplication Engine\n   */\n\n  _mul(num, out) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    enforce(BN.isBN(out), 'out', 'bignum');\n\n    if (this.length === 10 && num.length === 10)\n      return comb10MulTo(this, num, out);\n\n    const len = this.length + num.length;\n\n    if (len < 63)\n      return smallMulTo(this, num, out);\n\n    if (len < 1024)\n      return bigMulTo(this, num, out);\n\n    return jumboMulTo(this, num, out);\n  }\n\n  /*\n   * Multiplication\n   */\n\n  imul(num) {\n    return this.mul(num)._move(this);\n  }\n\n  imuln(num) {\n    enforce(isSMI(num), 'num', 'smi');\n\n    const neg = (num < 0) | 0;\n\n    if (neg)\n      num = -num;\n\n    // Carry.\n    let carry = 0;\n\n    for (let i = 0; i < this.length; i++) {\n      const w = this.words[i] * num;\n      const lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      carry += lo >>> 26;\n\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    this.negative ^= neg;\n\n    if (carry !== 0) {\n      this._alloc(this.length + 1);\n      this.words[this.length++] = carry;\n    } else {\n      this._strip();\n    }\n\n    return this;\n  }\n\n  mul(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    const len = this.length + num.length;\n    const out = new BN();\n\n    out.words = new Array(len);\n\n    for (let i = 0; i < len; i ++)\n      out.words[i] = 0;\n\n    return this._mul(num, out);\n  }\n\n  muln(num) {\n    return this.clone().imuln(num);\n  }\n\n  /*\n   * Multiplication + Shift\n   */\n\n  mulShift(num, bits) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    enforce((bits >>> 0) === bits, 'bits', 'uint32');\n\n    const r = this.mul(num);\n    const b = r.utestn(bits - 1);\n\n    r.iushrn(bits);\n\n    if (this.negative ^ num.negative)\n      return r.isubn(b);\n\n    return r.iaddn(b);\n  }\n\n  /*\n   * Division Engine\n   */\n\n  _div(num, flags) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    assert((flags & modes.ALL) === flags);\n    assert(flags !== modes.NONE);\n\n    const a = this;\n    const b = num;\n\n    nonzero(!b.isZero());\n\n    if (a.isZero())\n      return [new BN(0), new BN(0)];\n\n    const as = a.negative;\n    const bs = b.negative;\n\n    a.negative = 0;\n    b.negative = 0;\n\n    let q = null;\n    let r = null;\n\n    if (a.ucmp(b) < 0) {\n      if (flags & modes.QUO)\n        q = new BN(0);\n\n      if (flags & modes.REM)\n        r = a.clone();\n    } else if (b.length === 1) {\n      if (flags & modes.QUO)\n        q = a.quon(b.words[0]);\n\n      if (flags & modes.REM)\n        r = a.remn(b.words[0]);\n    } else {\n      [q, r] = a._wordDiv(b, flags);\n    }\n\n    a.negative = as;\n    b.negative = bs;\n\n    if (flags & modes.QUO) {\n      q.negative = a.negative ^ b.negative;\n      q._normalize();\n    }\n\n    if (flags & modes.REM) {\n      r.negative = a.negative;\n      r._normalize();\n    }\n\n    if (flags & modes.EUCLID) {\n      if (flags & modes.QUO) {\n        assert((flags & modes.REM) !== 0);\n\n        if (r.negative !== 0) {\n          if (b.negative !== 0)\n            q.iaddn(1);\n          else\n            q.isubn(1);\n        }\n      }\n\n      if (flags & modes.REM) {\n        if (r.negative !== 0) {\n          if (b.negative !== 0)\n            r.isub(b);\n          else\n            r.iadd(b);\n        }\n      }\n    }\n\n    return [q, r];\n  }\n\n  _wordDiv(num, flags) {\n    let a = this.clone();\n    let b = num;\n    let q = null;\n    let hi;\n\n    // Normalize.\n    const word = b.words[b.length - 1] | 0;\n    const shift = 26 - countBits(word);\n\n    if (shift !== 0) {\n      b = b.clone();\n\n      a.iushln(shift);\n      b.iushln(shift);\n\n      hi = b.words[b.length - 1] | 0;\n    } else {\n      hi = word;\n    }\n\n    // Initialize quotient.\n    const m = a.length - b.length;\n\n    assert(m >= 0);\n\n    if (flags & modes.QUO) {\n      q = new BN(0);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n\n      for (let i = 0; i < q.length; i++)\n        q.words[i] = 0;\n    }\n\n    // Diff.\n    const d = a.clone();\n\n    d._ishlnsubmul(b, 1, m);\n\n    if (d.negative === 0) {\n      if (q)\n        q.words[m] = 1;\n\n      a = d;\n    }\n\n    // Divide.\n    for (let j = m - 1; j >= 0; j--) {\n      const ahi = a.words[b.length + j];\n      const alo = a.words[b.length + j - 1];\n      const quo = ((ahi * 0x4000000 + alo) / hi) | 0;\n\n      let qj = Math.min(quo, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n\n      while (a.negative !== 0) {\n        qj -= 1;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        a.ineg();\n      }\n\n      if (q)\n        q.words[j] = qj;\n    }\n\n    // Strip.\n    if (q)\n      q._strip();\n\n    // Denormalize.\n    // Note: we shouldn't need to strip `a` here.\n    if ((flags & modes.REM) && shift !== 0)\n      a.iushrn(shift);\n\n    return [q, a];\n  }\n\n  _ishlnsubmul(num, mul, shift) {\n    let carry = 0;\n    let i = 0;\n\n    this._expand(num.length + shift);\n\n    for (; i < num.length; i++) {\n      const k = (this.words[i + shift] | 0) + carry;\n      const r = num.words[i] * mul;\n      const w = k - (r & 0x3ffffff);\n\n      carry = (w >> 26) - ((r / 0x4000000) | 0);\n\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    for (; i < this.length - shift; i++) {\n      const w = (this.words[i + shift] | 0) + carry;\n\n      carry = w >> 26;\n\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0)\n      return this._strip();\n\n    // Subtraction overflow.\n    assert(carry === -1);\n\n    carry = 0;\n\n    for (let i = 0; i < this.length; i++) {\n      const w = -(this.words[i] | 0) + carry;\n\n      carry = w >> 26;\n\n      this.words[i] = w & 0x3ffffff;\n    }\n\n    this.negative = 1;\n\n    return this._strip();\n  }\n\n  /*\n   * Truncation Division + Modulo\n   */\n\n  quorem(num) {\n    return this._div(num, modes.BOTH);\n  }\n\n  /*\n   * Truncation Division\n   */\n\n  iquo(num) {\n    return this.quo(num)._move(this);\n  }\n\n  iquon(num) {\n    enforce(isSMI(num), 'num', 'smi');\n    nonzero(num !== 0);\n\n    const neg = (num < 0) | 0;\n\n    if (neg)\n      num = -num;\n\n    let carry = 0;\n\n    for (let i = this.length - 1; i >= 0; i--) {\n      const w = (this.words[i] | 0) + carry * 0x4000000;\n\n      this.words[i] = (w / num) | 0;\n\n      carry = w % num;\n    }\n\n    this.negative ^= neg;\n\n    return this._strip();\n  }\n\n  quo(num) {\n    return this._div(num, modes.QUO)[0];\n  }\n\n  quon(num) {\n    return this.clone().iquon(num);\n  }\n\n  /*\n   * Truncation Modulo\n   */\n\n  irem(num) {\n    return this.rem(num)._move(this);\n  }\n\n  iremn(num) {\n    let m = this.remrn(num);\n\n    if (m < 0)\n      m = -m;\n\n    this.words[0] = m;\n    this.length = 1;\n\n    return this._normalize();\n  }\n\n  rem(num) {\n    return this._div(num, modes.REM)[1];\n  }\n\n  remn(num) {\n    return this.clone().iremn(num);\n  }\n\n  remrn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n    nonzero(num !== 0);\n\n    if (num < 0)\n      num = -num;\n\n    const p = (1 << 26) % num;\n\n    let acc = 0;\n\n    for (let i = this.length - 1; i >= 0; i--)\n      acc = (p * acc + (this.words[i] | 0)) % num;\n\n    return this.negative !== 0 ? (-acc | 0) : acc;\n  }\n\n  /*\n   * Euclidean Division + Modulo\n   */\n\n  divmod(num) {\n    return this._div(num, modes.BOTH | modes.EUCLID);\n  }\n\n  /*\n   * Euclidean Division\n   */\n\n  idiv(num) {\n    return this.div(num)._move(this);\n  }\n\n  idivn(num) {\n    if (this.negative === 0)\n      return this.iquon(num);\n\n    const r = this.remrn(num);\n\n    this.iquon(num);\n\n    if (r < 0) {\n      if (num < 0)\n        this.iaddn(1);\n      else\n        this.isubn(1);\n    }\n\n    return this;\n  }\n\n  div(num) {\n    return this._div(num, modes.BOTH | modes.EUCLID)[0];\n  }\n\n  divn(num) {\n    return this.clone().idivn(num);\n  }\n\n  /*\n   * Euclidean Modulo\n   */\n\n  imod(num) {\n    if (this.ucmp(num) < 0) {\n      if (this.negative !== 0) {\n        this._isub(num, this);\n        this.negative = 0;\n      }\n      return this;\n    }\n\n    return this.mod(num)._move(this);\n  }\n\n  imodn(num) {\n    this.words[0] = this.modrn(num);\n    this.length = 1;\n    this.negative = 0;\n    return this;\n  }\n\n  mod(num) {\n    return this._div(num, modes.REM | modes.EUCLID)[1];\n  }\n\n  modn(num) {\n    return this.clone().imodn(num);\n  }\n\n  modrn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n\n    let r = this.remrn(num);\n\n    if (r < 0) {\n      if (num < 0)\n        r -= num;\n      else\n        r += num;\n    }\n\n    return r;\n  }\n\n  /*\n   * Round Division\n   */\n\n  divRound(num) {\n    const [q, r] = this.quorem(num);\n\n    // Fast case - exact division.\n    if (r.isZero())\n      return q;\n\n    const bit = num.words[0] & 1;\n\n    num.iushrn(1);\n\n    const cmp = r.ucmp(num);\n\n    num.iushln(1);\n\n    num.words[0] |= bit;\n\n    // Round down.\n    if (cmp < 0 || (num.isOdd() && cmp === 0))\n      return q;\n\n    // Round up.\n    if (this.negative ^ num.negative)\n      return q.isubn(1);\n\n    return q.iaddn(1);\n  }\n\n  /*\n   * Exponentiation\n   */\n\n  ipow(num) {\n    return this.pow(num)._move(this);\n  }\n\n  ipown(num) {\n    return this.pown(num)._move(this);\n  }\n\n  pow(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    let b = countBits(num.words[num.length - 1]);\n    let r = new BN(1);\n\n    for (let i = num.length - 1; i >= 0; i--) {\n      const word = num.words[i];\n\n      for (let j = b - 1; j >= 0; j--) {\n        r = r.sqr();\n\n        if ((word >> j) & 1)\n          r = r.mul(this);\n      }\n\n      b = 26;\n    }\n\n    return r;\n  }\n\n  pown(num) {\n    enforce(isSMI(num), 'num', 'smi');\n\n    if (num < 0)\n      num = -num;\n\n    if (num === 0)\n      return new BN(1);\n\n    if (num === 1)\n      return this.clone();\n\n    const bits = countBits(num);\n\n    let r = this;\n\n    for (let i = bits - 2; i >= 0; i--) {\n      r = r.sqr();\n\n      if ((num >> i) & 1)\n        r = r.mul(this);\n    }\n\n    return r;\n  }\n\n  isqr() {\n    return this.imul(this);\n  }\n\n  sqr() {\n    return this.mul(this);\n  }\n\n  /*\n   * Roots Engine\n   */\n\n  _rootrem(pow, rem) {\n    enforce((pow >>> 0) === pow, 'num', 'uint32');\n\n    if (pow === 0)\n      throw new RangeError('Zeroth root.');\n\n    if (~pow & this.negative)\n      throw new RangeError('Negative with even root.');\n\n    if (this.ucmpn(1) <= 0)\n      return [this.clone(), new BN(0)];\n\n    let u = new BN(0);\n    let t = BN.shift(1, this.bitLength() / pow + 1 | 0);\n    let v, r;\n\n    if (this.negative !== 0)\n      t.ineg();\n\n    if (pow === 2) {\n      do {\n        u = t;\n        t = this.quo(u);\n        t.iadd(u);\n        t.iushrn(1);\n      } while (t.ucmp(u) < 0);\n    } else {\n      do {\n        u = t;\n        t = u.pown(pow - 1);\n        t = this.quo(t);\n        v = u.muln(pow - 1);\n        t.iadd(v);\n        t = t.quon(pow);\n      } while (t.ucmp(u) < 0);\n    }\n\n    if (rem) {\n      t = u.pown(pow);\n      r = this.sub(t);\n    }\n\n    return [u, r];\n  }\n\n  /*\n   * Roots\n   */\n\n  rootrem(pow) {\n    return this._rootrem(pow, 1);\n  }\n\n  iroot(pow) {\n    return this.root(pow)._move(this);\n  }\n\n  root(pow) {\n    return this._rootrem(pow, 0)[0];\n  }\n\n  isPower(pow) {\n    enforce((pow >>> 0) === pow, 'num', 'uint32');\n\n    if (pow === 0 || (~pow & this.negative))\n      return false;\n\n    const [, r] = this.rootrem(pow);\n\n    return r.sign() === 0;\n  }\n\n  sqrtrem() {\n    return this.rootrem(2);\n  }\n\n  isqrt() {\n    return this.sqrt()._move(this);\n  }\n\n  sqrt() {\n    return this.root(2);\n  }\n\n  isSquare() {\n    return this.isPower(2);\n  }\n\n  /*\n   * AND\n   */\n\n  iand(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    let x = this;\n    let y = num;\n\n    if (x === y)\n      return x;\n\n    if ((x.negative | y.negative) === 0)\n      return x.iuand(y);\n\n    if ((x.negative & y.negative) === 1) {\n      // (-x) & (-y) == ~(x-1) & ~(y-1)\n      //             == ~((x-1) | (y-1))\n      //             == -(((x-1) | (y-1)) + 1)\n      x.iaddn(1);\n      y.iaddn(1);\n      x.iuor(y);\n      x.isubn(1);\n      y.isubn(1);\n      return x;\n    }\n\n    // Assume x is the positive number.\n    if (x.negative !== 0)\n      [x, y] = [y.clone(), x];\n\n    // x & (-y) == x & ~(y-1)\n    //          == x & ~(y-1)\n    const width = x.bitLength();\n\n    y.iaddn(1);\n    y.inotn(width);\n    x.iuand(y);\n    y.inotn(width);\n    y.isubn(1);\n\n    return x._move(this);\n  }\n\n  iandn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n\n    if ((this.negative | (num < 0)) !== 0)\n      return this.iand(new BN(num));\n\n    this.words[0] &= num;\n    this.length = 1;\n\n    return this;\n  }\n\n  and(num) {\n    return this.clone().iand(num);\n  }\n\n  andn(num) {\n    return this.clone().iandn(num);\n  }\n\n  andrn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n\n    if ((this.negative | (num < 0)) !== 0) {\n      const n = this.iand(new BN(num));\n\n      if (n.length > 1)\n        throw new RangeError('Number exceeds 26 bits.');\n\n      return n.negative !== 0 ? -n.words[0] : n.words[0];\n    }\n\n    return this.words[0] & num;\n  }\n\n  /*\n   * Unsigned AND\n   */\n\n  iuand(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    this.length = Math.min(this.length, num.length);\n\n    for (let i = 0; i < this.length; i++)\n      this.words[i] &= num.words[i];\n\n    return this._strip();\n  }\n\n  iuandn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n\n    this.words[0] &= Math.abs(num);\n    this.length = 1;\n\n    return this._normalize();\n  }\n\n  uand(num) {\n    return this.clone().iuand(num);\n  }\n\n  uandn(num) {\n    return this.clone().iuandn(num);\n  }\n\n  uandrn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n\n    const n = this.words[0] & Math.abs(num);\n\n    return this.negative !== 0 ? (-n | 0) : n;\n  }\n\n  /*\n   * OR\n   */\n\n  ior(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    let x = this;\n    let y = num;\n\n    if (x === y)\n      return x;\n\n    if ((x.negative | y.negative) === 0)\n      return x.iuor(y);\n\n    if ((x.negative & y.negative) === 1) {\n      // (-x) | (-y) == ~(x-1) | ~(y-1)\n      //             == ~((x-1) & (y-1))\n      //             == -(((x-1) & (y-1)) + 1)\n      x.iaddn(1);\n      y.iaddn(1);\n      x.iuand(y);\n      x.isubn(1);\n      y.isubn(1);\n      return x;\n    }\n\n    // Assume x is the positive number.\n    y = y.clone();\n\n    if (x.negative !== 0)\n      [x, y] = [y, x];\n\n    // x | (-y) == x | ~(y-1)\n    //          == ~((y-1) & ~x)\n    //          == -(((y-1) & ~x) + 1)\n    y.iaddn(1);\n    x.inotn(y.bitLength());\n    y.iuand(x);\n    y.isubn(1);\n\n    return y._move(this);\n  }\n\n  iorn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n\n    if ((this.negative | (num < 0)) !== 0)\n      return this.ior(new BN(num));\n\n    this.words[0] |= num;\n\n    return this;\n  }\n\n  or(num) {\n    return this.clone().ior(num);\n  }\n\n  orn(num) {\n    return this.clone().iorn(num);\n  }\n\n  /*\n   * Unsigned OR\n   */\n\n  iuor(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    this._expand(num.length);\n\n    for (let i = 0; i < num.length; i++)\n      this.words[i] |= num.words[i];\n\n    // Note: we shouldn't need to strip here.\n    return this;\n  }\n\n  iuorn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n\n    this.words[0] |= Math.abs(num);\n\n    return this;\n  }\n\n  uor(num) {\n    return this.clone().iuor(num);\n  }\n\n  uorn(num) {\n    return this.clone().iuorn(num);\n  }\n\n  /*\n   * XOR\n   */\n\n  ixor(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    let x = this;\n    let y = num;\n\n    if (x === y) {\n      x.words[0] = 0;\n      x.length = 1;\n      x.negative = 0;\n      return x;\n    }\n\n    if ((x.negative | y.negative) === 0)\n      return x.iuxor(y);\n\n    if ((x.negative & y.negative) === 1) {\n      // (-x) ^ (-y) == ~(x-1) ^ ~(y-1)\n      //             == (x-1) ^ (y-1)\n      x.iaddn(1);\n      y.iaddn(1);\n      x.iuxor(y);\n      x.ineg();\n      y.isubn(1);\n      return x;\n    }\n\n    // Assume x is the positive number.\n    if (x.negative !== 0)\n      [x, y] = [y.clone(), x];\n\n    // x ^ (-y) == x ^ ~(y-1)\n    //          == ~(x ^ (y-1))\n    //          == -((x ^ (y-1)) + 1)\n    y.iaddn(1);\n    x.iuxor(y);\n    x.iaddn(1);\n    x.ineg();\n    y.isubn(1);\n\n    return x._move(this);\n  }\n\n  ixorn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n\n    if ((this.negative | (num < 0)) !== 0)\n      return this.ixor(new BN(num));\n\n    this.words[0] ^= num;\n\n    return this;\n  }\n\n  xor(num) {\n    return this.clone().ixor(num);\n  }\n\n  xorn(num) {\n    return this.clone().ixorn(num);\n  }\n\n  /*\n   * Unsigned XOR\n   */\n\n  iuxor(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    let a = this;\n    let b = num;\n\n    if (a.length < b.length)\n      [a, b] = [b, a];\n\n    let i = 0;\n\n    for (; i < b.length; i++)\n      this.words[i] = a.words[i] ^ b.words[i];\n\n    if (a !== this) {\n      this._alloc(a.length);\n\n      for (; i < a.length; i++)\n        this.words[i] = a.words[i];\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  }\n\n  iuxorn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n\n    this.words[0] ^= Math.abs(num);\n\n    return this._normalize();\n  }\n\n  uxor(num) {\n    return this.clone().iuxor(num);\n  }\n\n  uxorn(num) {\n    return this.clone().iuxorn(num);\n  }\n\n  /*\n   * NOT\n   */\n\n  inot() {\n    if (this.negative !== 0) {\n      // ~(-x) == ~(~(x-1)) == x-1\n      this.ineg().isubn(1);\n    } else {\n      // ~x == -x-1 == -(x+1)\n      this.iaddn(1).ineg();\n    }\n    return this;\n  }\n\n  not() {\n    return this.clone().inot();\n  }\n\n  inotn(width) {\n    enforce((width >>> 0) === width, 'width', 'uint32');\n\n    const r = width % 26;\n\n    let s = Math.ceil(width / 26);\n    let i = 0;\n\n    // Extend the buffer with leading zeroes.\n    this._expand(s);\n\n    if (r > 0)\n      s -= 1;\n\n    // Handle complete words.\n    for (; i < s; i++)\n      this.words[i] ^= 0x3ffffff;\n\n    // Handle the residue.\n    if (r > 0)\n      this.words[i] ^= (1 << r) - 1;\n\n    // And remove leading zeroes.\n    return this._strip();\n  }\n\n  notn(width) {\n    return this.clone().inotn(width);\n  }\n\n  /*\n   * Left Shift\n   */\n\n  ishl(num) {\n    enforce(BN.isBN(num), 'bits', 'bignum');\n    enforce(num.bitLength() <= 32, 'bits', 'uint32');\n    return this.ishln(num.toNumber());\n  }\n\n  ishln(bits) {\n    return this.iushln(bits);\n  }\n\n  shl(num) {\n    return this.clone().ishl(num);\n  }\n\n  shln(bits) {\n    return this.clone().ishln(bits);\n  }\n\n  /*\n   * Unsigned Left Shift\n   */\n\n  iushl(num) {\n    enforce(BN.isBN(num), 'bits', 'bignum');\n    enforce(num.bitLength() <= 32, 'bits', 'uint32');\n    return this.iushln(num.toNumber());\n  }\n\n  iushln(bits) {\n    enforce((bits >>> 0) === bits, 'bits', 'uint32');\n\n    const r = bits % 26;\n    const s = (bits - r) / 26;\n    const mask = ((1 << r) - 1) << (26 - r);\n\n    if (r !== 0) {\n      let carry = 0;\n\n      for (let i = 0; i < this.length; i++) {\n        const ncarry = this.words[i] & mask;\n        const c = ((this.words[i] | 0) - ncarry) << r;\n\n        this.words[i] = c | carry;\n\n        carry = ncarry >>> (26 - r);\n      }\n\n      if (carry !== 0) {\n        this._alloc(this.length + 1);\n        this.words[this.length++] = carry;\n      }\n    }\n\n    if (s !== 0) {\n      this._alloc(this.length + s);\n\n      for (let i = this.length - 1; i >= 0; i--)\n        this.words[i + s] = this.words[i];\n\n      for (let i = 0; i < s; i++)\n        this.words[i] = 0;\n\n      this.length += s;\n    }\n\n    return this._strip();\n  }\n\n  ushl(num) {\n    return this.clone().iushl(num);\n  }\n\n  ushln(bits) {\n    return this.clone().iushln(bits);\n  }\n\n  /*\n   * Right Shift Engine\n   */\n\n  _split(bits, output) {\n    const r = bits % 26;\n    const s = Math.min((bits - r) / 26, this.length);\n    const mask = (1 << r) - 1;\n\n    // Extended mode, copy masked part.\n    if (output) {\n      output._alloc(s);\n\n      for (let i = 0; i < s; i++)\n        output.words[i] = this.words[i];\n\n      output.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all.\n    } else if (this.length > s) {\n      this.length -= s;\n      for (let i = 0; i < this.length; i++)\n        this.words[i] = this.words[i + s];\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    let carry = 0;\n\n    if (r !== 0) {\n      for (let i = this.length - 1; i >= 0; i--) {\n        const word = this.words[i] | 0;\n\n        this.words[i] = (carry << (26 - r)) | (word >>> r);\n\n        carry = word & mask;\n      }\n    }\n\n    // Push carried bits as a mask.\n    if (output) {\n      if (carry !== 0) {\n        output._alloc(output.length + 1);\n        output.words[output.length++] = carry;\n      } else {\n        if (output.length === 0)\n          output.words[output.length++] = 0;\n\n        output._strip();\n      }\n    }\n\n    return this._strip();\n  }\n\n  /*\n   * Right Shift\n   */\n\n  ishr(num) {\n    enforce(BN.isBN(num), 'bits', 'bignum');\n    enforce(num.bitLength() <= 32, 'bits', 'uint32');\n    return this.ishrn(num.toNumber());\n  }\n\n  ishrn(bits) {\n    enforce((bits >>> 0) === bits, 'bits', 'uint32');\n\n    if (this.negative !== 0) {\n      // (-x) >> y == ~(x-1) >> y\n      //           == ~((x-1) >> y)\n      //           == -(((x-1) >> y) + 1)\n      this.iaddn(1);\n      this.iushrn(bits);\n      this.isubn(1);\n      return this;\n    }\n\n    return this.iushrn(bits);\n  }\n\n  shr(num) {\n    return this.clone().ishr(num);\n  }\n\n  shrn(bits) {\n    return this.clone().ishrn(bits);\n  }\n\n  /*\n   * Unsigned Right Shift\n   */\n\n  iushr(num) {\n    enforce(BN.isBN(num), 'bits', 'bignum');\n    enforce(num.bitLength() <= 32, 'bits', 'uint32');\n    return this.iushrn(num.toNumber());\n  }\n\n  iushrn(bits) {\n    enforce((bits >>> 0) === bits, 'bits', 'uint32');\n    return this._split(bits, null);\n  }\n\n  ushr(num) {\n    return this.clone().iushr(num);\n  }\n\n  ushrn(bits) {\n    return this.clone().iushrn(bits);\n  }\n\n  /*\n   * Bit Manipulation\n   */\n\n  setn(bit, val) {\n    enforce((bit >>> 0) === bit, 'bit', 'uint32');\n\n    if (this.negative !== 0) {\n      this.iaddn(1);\n      this.usetn(bit, !val);\n      this.isubn(1);\n      return this;\n    }\n\n    return this.usetn(bit, val);\n  }\n\n  usetn(bit, val) {\n    enforce((bit >>> 0) === bit, 'bit', 'uint32');\n\n    const r = bit % 26;\n    const s = (bit - r) / 26;\n\n    this._expand(s + 1);\n\n    if (val)\n      this.words[s] |= (1 << r);\n    else\n      this.words[s] &= ~(1 << r);\n\n    return this._strip();\n  }\n\n  testn(bit) {\n    enforce((bit >>> 0) === bit, 'bit', 'uint32');\n\n    const r = bit % 26;\n    const s = (bit - r) / 26;\n\n    // Fast case: bit is much higher than all existing words.\n    if (this.length <= s)\n      return this.negative;\n\n    // Check bit and return.\n    const w = this.words[s];\n    const val = (w >> r) & 1;\n\n    if (this.negative !== 0) {\n      if (r > 0 && (w & ((1 << r) - 1)))\n        return val ^ 1;\n\n      let j = s;\n\n      while (j--) {\n        if (this.words[j] > 0)\n          return val ^ 1;\n      }\n    }\n\n    return val;\n  }\n\n  utestn(bit) {\n    enforce((bit >>> 0) === bit, 'bit', 'uint32');\n\n    const r = bit % 26;\n    const s = (bit - r) / 26;\n\n    // Fast case: bit is much higher than all existing words.\n    if (this.length <= s)\n      return 0;\n\n    // Check bit and return.\n    return (this.words[s] >> r) & 1;\n  }\n\n  imaskn(bits) {\n    enforce((bits >>> 0) === bits, 'bits', 'uint32');\n\n    if (this.negative !== 0) {\n      this.iaddn(1);\n      this.inotn(bits + 1);\n      this.ineg();\n    }\n\n    return this.iumaskn(bits);\n  }\n\n  maskn(bits) {\n    return this.clone().imaskn(bits);\n  }\n\n  iumaskn(bits) {\n    enforce((bits >>> 0) === bits, 'bits', 'uint32');\n\n    const r = bits % 26;\n\n    let s = (bits - r) / 26;\n\n    if (this.length <= s)\n      return this;\n\n    if (r !== 0)\n      s += 1;\n\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0)\n      this.words[this.length - 1] &= (1 << r) - 1;\n\n    if (this.length === 0)\n      this.words[this.length++] = 0;\n\n    return this._strip();\n  }\n\n  umaskn(bits) {\n    return this.clone().iumaskn(bits);\n  }\n\n  andln(num) {\n    return this.words[0] & num;\n  }\n\n  bit(pos) {\n    return this.utestn(pos);\n  }\n\n  bits(pos, width) {\n    enforce((pos >>> 0) === pos, 'pos', 'uint32');\n    enforce((width >>> 0) === width, 'width', 'uint32');\n    enforce(width <= 26, 'width', 'width');\n\n    const shift = pos % 26;\n    const index = (pos - shift) / 26;\n\n    if (index >= this.length)\n      return 0;\n\n    let bits = (this.words[index] >> shift) & ((1 << width) - 1);\n\n    if (shift + width > 26 && index + 1 < this.length) {\n      const more = shift + width - 26;\n      const next = this.words[index + 1] & ((1 << more) - 1);\n\n      bits |= next << (26 - shift);\n    }\n\n    return bits;\n  }\n\n  /*\n   * Negation\n   */\n\n  ineg() {\n    if (!this.isZero())\n      this.negative ^= 1;\n\n    return this;\n  }\n\n  neg() {\n    return this.clone().ineg();\n  }\n\n  iabs() {\n    this.negative = 0;\n    return this;\n  }\n\n  abs() {\n    return this.clone().iabs();\n  }\n\n  /*\n   * Comparison\n   */\n\n  cmp(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    if (this.negative !== num.negative)\n      return num.negative - this.negative;\n\n    const res = this.ucmp(num);\n\n    if (this.negative !== 0)\n      return -res | 0;\n\n    return res;\n  }\n\n  cmpn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n\n    const negative = (num < 0) | 0;\n\n    if (this.negative !== negative)\n      return negative - this.negative;\n\n    const res = this.ucmpn(num);\n\n    if (this.negative !== 0)\n      return -res | 0;\n\n    return res;\n  }\n\n  eq(num) {\n    return this.cmp(num) === 0;\n  }\n\n  eqn(num) {\n    return this.cmpn(num) === 0;\n  }\n\n  gt(num) {\n    return this.cmp(num) > 0;\n  }\n\n  gtn(num) {\n    return this.cmpn(num) > 0;\n  }\n\n  gte(num) {\n    return this.cmp(num) >= 0;\n  }\n\n  gten(num) {\n    return this.cmpn(num) >= 0;\n  }\n\n  lt(num) {\n    return this.cmp(num) < 0;\n  }\n\n  ltn(num) {\n    return this.cmpn(num) < 0;\n  }\n\n  lte(num) {\n    return this.cmp(num) <= 0;\n  }\n\n  lten(num) {\n    return this.cmpn(num) <= 0;\n  }\n\n  sign() {\n    if (this.negative !== 0)\n      return -1;\n\n    if (this.length === 1 && this.words[0] === 0)\n      return 0;\n\n    return 1;\n  }\n\n  isZero() {\n    return this.length === 1 && this.words[0] === 0;\n  }\n\n  isNeg() {\n    return this.negative !== 0;\n  }\n\n  isPos() {\n    return this.negative === 0;\n  }\n\n  isOdd() {\n    return (this.words[0] & 1) === 1;\n  }\n\n  isEven() {\n    return (this.words[0] & 1) === 0;\n  }\n\n  /*\n   * Unsigned Comparison\n   */\n\n  ucmp(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    if (this.length < num.length)\n      return -1;\n\n    if (this.length > num.length)\n      return 1;\n\n    for (let i = this.length - 1; i >= 0; i--) {\n      const a = this.words[i] | 0;\n      const b = num.words[i] | 0;\n\n      if (a === b)\n        continue;\n\n      return (a > b) - (a < b);\n    }\n\n    return 0;\n  }\n\n  ucmpn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n\n    if (this.length > 1)\n      return 1;\n\n    const w = this.words[0] | 0;\n\n    if (num < 0)\n      num = -num;\n\n    return (w > num) - (w < num);\n  }\n\n  /*\n   * Number Theoretic Functions\n   */\n\n  legendre(num) {\n    const red = HAS_BIGINT ? BN.red(num) : BN.mont(num);\n    return this.toRed(red).redLegendre();\n  }\n\n  jacobi(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    if (num.isZero() || num.isEven())\n      throw new Error('jacobi: `num` must be odd.');\n\n    let a = this._cloneNormal();\n    let b = num.clone();\n    let j = 1;\n\n    if (b.isNeg()) {\n      if (a.isNeg())\n        j = -1;\n      b.ineg();\n    }\n\n    for (;;) {\n      if (b.cmpn(1) === 0)\n        return j;\n\n      if (a.isZero())\n        return 0;\n\n      a.imod(b);\n\n      if (a.isZero())\n        return 0;\n\n      const s = a.zeroBits();\n\n      if (s & 1) {\n        const bmod8 = b.andln(7);\n\n        if (bmod8 === 3 || bmod8 === 5)\n          j = -j;\n      }\n\n      const c = a.iushrn(s);\n\n      if (b.andln(3) === 3 && c.andln(3) === 3)\n        j = -j;\n\n      a = b;\n      b = c;\n    }\n  }\n\n  kronecker(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    const table = [\n      0,  1, 0, -1,\n      0, -1, 0,  1\n    ];\n\n    let a = this._cloneNormal();\n    let b = num.clone();\n    let s = 1;\n\n    if (b.isZero())\n      return a.ucmpn(1) === 0 ? s : 0;\n\n    if (!a.isOdd() && !b.isOdd())\n      return 0;\n\n    const z = b.zeroBits();\n\n    b.iushrn(z);\n\n    if (z & 1)\n      s = table[a.andln(7)];\n\n    if (b.isNeg()) {\n      if (a.isNeg())\n        s = -s;\n      b.ineg();\n    }\n\n    for (;;) {\n      if (a.isZero())\n        return b.cmpn(1) === 0 ? s : 0;\n\n      const z = a.zeroBits();\n\n      a.iushrn(z);\n\n      if (z & 1)\n        s *= table[b.andln(7)];\n\n      const w = a.words[0] ^ (a.negative * 0x3ffffff);\n\n      if (w & b.words[0] & 2)\n        s = -s;\n\n      b.imod(a);\n\n      [a, b] = [b, a];\n\n      b.negative = 0;\n    }\n  }\n\n  igcd(num) {\n    return this.gcd(num)._move(this);\n  }\n\n  gcd(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    if (this.isZero())\n      return num.abs();\n\n    if (num.isZero())\n      return this.abs();\n\n    let a = this.clone();\n    let b = num.clone();\n\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two.\n    const shift = a._factor2(b);\n\n    if (shift !== 0) {\n      a.iushrn(shift);\n      b.iushrn(shift);\n    }\n\n    for (;;) {\n      const az = a.zeroBits();\n      const bz = b.zeroBits();\n\n      if (az !== 0)\n        a.iushrn(az);\n\n      if (bz !== 0)\n        b.iushrn(bz);\n\n      const cmp = a.ucmp(b);\n\n      if (cmp < 0) {\n        // a > b\n        [a, b] = [b, a];\n      } else if (cmp === 0 || b.ucmpn(1) === 0) {\n        // Break if a == b.\n        // Break if b == 1 to avoid repeated subtraction.\n        break;\n      }\n\n      a._isub(a, b);\n    }\n\n    return b.iushln(shift);\n  }\n\n  ilcm(num) {\n    return this.lcm(num)._move(this);\n  }\n\n  lcm(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    if (this.isZero() || num.isZero())\n      return new BN(0);\n\n    return this.quo(this.gcd(num)).mul(num).iabs();\n  }\n\n  egcd(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    if (this.isZero()) {\n      return [\n        new BN(0),\n        new BN(num.sign()),\n        num.abs()\n      ];\n    }\n\n    if (num.isZero()) {\n      return [\n        new BN(this.sign()),\n        new BN(0),\n        this.abs()\n      ];\n    }\n\n    const x = this.clone();\n    const y = num.clone();\n\n    x.negative = 0;\n    y.negative = 0;\n\n    // A * x + B * y = x\n    const A = new BN(1);\n    const B = new BN(0);\n\n    // C * x + D * y = y\n    const C = new BN(0);\n    const D = new BN(1);\n\n    // Remove common factor of two.\n    const g = x._factor2(y);\n\n    if (g !== 0) {\n      x.iushrn(g);\n      y.iushrn(g);\n    }\n\n    const yp = y.clone();\n    const xp = x.clone();\n\n    while (!x.isZero()) {\n      let i = 0;\n\n      for (let im = 1; (x.words[0] & im) === 0 && i < 26; im <<= 1)\n        i += 1;\n\n      if (i > 0) {\n        x.iushrn(i);\n\n        while (i > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n\n          i -= 1;\n        }\n      }\n\n      let j = 0;\n\n      for (let jm = 1; (y.words[0] & jm) === 0 && j < 26; jm <<= 1)\n        j += 1;\n\n      if (j > 0) {\n        y.iushrn(j);\n\n        while (j > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n\n          j -= 1;\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    if (this.negative !== 0)\n      C.ineg();\n\n    if (num.negative !== 0)\n      D.ineg();\n\n    return [C, D, y.iushln(g)];\n  }\n\n  iinvert(num) {\n    return this.invert(num)._move(this);\n  }\n\n  invert(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    range(num.sign() > 0, 'invert');\n\n    if (num.cmpn(1) === 0)\n      throw new RangeError('Not invertible.');\n\n    const [s,, g] = this.egcd(num);\n\n    if (g.cmpn(1) !== 0)\n      throw new RangeError('Not invertible.');\n\n    return s.imod(num);\n  }\n\n  ifermat(num) {\n    return this.fermat(num)._move(this);\n  }\n\n  fermat(num) {\n    const red = HAS_BIGINT ? BN.red(num) : BN.mont(num);\n    return this.toRed(red).redFermat().fromRed();\n  }\n\n  ipowm(y, m, mont) {\n    return this.powm(y, m, mont)._move(this);\n  }\n\n  powm(y, m, mont) {\n    const red = !HAS_BIGINT && mont ? BN.mont(m) : BN.red(m);\n    return this.toRed(red).redPow(y).fromRed();\n  }\n\n  ipowmn(y, m, mont) {\n    return this.powmn(y, m, mont)._move(this);\n  }\n\n  powmn(y, m, mont) {\n    const red = mont ? BN.mont(m) : BN.red(m);\n    return this.toRed(red).redPown(y).fromRed();\n  }\n\n  isqrtm(p) {\n    return this.sqrtm(p)._move(this);\n  }\n\n  sqrtm(p) {\n    enforce(BN.isBN(p), 'p', 'bignum');\n\n    let red;\n\n    if (p.andln(3) === 3 || p.andln(7) === 5) {\n      // Probably not worth the setup.\n      red = BN.red(p);\n    } else {\n      red = BN.mont(p);\n    }\n\n    return this.toRed(red).redSqrt().fromRed();\n  }\n\n  isqrtpq(p, q) {\n    return this.sqrtpq(p, q)._move(this);\n  }\n\n  sqrtpq(p, q) {\n    const sp = this.sqrtm(p);\n    const sq = this.sqrtm(q);\n    const [mp, mq] = p.egcd(q);\n    const lhs = sq.mul(mp).mul(p);\n    const rhs = sp.mul(mq).mul(q);\n    const n = p.mul(q);\n\n    return lhs.iadd(rhs).imod(n);\n  }\n\n  /*\n   * Primality Testing\n   */\n\n  isPrime(rng, reps, limit) {\n    enforce((reps >>> 0) === reps, 'reps', 'uint32');\n\n    if (!this.isPrimeMR(rng, reps + 1, true))\n      return false;\n\n    if (!this.isPrimeLucas(limit))\n      return false;\n\n    return true;\n  }\n\n  isPrimeMR(rng, reps, force2 = false) {\n    enforce((reps >>> 0) === reps, 'reps', 'uint32');\n    enforce(reps > 0, 'reps', 'integer');\n    enforce(typeof force2 === 'boolean', 'force2', 'boolean');\n\n    const n = this;\n\n    if (n.cmpn(7) < 0) {\n      return n.cmpn(2) === 0\n          || n.cmpn(3) === 0\n          || n.cmpn(5) === 0;\n    }\n\n    if (n.isEven())\n      return false;\n\n    const nm1 = n.subn(1);\n    const nm3 = nm1.subn(2);\n    const k = nm1.zeroBits();\n    const q = nm1.ushrn(k);\n\n    const red = BN.red(n);\n    const rnm1 = nm1.toRed(red);\n    const rone = new BN(1).toRed(red);\n\nnext:\n    for (let i = 0; i < reps; i++) {\n      let x;\n\n      if (i === reps - 1 && force2) {\n        x = new BN(2);\n      } else {\n        x = BN.random(rng, 0, nm3);\n        x.iaddn(2);\n      }\n\n      let y = x.toRed(red).redPow(q);\n\n      if (y.cmp(rone) === 0 || y.cmp(rnm1) === 0)\n        continue;\n\n      for (let j = 1; j < k; j++) {\n        y = y.redSqr();\n\n        if (y.cmp(rnm1) === 0)\n          continue next;\n\n        if (y.cmp(rone) === 0)\n          return false;\n      }\n\n      return false;\n    }\n\n    return true;\n  }\n\n  isPrimeLucas(limit = 0) {\n    enforce((limit >>> 0) === limit, 'limit', 'uint32');\n\n    const n = this;\n\n    // Ignore 0 and 1.\n    if (n.cmpn(1) <= 0)\n      return false;\n\n    // Two is the only even prime.\n    if (n.isEven())\n      return n.cmpn(2) === 0;\n\n    let p = 3;\n\n    for (;;) {\n      if (p > 10000) {\n        // Thought to be impossible.\n        throw new Error(`Cannot find (D/n) = -1 for ${n.toString(10)}.`);\n      }\n\n      if (limit !== 0 && p > limit) {\n        // Optional DoS limit.\n        return false;\n      }\n\n      const d = new BN(p * p - 4);\n      const j = d.jacobi(n);\n\n      if (j === -1)\n        break;\n\n      if (j === 0)\n        return n.cmpn(p + 2) === 0;\n\n      if (p === 40) {\n        if (n.isSquare())\n          return false;\n      }\n\n      p += 1;\n    }\n\n    const s = n.addn(1);\n    const r = s.zeroBits();\n    const nm2 = n.subn(2);\n\n    let x = new BN(2);\n    let y = new BN(p);\n\n    s.iushrn(r);\n\n    for (let i = s.bitLength(); i >= 0; i--) {\n      if (s.utestn(i)) {\n        x = x.mul(y).iadd(n).isubn(p).imod(n);\n        y = y.sqr().iadd(nm2).imod(n);\n      } else {\n        y = y.mul(x).iadd(n).isubn(p).imod(n);\n        x = x.sqr().iadd(nm2).imod(n);\n      }\n    }\n\n    if (x.cmpn(2) === 0 || x.cmp(nm2) === 0) {\n      let a = x.muln(p);\n      let b = y.ushln(1);\n\n      if (a.cmp(b) < 0)\n        [a, b] = [b, a];\n\n      if (a.isub(b).imod(n).isZero())\n        return true;\n    }\n\n    for (let t = 0; t < r - 1; t++) {\n      if (x.isZero())\n        return true;\n\n      if (x.cmpn(2) === 0)\n        return false;\n\n      x = x.sqr().isubn(2).imod(n);\n    }\n\n    return false;\n  }\n\n  /*\n   * Twos Complement\n   */\n\n  toTwos(width) {\n    if (this.negative !== 0)\n      return this.abs().inotn(width).iaddn(1);\n\n    return this.clone();\n  }\n\n  fromTwos(width) {\n    enforce((width >>> 0) === width, 'width', 'uint32');\n    range(width > 0, 'width');\n\n    if (this.testn(width - 1))\n      return this.notn(width).iaddn(1).ineg();\n\n    return this.clone();\n  }\n\n  /*\n   * Reduction Context\n   */\n\n  toRed(ctx) {\n    enforce(ctx instanceof Red, 'ctx', 'reduction context');\n\n    if (this.red)\n      throw new Error('Already in reduction context.');\n\n    return ctx.convertTo(this);\n  }\n\n  fromRed() {\n    red(this.red, 'fromRed');\n    return this.red.convertFrom(this);\n  }\n\n  forceRed(ctx) {\n    enforce(ctx instanceof Red, 'ctx', 'reduction context');\n\n    if (this.red) {\n      if (!ctx.m.eq(this.red.m) || ctx.mont !== this.red.mont)\n        throw new Error('Already in reduction context.');\n    } else {\n      range(this.negative === 0, 'red');\n      range(this.ucmp(ctx.m) < 0, 'red');\n    }\n\n    return this.clone()._forceRed(ctx);\n  }\n\n  redIAdd(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    red(this.red, 'redIAdd');\n    return this.red.iadd(this, num);\n  }\n\n  redAdd(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    red(this.red, 'redAdd');\n    return this.red.add(this, num);\n  }\n\n  redIAddn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n    red(this.red, 'redIAddn');\n    return this.red.iaddn(this, num);\n  }\n\n  redAddn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n    red(this.red, 'redAddn');\n    return this.red.addn(this, num);\n  }\n\n  redISub(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    red(this.red, 'redISub');\n    return this.red.isub(this, num);\n  }\n\n  redSub(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    red(this.red, 'redSub');\n    return this.red.sub(this, num);\n  }\n\n  redISubn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n    red(this.red, 'redISubn');\n    return this.red.isubn(this, num);\n  }\n\n  redSubn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n    red(this.red, 'redSubn');\n    return this.red.subn(this, num);\n  }\n\n  redIMul(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    red(this.red, 'redIMul');\n    return this.red.imul(this, num);\n  }\n\n  redMul(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    red(this.red, 'redMul');\n    return this.red.mul(this, num);\n  }\n\n  redIMuln(num) {\n    enforce(isSMI(num), 'num', 'smi');\n    red(this.red, 'redIMuln');\n    return this.red.imuln(this, num);\n  }\n\n  redMuln(num) {\n    enforce(isSMI(num), 'num', 'smi');\n    red(this.red, 'redMuln');\n    return this.red.muln(this, num);\n  }\n\n  redIDiv(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    red(this.red, 'redIDiv');\n    return this.red.idiv(this, num);\n  }\n\n  redDiv(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    red(this.red, 'redDiv');\n    return this.red.div(this, num);\n  }\n\n  redIDivn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n    red(this.red, 'redIDivn');\n    return this.red.idivn(this, num);\n  }\n\n  redDivn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n    red(this.red, 'redDivn');\n    return this.red.divn(this, num);\n  }\n\n  redIPow(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    red(this.red, 'redIPow');\n    nonred(!num.red, 'redIPow');\n    return this.red.ipow(this, num);\n  }\n\n  redPow(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    red(this.red, 'redPow');\n    nonred(!num.red, 'redPow');\n    return this.red.pow(this, num);\n  }\n\n  redIPown(num) {\n    enforce(isSMI(num), 'num', 'smi');\n    red(this.red, 'redIPown');\n    return this.red.ipown(this, num);\n  }\n\n  redPown(num) {\n    enforce(isSMI(num), 'num', 'smi');\n    red(this.red, 'redPown');\n    return this.red.pown(this, num);\n  }\n\n  redISqr() {\n    red(this.red, 'redISqr');\n    return this.red.isqr(this);\n  }\n\n  redSqr() {\n    red(this.red, 'redSqr');\n    return this.red.sqr(this);\n  }\n\n  redISqrt() {\n    red(this.red, 'redISqrt');\n    return this.red.isqrt(this);\n  }\n\n  redSqrt() {\n    red(this.red, 'redSqrt');\n    return this.red.sqrt(this);\n  }\n\n  redIDivSqrt(v) {\n    red(this.red, 'redIDivSqrt');\n    return this.red.idivsqrt(this, v);\n  }\n\n  redDivSqrt(v) {\n    red(this.red, 'redDivSqrt');\n    return this.red.divsqrt(this, v);\n  }\n\n  redIsSquare() {\n    red(this.red, 'redIsSquare');\n    return this.red.isSquare(this);\n  }\n\n  redIShl(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    red(this.red, 'redIShl');\n    nonred(!num.red, 'redIShl');\n    return this.red.ishl(this, num);\n  }\n\n  redShl(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    red(this.red, 'redShl');\n    nonred(!num.red, 'redShl');\n    return this.red.shl(this, num);\n  }\n\n  redIShln(num) {\n    enforce((num >>> 0) === num, 'num', 'uint32');\n    red(this.red, 'redIShln');\n    return this.red.ishln(this, num);\n  }\n\n  redShln(num) {\n    enforce((num >>> 0) === num, 'num', 'uint32');\n    red(this.red, 'redShln');\n    return this.red.shln(this, num);\n  }\n\n  redINeg() {\n    red(this.red, 'redINeg');\n    return this.red.ineg(this);\n  }\n\n  redNeg() {\n    red(this.red, 'redNeg');\n    return this.red.neg(this);\n  }\n\n  redEq(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n    red(this.red, 'redEq');\n    return this.red.eq(this, num);\n  }\n\n  redEqn(num) {\n    enforce(isSMI(num), 'num', 'smi');\n    red(this.red, 'redEqn');\n    return this.red.eqn(this, num);\n  }\n\n  redIsHigh() {\n    red(this.red, 'redIsHigh');\n    return this.red.isHigh(this);\n  }\n\n  redIsLow() {\n    red(this.red, 'redIsLow');\n    return this.red.isLow(this);\n  }\n\n  redIsOdd() {\n    red(this.red, 'redIsOdd');\n    return this.red.isOdd(this);\n  }\n\n  redIsEven() {\n    red(this.red, 'redIsEven');\n    return this.red.isEven(this);\n  }\n\n  redLegendre() {\n    red(this.red, 'redLegendre');\n    return this.red.legendre(this);\n  }\n\n  redJacobi() {\n    red(this.red, 'redJacobi');\n    return this.red.jacobi(this);\n  }\n\n  redKronecker() {\n    red(this.red, 'redKronecker');\n    return this.red.kronecker(this);\n  }\n\n  redIInvert() {\n    red(this.red, 'redIInvert');\n    return this.red.iinvert(this);\n  }\n\n  redInvert() {\n    red(this.red, 'redInvert');\n    return this.red.invert(this);\n  }\n\n  redIFermat() {\n    red(this.red, 'redIFermat');\n    return this.red.ifermat(this);\n  }\n\n  redFermat() {\n    red(this.red, 'redFermat');\n    return this.red.fermat(this);\n  }\n\n  /*\n   * Internal\n   */\n\n  _move(dest) {\n    dest.words = this.words;\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n    return dest;\n  }\n\n  _alloc(size) {\n    while (this.words.length < size)\n      this.words.push(0);\n\n    return this;\n  }\n\n  _expand(size) {\n    this._alloc(size);\n\n    while (this.length < size)\n      this.words[this.length++] = 0;\n\n    return this;\n  }\n\n  _strip() {\n    while (this.length > 1 && this.words[this.length - 1] === 0)\n      this.length -= 1;\n\n    return this._normalize();\n  }\n\n  _normalize() {\n    assert(this.length > 0);\n\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0)\n      this.negative = 0;\n\n    return this;\n  }\n\n  _check() {\n    // We never have a zero length number.\n    assert(this.length > 0);\n\n    // Cannot exceed array bounds.\n    assert(this.length <= this.words.length);\n\n    if (this.length === 1) {\n      // Must be normalized.\n      if (this.words[0] === 0)\n        assert(this.negative === 0);\n      return this;\n    }\n\n    // Must be stripped.\n    assert(this.words[this.length - 1] !== 0);\n\n    return this;\n  }\n\n  _invertp(p) {\n    enforce(BN.isBN(p), 'p', 'bignum');\n    assert(this.negative === 0);\n    assert(p.sign() > 0);\n\n    if (this.isZero() || p.cmpn(1) === 0)\n      throw new RangeError('Not invertible.');\n\n    const a = this.clone();\n    const b = p.clone();\n    const x1 = new BN(1);\n    const x2 = new BN(0);\n    const delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      let i = 0;\n\n      for (let im = 1; (a.words[0] & im) === 0 && i < 26; im <<= 1)\n        i += 1;\n\n      if (i > 0) {\n        a.iushrn(i);\n\n        while (i > 0) {\n          if (x1.isOdd())\n            x1.iadd(delta);\n\n          x1.iushrn(1);\n\n          i -= 1;\n        }\n      }\n\n      let j = 0;\n\n      for (let jm = 1; (b.words[0] & jm) === 0 && j < 26; jm <<= 1)\n        j += 1;\n\n      if (j > 0) {\n        b.iushrn(j);\n\n        while (j > 0) {\n          if (x2.isOdd())\n            x2.iadd(delta);\n\n          x2.iushrn(1);\n\n          j -= 1;\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    // Quick reduction (typically +/- 2P).\n    const res = a.cmpn(1) === 0 ? x1 : x2;\n\n    if (res.ucmp(p) >= 0) {\n      res._isub(res, p);\n\n      if (res.ucmp(p) >= 0)\n        res._isub(res, p);\n    }\n\n    if (res.isNeg())\n      res.iadd(p);\n\n    return res;\n  }\n\n  _factor2(num) {\n    // Find common factor of two.\n    // Expects inputs to be non-zero.\n    if ((this.words[0] | num.words[0]) & 1)\n      return 0;\n\n    const len = Math.min(this.length, num.length);\n\n    let r = 0;\n\n    for (let i = 0; i < len; i++) {\n      const b = zeroBits(this.words[i] | num.words[i]);\n\n      r += b;\n\n      if (b !== 26)\n        break;\n    }\n\n    return r;\n  }\n\n  _cloneNormal() {\n    return this.red ? this.fromRed() : this.clone();\n  }\n\n  _forceRed(ctx) {\n    this.red = ctx;\n    return this;\n  }\n\n  /*\n   * Helpers\n   */\n\n  clone() {\n    const copy = new BN();\n\n    copy.words = new Array(this.length);\n\n    for (let i = 0; i < this.length; i++)\n      copy.words[i] = this.words[i];\n\n    copy.length = this.length;\n    copy.negative = this.negative;\n    copy.red = this.red;\n\n    return copy;\n  }\n\n  inject(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    this._alloc(num.length);\n\n    for (let i = 0; i < num.length; i++)\n      this.words[i] = num.words[i];\n\n    this.length = num.length;\n    this.negative = num.negative;\n    this.red = num.red;\n\n    return this;\n  }\n\n  set(num, endian) {\n    return this.fromNumber(num, endian);\n  }\n\n  swap(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    const x = this;\n    const y = num;\n\n    [x.words, y.words] = [y.words, x.words];\n    [x.length, y.length] = [y.length, x.length];\n    [x.negative, y.negative] = [y.negative, x.negative];\n    [x.red, y.red] = [y.red, x.red];\n\n    return x;\n  }\n\n  reverse() {\n    const neg = this.negative;\n\n    this.fromBuffer(this.toBuffer('be'), 'le');\n    this.negative = neg;\n\n    return this;\n  }\n\n  byteLength() {\n    return Math.ceil(this.bitLength() / 8);\n  }\n\n  bitLength() {\n    const w = this.words[this.length - 1];\n    const hi = countBits(w);\n    return (this.length - 1) * 26 + hi;\n  }\n\n  zeroBits() {\n    if (this.isZero())\n      return 0;\n\n    if (this.isOdd())\n      return 0;\n\n    let r = 0;\n\n    for (let i = 0; i < this.length; i++) {\n      const b = zeroBits(this.words[i]);\n\n      r += b;\n\n      if (b !== 26)\n        break;\n    }\n\n    return r;\n  }\n\n  isSafe() {\n    if (this.length <= 2)\n      return true;\n\n    if (this.length === 3 && this.words[2] === 0x01)\n      return true;\n\n    return false;\n  }\n\n  word(pos) {\n    enforce((pos >>> 0) === pos, 'pos', 'uint32');\n\n    if (pos >= this.length)\n      return 0;\n\n    return this.words[pos];\n  }\n\n  [custom]() {\n    let prefix = 'BN';\n\n    if (this.red)\n      prefix = 'BN-R';\n\n    return `<${prefix}: ${this.toString(10)}>`;\n  }\n\n  /*\n   * Constant Time\n   */\n\n  csign() {\n    return this.negative * -2 + 1 - this.czero();\n  }\n\n  czero() {\n    const zword = (this.words[0] - 1) >>> 31;\n    return ((this.length - 2) >>> 31) & zword;\n  }\n\n  cneg() {\n    return this.negative;\n  }\n\n  cpos() {\n    return this.negative ^ 1;\n  }\n\n  ceq(num) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    // Assumes `num` is the \"constant size\"\n    // parameter. Note that constant size\n    // doesn't necessarily mean secret.\n    let z = 0;\n\n    for (let i = 0; i < num.length; i++)\n      z |= this.words[i % this.length] ^ num.words[i];\n\n    z |= this.length ^ num.length;\n    z |= this.negative ^ num.negative;\n\n    return (z - 1) >>> 31;\n  }\n\n  ceqn(num) {\n    const neg = (num >> 31) & 1;\n    const word = ((num | 0) * (-neg | 1)) & 0x3ffffff;\n\n    let z = 0;\n\n    z |= this.words[0] ^ word;\n    z |= this.length ^ 1;\n    z |= this.negative ^ neg;\n\n    return (z - 1) >>> 31;\n  }\n\n  cswap(num, flag) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    const x = this;\n    const y = num;\n    const cond = ((flag >> 31) | (-flag >> 31)) & 1;\n    const mask = -cond & 0x3ffffff;\n\n    x._alloc(y.words.length);\n    y._alloc(x.words.length);\n\n    for (let i = 0; i < x.words.length; i++) {\n      const word = (x.words[i] ^ y.words[i]) & mask;\n\n      x.words[i] ^= word;\n      y.words[i] ^= word;\n    }\n\n    const length = (x.length ^ y.length) & mask;\n    const negative = (x.negative ^ y.negative) & mask;\n\n    x.length ^= length;\n    y.length ^= length;\n\n    x.negative ^= negative;\n    y.negative ^= negative;\n\n    return this;\n  }\n\n  cinject(num, flag) {\n    enforce(BN.isBN(num), 'num', 'bignum');\n\n    const x = this;\n    const y = num;\n    const cond = ((flag >> 31) | (-flag >> 31)) & 1;\n    const mask0 = (cond - 1) & 0x3ffffff;\n    const mask1 = ~(cond - 1) & 0x3ffffff;\n\n    x._alloc(y.length);\n\n    for (let i = 0; i < y.length; i++)\n      x.words[i] = (x.words[i] & mask0) | (y.words[i] & mask1);\n\n    x.length = (x.length & mask0) | (y.length & mask1);\n    x.negative = (x.negative & mask0) | (y.negative & mask1);\n\n    return this;\n  }\n\n  cset(num, flag) {\n    const cond = ((flag >> 31) | (-flag >> 31)) & 1;\n    const mask0 = (cond - 1) & 0x3ffffff;\n    const mask1 = ~(cond - 1) & 0x3ffffff;\n    const neg = (num >> 31) & 1;\n    const word = ((num | 0) * (-neg | 1)) & 0x3ffffff;\n\n    this.words[0] = (this.words[0] & mask0) | (word & mask1);\n    this.length = (this.length & mask0) | (1 & mask1);\n    this.negative = (this.negative & mask0) | (neg & mask1);\n\n    return this;\n  }\n\n  /*\n   * Conversion\n   */\n\n  toNumber() {\n    let num = this.words[0];\n\n    if (this.length === 2) {\n      num += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // Note: at this stage it is known that the top bit is set.\n      num += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      throw new RangeError('Number can only safely store up to 53 bits.');\n    }\n\n    return this.negative !== 0 ? -num : num;\n  }\n\n  toDouble() {\n    let num = 0;\n\n    for (let i = this.length - 1; i >= 0; i--)\n      num = (num * 0x4000000) + this.words[i];\n\n    return this.negative !== 0 ? -num : num;\n  }\n\n  valueOf() {\n    return this.toDouble();\n  }\n\n  toBigInt() {\n    if (!HAS_BIGINT)\n      throw new Error('BigInt is not supported!');\n\n    const s52 = BigInt(52);\n    const s26 = BigInt(26);\n\n    let i = this.length - 1;\n    let num = BigInt(0);\n\n    for (; i >= 1; i -= 2) {\n      const hi = this.words[i] * 0x4000000;\n      const lo = this.words[i - 1];\n\n      num = (num << s52) | BigInt(hi + lo);\n    }\n\n    if (i >= 0)\n      num = (num << s26) | BigInt(this.words[0]);\n\n    return this.negative !== 0 ? -num : num;\n  }\n\n  toBool() {\n    return !this.isZero();\n  }\n\n  toString(base, padding) {\n    base = getBase(base);\n\n    if (padding == null)\n      padding = 0;\n\n    if (padding === 0)\n      padding = 1;\n\n    enforce((base >>> 0) === base, 'base', 'uint32');\n    enforce((padding >>> 0) === padding, 'padding', 'uint32');\n\n    if (base < 2 || base > 36)\n      throw new RangeError('Base ranges between 2 and 36.');\n\n    this._check();\n\n    if (base === 16) {\n      let out = '';\n      let off = 0;\n      let carry = 0;\n\n      for (let i = 0; i < this.length; i++) {\n        const w = this.words[i];\n        const word = (((w << off) | carry) & 0xffffff).toString(16);\n\n        carry = (w >>> (24 - off)) & 0xffffff;\n\n        if (carry !== 0 || i !== this.length - 1)\n          out = zeros[6 - word.length] + word + out;\n        else\n          out = word + out;\n\n        off += 2;\n\n        if (off >= 26) {\n          off -= 26;\n          i -= 1;\n        }\n      }\n\n      if (carry !== 0)\n        out = carry.toString(16) + out;\n\n      while (out.length % padding !== 0)\n        out = '0' + out;\n\n      if (this.negative !== 0)\n        out = '-' + out;\n\n      return out;\n    }\n\n    const groupSize = groupSizes[base - 1];\n    const groupBase = groupBases[base - 1];\n    const c = this.clone();\n\n    let out = '';\n\n    c.negative = 0;\n\n    while (!c.isZero()) {\n      const r = c.remrn(groupBase).toString(base);\n\n      c.iquon(groupBase);\n\n      if (!c.isZero())\n        out = zeros[groupSize - r.length] + r + out;\n      else\n        out = r + out;\n    }\n\n    if (this.isZero())\n      out = '0';\n\n    while (out.length % padding !== 0)\n      out = '0' + out;\n\n    if (this.negative !== 0)\n      out = '-' + out;\n\n    return out;\n  }\n\n  toJSON() {\n    return this.toString(16, 2);\n  }\n\n  toArray(endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  }\n\n  toBuffer(endian, length) {\n    return this.toArrayLike(Buffer, endian, length);\n  }\n\n  toArrayLike(ArrayType, endian, length) {\n    if (endian == null)\n      endian = 'be';\n\n    if (length == null)\n      length = 0;\n\n    enforce(typeof ArrayType === 'function', 'ArrayType', 'function');\n    enforce(endian === 'be' || endian === 'le', 'endian', 'endianness');\n    enforce((length >>> 0) === length, 'length', 'uint32');\n\n    this._check();\n\n    const bytes = this.byteLength();\n    const size = length || Math.max(1, bytes);\n\n    if (bytes > size)\n      throw new RangeError('Byte array longer than desired length.');\n\n    const res = allocate(ArrayType, size);\n\n    // See: https://github.com/indutny/bn.js/pull/222\n    if (endian === 'be') {\n      let pos = res.length - 1;\n      let carry = 0;\n\n      for (let i = 0; i < this.length; i++) {\n        const shift = (i & 3) << 1;\n        const word = (this.words[i] << shift) | carry;\n\n        res[pos--] = word & 0xff;\n\n        if (pos >= 0)\n          res[pos--] = (word >>> 8) & 0xff;\n\n        if (pos >= 0)\n          res[pos--] = (word >>> 16) & 0xff;\n\n        if (shift === 6) {\n          if (pos >= 0)\n            res[pos--] = (word >>> 24) & 0xff;\n\n          carry = 0;\n        } else {\n          carry = word >>> 24;\n        }\n      }\n\n      if (pos >= 0) {\n        res[pos--] = carry;\n\n        while (pos >= 0)\n          res[pos--] = 0;\n\n        carry = 0;\n      }\n\n      assert(carry === 0);\n    } else {\n      let pos = 0;\n      let carry = 0;\n\n      for (let i = 0; i < this.length; i++) {\n        const shift = (i & 3) << 1;\n        const word = (this.words[i] << shift) | carry;\n\n        res[pos++] = word & 0xff;\n\n        if (pos < res.length)\n          res[pos++] = (word >>> 8) & 0xff;\n\n        if (pos < res.length)\n          res[pos++] = (word >>> 16) & 0xff;\n\n        if (shift === 6) {\n          if (pos < res.length)\n            res[pos++] = (word >>> 24) & 0xff;\n\n          carry = 0;\n        } else {\n          carry = word >>> 24;\n        }\n      }\n\n      if (pos < res.length) {\n        res[pos++] = carry;\n\n        while (pos < res.length)\n          res[pos++] = 0;\n\n        carry = 0;\n      }\n\n      assert(carry === 0);\n    }\n\n    return res;\n  }\n\n  encode(endian, length) {\n    return this.toBuffer(endian, length);\n  }\n\n  /*\n   * Instantiation\n   */\n\n  of(num, endian) {\n    return this.fromNumber(num, endian);\n  }\n\n  fromNumber(num, endian) {\n    if (endian == null)\n      endian = 'be';\n\n    enforce(isInteger(num), 'num', 'integer');\n    enforce(endian === 'be' || endian === 'le', 'endian', 'endianness');\n\n    const neg = (num < 0) | 0;\n\n    if (neg)\n      num = -num;\n\n    if (num < 0x4000000) {\n      this.words[0] = num & 0x3ffffff;\n      this.length = 1;\n    } else if (num < 0x10000000000000) {\n      this.words = [\n        num & 0x3ffffff,\n        (num / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      this.words = [\n        num & 0x3ffffff,\n        (num / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    this.negative = neg;\n\n    if (endian === 'le')\n      this.reverse();\n\n    return this;\n  }\n\n  fromDouble(num, endian) {\n    if (endian == null)\n      endian = 'be';\n\n    enforce(typeof num === 'number', 'num', 'double');\n    enforce(endian === 'be' || endian === 'le', 'endian', 'endianness');\n\n    if (!isFinite(num))\n      num = 0;\n\n    const neg = (num <= -1) | 0;\n\n    if (num < 0)\n      num = -num;\n\n    num = Math.floor(num);\n\n    this.words = [];\n\n    while (num > 0) {\n      const lo = num % 0x4000000;\n      const hi = (num - lo) / 0x4000000;\n\n      this.words.push(lo);\n\n      num = hi;\n    }\n\n    if (this.words.length === 0)\n      this.words.push(0);\n\n    this.length = this.words.length;\n    this.negative = neg;\n\n    if (endian === 'le')\n      this.reverse();\n\n    return this;\n  }\n\n  fromBigInt(num, endian) {\n    if (endian == null)\n      endian = 'be';\n\n    enforce(typeof num === 'bigint', 'num', 'bigint');\n    enforce(endian === 'be' || endian === 'le', 'endian', 'endianness');\n\n    if (!HAS_BIGINT)\n      throw new Error('BigInt is not supported!');\n\n    // You know the implementation has a\n    // problem when strings are twice\n    // as fast as bigints.\n    const start = (num < BigInt(0)) | 0;\n\n    this._fromHex(num.toString(16), start);\n    this.negative = start;\n\n    if (endian === 'le')\n      this.reverse();\n\n    return this;\n  }\n\n  fromBool(value) {\n    enforce(typeof value === 'boolean', 'value', 'boolean');\n\n    this.words[0] = value | 0;\n    this.length = 1;\n    this.negative = 0;\n\n    return this;\n  }\n\n  fromString(str, base, endian) {\n    if (base === 'le' || base === 'be')\n      [base, endian] = [endian, base];\n\n    base = getBase(base);\n\n    if (endian == null)\n      endian = 'be';\n\n    enforce(typeof str === 'string', 'string', 'string');\n    enforce((base >>> 0) === base, 'base', 'uint32');\n    enforce(endian === 'be' || endian === 'le', 'endian', 'endianness');\n\n    if (base < 2 || base > 36)\n      throw new Error('Base ranges between 2 and 36.');\n\n    str = str.replace(/\\s+/g, '');\n\n    let start = 0;\n\n    if (str.length > 0 && str.charCodeAt(0) === 0x2d)\n      start = 1;\n\n    if (base === 16)\n      this._fromHex(str, start);\n    else\n      this._fromBase(str, base, start);\n\n    this.negative = start;\n\n    this._normalize();\n\n    if (endian === 'le')\n      this.reverse();\n\n    return this;\n  }\n\n  _fromHex(str, start) {\n    this.length = Math.max(2, Math.ceil((str.length - start) / 6));\n    this.words = new Array(this.length);\n\n    for (let i = 0; i < this.length; i++)\n      this.words[i] = 0;\n\n    // Scan 24-bit chunks and add them to the number.\n    let off = 0;\n    let i = str.length - 6;\n    let j = 0;\n\n    for (; i >= start; i -= 6) {\n      const w = parseHex(str, i, i + 6);\n\n      this.words[j] |= (w << off) & 0x3ffffff;\n\n      // `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb.\n      this.words[j + 1] |= (w >>> (26 - off)) & 0x3fffff;\n\n      off += 24;\n\n      if (off >= 26) {\n        off -= 26;\n        j += 1;\n      }\n    }\n\n    if (i + 6 !== start) {\n      const w = parseHex(str, start, i + 6);\n\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= (w >>> (26 - off)) & 0x3fffff;\n    }\n\n    return this._strip();\n  }\n\n  _fromBase(str, base, start) {\n    // Initialize as zero.\n    this.words[0] = 0;\n    this.length = 1;\n    this.negative = 0;\n\n    // Find length of limb in base.\n    let limbLen = 0;\n    let limbPow = 1;\n\n    for (; limbPow <= 0x3ffffff; limbPow *= base)\n      limbLen += 1;\n\n    limbLen -= 1;\n    limbPow = (limbPow / base) | 0;\n\n    const total = str.length - start;\n    const mod = total % limbLen;\n    const end = Math.min(total, total - mod) + start;\n\n    let i = start;\n\n    for (; i < end; i += limbLen) {\n      const word = parseBase(str, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      this._iaddn(word);\n    }\n\n    if (mod !== 0) {\n      const pow = Math.pow(base, mod);\n      const word = parseBase(str, i, str.length, base);\n\n      this.imuln(pow);\n      this._iaddn(word);\n    }\n\n    return this;\n  }\n\n  fromJSON(json) {\n    if (BN.isBN(json)) {\n      if (json.red)\n        return json.fromRed();\n\n      return json.clone();\n    }\n\n    if (Array.isArray(json)) {\n      for (const chunk of json)\n        enforce(typeof chunk === 'string', 'chunk', 'string');\n\n      json = json.join('');\n    }\n\n    return this.fromString(json, 16);\n  }\n\n  fromBN(num) {\n    return this.inject(num);\n  }\n\n  fromArray(data, endian) {\n    enforce(Array.isArray(data), 'data', 'array');\n    return this.fromArrayLike(data, endian);\n  }\n\n  fromBuffer(data, endian) {\n    enforce(Buffer.isBuffer(data), 'data', 'buffer');\n    return this.fromArrayLike(data, endian);\n  }\n\n  fromArrayLike(data, endian) {\n    if (endian == null)\n      endian = 'be';\n\n    enforce(data && (data.length >>> 0) === data.length, 'data', 'array-like');\n    enforce(endian === 'be' || endian === 'le', 'endian', 'endianness');\n\n    if (data.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n      this.negative = 0;\n      return this;\n    }\n\n    this.length = Math.max(2, Math.ceil(data.length / 3));\n    this.words = new Array(this.length);\n    this.negative = 0;\n\n    for (let i = 0; i < this.length; i++)\n      this.words[i] = 0;\n\n    const left = data.length % 3;\n\n    let off = 0;\n    let j = 0;\n    let w = 0;\n\n    if (endian === 'be') {\n      for (let i = data.length - 1; i >= 2; i -= 3) {\n        const w = data[i] | (data[i - 1] << 8) | (data[i - 2] << 16);\n\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n\n        off += 24;\n\n        if (off >= 26) {\n          off -= 26;\n          j += 1;\n        }\n      }\n\n      switch (left) {\n        case 2:\n          w = data[1] | (data[0] << 8);\n          break;\n        case 1:\n          w = data[0];\n          break;\n      }\n    } else {\n      const len = data.length - left;\n\n      for (let i = 0; i < len; i += 3) {\n        const w = data[i] | (data[i + 1] << 8) | (data[i + 2] << 16);\n\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n\n        off += 24;\n\n        if (off >= 26) {\n          off -= 26;\n          j += 1;\n        }\n      }\n\n      switch (left) {\n        case 2:\n          w = data[len] | (data[len + 1] << 8);\n          break;\n        case 1:\n          w = data[len];\n          break;\n      }\n    }\n\n    if (left > 0) {\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n    }\n\n    return this._strip();\n  }\n\n  decode(data, endian) {\n    return this.fromBuffer(data, endian);\n  }\n\n  from(num, base, endian) {\n    if (num == null)\n      return this;\n\n    if (base === 'le' || base === 'be')\n      [base, endian] = [endian, base];\n\n    if (typeof num === 'number')\n      return this.fromNumber(num, endian);\n\n    if (typeof num === 'bigint')\n      return this.fromBigInt(num, endian);\n\n    if (typeof num === 'string')\n      return this.fromString(num, base, endian);\n\n    if (typeof num === 'object') {\n      if (BN.isBN(num))\n        return this.fromBN(num, endian);\n\n      if ((num.length >>> 0) === num.length)\n        return this.fromArrayLike(num, endian);\n    }\n\n    if (typeof num === 'boolean')\n      return this.fromBool(num);\n\n    throw new TypeError('Non-numeric object passed to BN.');\n  }\n\n  /*\n   * Static Methods\n   */\n\n  static min(...args) {\n    let min = null;\n\n    for (const num of args) {\n      enforce(BN.isBN(num), 'num', 'bignum');\n\n      if (!min || num.cmp(min) < 0)\n        min = num;\n    }\n\n    return min || new BN(0);\n  }\n\n  static max(...args) {\n    let max = null;\n\n    for (const num of args) {\n      enforce(BN.isBN(num), 'num', 'bignum');\n\n      if (!max || num.cmp(max) > 0)\n        max = num;\n    }\n\n    return max || new BN(0);\n  }\n\n  static cmp(a, b) {\n    enforce(BN.isBN(a), 'a', 'bignum');\n    return a.cmp(b);\n  }\n\n  static ucmp(a, b) {\n    enforce(BN.isBN(a), 'a', 'bignum');\n    return a.ucmp(b);\n  }\n\n  static red(num) {\n    return new Red(num);\n  }\n\n  static barrett(num) {\n    return new Barrett(num);\n  }\n\n  static mont(num) {\n    return new Mont(num);\n  }\n\n  static _prime(name) {\n    if (primes[name])\n      return primes[name];\n\n    let prime;\n\n    if (name === 'p192')\n      prime = new P192();\n    else if (name === 'p224')\n      prime = new P224();\n    else if (name === 'p521')\n      prime = new P521();\n    else if (name === 'k256')\n      prime = new K256();\n    else if (name === 'p25519')\n      prime = new P25519();\n    else if (name === 'p448')\n      prime = new P448();\n    else\n      throw new Error(`Unknown prime: \"${name}\".`);\n\n    primes[name] = prime;\n\n    return prime;\n  }\n\n  static prime(name) {\n    return BN._prime(name).p.clone();\n  }\n\n  static pow(num, exp) {\n    if (num === 2)\n      return BN.shift(1, exp);\n\n    return new BN().fromNumber(num).pown(exp);\n  }\n\n  static shift(num, bits) {\n    if (num === 1)\n      return new BN(0).usetn(bits, 1);\n\n    return new BN().fromNumber(num).ishln(bits);\n  }\n\n  static mask(bits) {\n    return BN.shift(1, bits).isubn(1);\n  }\n\n  static randomBits(rng, bits) {\n    enforce(rng != null, 'rng', 'rng');\n    enforce((bits >>> 0) === bits, 'bits', 'uint32');\n\n    if (typeof rng === 'object') {\n      enforce(typeof rng.randomBytes === 'function', 'rng', 'rng');\n\n      const size = (bits + 7) >>> 3;\n      const total = size * 8;\n      const bytes = rng.randomBytes(size);\n\n      enforce(Buffer.isBuffer(bytes), 'bytes', 'buffer');\n\n      if (bytes.length !== size)\n        throw new RangeError('Invalid number of bytes returned from RNG.');\n\n      const num = BN.fromBuffer(bytes);\n\n      if (total > bits)\n        num.iushrn(total - bits);\n\n      return num;\n    }\n\n    enforce(typeof rng === 'function', 'rng', 'rng');\n\n    const num = rng(bits);\n\n    enforce(BN.isBN(num), 'num', 'bignum');\n    range(num.negative === 0, 'RNG');\n    nonred(!num.red, 'RNG');\n\n    if (num.bitLength() > bits)\n      throw new RangeError('Invalid number of bits returned from RNG.');\n\n    return num;\n  }\n\n  static random(rng, min, max) {\n    min = BN.cast(min, 16);\n    max = BN.cast(max, 16);\n\n    if (min.cmp(max) > 0)\n      throw new RangeError('Minimum cannot be greater than maximum.');\n\n    const space = max.sub(min).iabs();\n    const bits = space.bitLength();\n\n    if (bits === 0)\n      return min.clone();\n\n    for (;;) {\n      const num = BN.randomBits(rng, bits);\n\n      // Maximum is _exclusive_!\n      if (num.cmp(space) >= 0)\n        continue;\n\n      // Minimum is _inclusive_!\n      num.iadd(min);\n\n      return num;\n    }\n  }\n\n  static of(num, endian) {\n    return new BN().of(num, endian);\n  }\n\n  static fromNumber(num, endian) {\n    return new BN().fromNumber(num, endian);\n  }\n\n  static fromDouble(num, endian) {\n    return new BN().fromDouble(num, endian);\n  }\n\n  static fromBigInt(num, endian) {\n    return new BN().fromBigInt(num, endian);\n  }\n\n  static fromBool(value) {\n    return new BN().fromBool(value);\n  }\n\n  static fromString(str, base, endian) {\n    return new BN().fromString(str, base, endian);\n  }\n\n  static fromJSON(json) {\n    return new BN().fromJSON(json);\n  }\n\n  static fromBN(num) {\n    return new BN().fromBN(num);\n  }\n\n  static fromArray(data, endian) {\n    return new BN().fromArray(data, endian);\n  }\n\n  static fromBuffer(data, endian) {\n    return new BN().fromBuffer(data, endian);\n  }\n\n  static fromArrayLike(data, endian) {\n    return new BN().fromArrayLike(data, endian);\n  }\n\n  static decode(data, endian) {\n    return new BN().decode(data, endian);\n  }\n\n  static from(num, base, endian) {\n    return new BN().from(num, base, endian);\n  }\n\n  static cast(num, base, endian) {\n    if (BN.isBN(num))\n      return num;\n\n    return new BN(num, base, endian);\n  }\n\n  static isBN(obj) {\n    return obj instanceof BN;\n  }\n}\n\n/*\n * Static\n */\n\nBN.BN = BN;\nBN.wordSize = 26;\nBN.native = 0;\n\n/**\n * Prime\n */\n\nclass Prime {\n  constructor(name, p) {\n    // P = 2^N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = BN.shift(1, this.n).isub(this.p);\n    this.lo = this.p.clone();\n    this.one = this.p.clone();\n  }\n\n  ireduce(num) {\n    // Assumes that `num` is less than `P^2`:\n    // num = HI * (2^N - K) + HI * K + LO = HI * K + LO (mod P)\n    const neg = num.negative !== 0;\n\n    // Track bits.\n    let bits = num.bitLength();\n\n    // Must be less than P^2.\n    assert(bits <= this.n * 2);\n\n    // Ensure positive.\n    num.negative = 0;\n\n    // Reduce.\n    while (bits > this.n) {\n      // lo = num & ((1 << n) - 1)\n      // num = num >> n\n      this.split(num, this.lo);\n\n      // num = num * K\n      this.imulK(num);\n\n      // num = num + lo\n      num._iadd(num, this.lo);\n\n      // bits = bitlen(num)\n      bits = num.bitLength();\n    }\n\n    // Final reduction.\n    const cmp = bits < this.n ? -1 : num.ucmp(this.p);\n\n    if (cmp === 0) {\n      num.words[0] = 0;\n      num.length = 1;\n    } else if (cmp > 0) {\n      num._isub(num, this.p);\n    } else {\n      // Note: we shouldn't need to strip here.\n    }\n\n    // Adjust sign.\n    if (neg && !num.isZero())\n      num._isub(this.p, num);\n\n    return num;\n  }\n\n  split(input, out) {\n    input._split(this.n, out);\n  }\n\n  imulK(num) {\n    return num.imul(this.k);\n  }\n}\n\n/**\n * P192\n */\n\nclass P192 extends Prime {\n  constructor() {\n    // 2^192 - 2^64 - 1 (= 3 mod 4)\n    super('p192', 'ffffffff ffffffff ffffffff fffffffe'\n                + 'ffffffff ffffffff');\n  }\n\n  imulK(num) {\n    // K = 0x10000000000000001\n    // K = 2^64 + 1\n    const one = this.one.inject(num);\n    return num.iushln(64)._iadd(num, one);\n  }\n}\n\n/**\n * P224\n */\n\nclass P224 extends Prime {\n  constructor() {\n    // 2^224 - 2^96 + 1 (no congruence)\n    super('p224', 'ffffffff ffffffff ffffffff ffffffff'\n                + '00000000 00000000 00000001');\n  }\n\n  imulK(num) {\n    // K = 0xffffffffffffffffffffffff\n    // K = 2^96 - 1\n    const one = this.one.inject(num);\n    return num.iushln(96)._isub(num, one);\n  }\n}\n\n/**\n * P521\n */\n\nclass P521 extends Prime {\n  constructor() {\n    // 2^521 - 1 (= 3 mod 4)\n    super('p521', '000001ff ffffffff ffffffff ffffffff'\n                + 'ffffffff ffffffff ffffffff ffffffff'\n                + 'ffffffff ffffffff ffffffff ffffffff'\n                + 'ffffffff ffffffff ffffffff ffffffff'\n                + 'ffffffff');\n  }\n\n  imulK(num) {\n    // K = 0x01\n    return num;\n  }\n}\n\n/**\n * K256\n */\n\nclass K256 extends Prime {\n  constructor() {\n    // 2^256 - 2^32 - 977 (= 3 mod 4)\n    super('k256', 'ffffffff ffffffff ffffffff ffffffff'\n                + 'ffffffff ffffffff fffffffe fffffc2f');\n  }\n\n  split(input, output) {\n    // 256 = 9 * 26 + 22\n    const mask = 0x3fffff;\n    const len = Math.min(input.length, 9);\n\n    output._alloc(len + 1);\n\n    for (let i = 0; i < len; i++)\n      output.words[i] = input.words[i];\n\n    output.length = len;\n\n    if (input.length <= 9) {\n      output._strip();\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs.\n    let prev = input.words[9];\n    let i = 10;\n\n    output.words[output.length++] = prev & mask;\n    output._strip();\n\n    for (; i < input.length; i++) {\n      const next = input.words[i] | 0;\n\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n\n      prev = next;\n    }\n\n    prev >>>= 22;\n\n    input.words[i - 10] = prev;\n\n    if (prev === 0 && input.length > 10)\n      input.length -= 10;\n    else\n      input.length -= 9;\n\n    input._strip(); // Unsure if we need this.\n  }\n\n  imulK(num) {\n    // K = 0x1000003d1 = [0x40, 0x3d1]\n    // K = 2^32 + 977\n    num._expand(num.length + 2);\n\n    // Bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    let lo = 0;\n\n    for (let i = 0; i < num.length; i++) {\n      const w = num.words[i];\n\n      lo += w * 0x3d1;\n\n      num.words[i] = lo & 0x3ffffff;\n\n      lo = w * 0x40 + Math.floor(lo / 0x4000000);\n    }\n\n    // Fast length reduction.\n    if (num.words[num.length - 1] === 0) {\n      num.length -= 1;\n      if (num.words[num.length - 1] === 0)\n        num.length -= 1;\n    }\n\n    // Note: we shouldn't need to strip here.\n    return num;\n  }\n}\n\n/**\n * P25519\n */\n\nclass P25519 extends Prime {\n  constructor() {\n    // 2^255 - 19 (= 5 mod 8)\n    super('p25519', '7fffffff ffffffff ffffffff ffffffff'\n                  + 'ffffffff ffffffff ffffffff ffffffed');\n  }\n\n  imulK(num) {\n    // K = 0x13\n    let carry = 0;\n\n    for (let i = 0; i < num.length; i++) {\n      const w = num.words[i] * 0x13 + carry;\n\n      carry = w >>> 26;\n\n      num.words[i] = w & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      num._alloc(num.length + 1);\n      num.words[num.length++] = carry;\n    }\n\n    // Note: we shouldn't need to strip here.\n    return num;\n  }\n}\n\n/**\n * P448\n */\n\nclass P448 extends Prime {\n  constructor() {\n    // 2^448 - 2^224 - 1 (= 3 mod 4)\n    super('p448', 'ffffffff ffffffff ffffffff ffffffff'\n                + 'ffffffff ffffffff fffffffe ffffffff'\n                + 'ffffffff ffffffff ffffffff ffffffff'\n                + 'ffffffff ffffffff');\n  }\n\n  imulK(num) {\n    // K = 0x100000000000000000000000000000000000000000000000000000001\n    // K = 2^224 + 1\n    const one = this.one.inject(num);\n    return num.iushln(224)._iadd(num, one);\n  }\n}\n\n/**\n * Reduction Engine\n */\n\nclass Red {\n  constructor(m) {\n    let prime = null;\n\n    if (typeof m === 'string') {\n      prime = BN._prime(m);\n      m = prime.p;\n    }\n\n    enforce(BN.isBN(m), 'm', 'bignum');\n    nonred(!m.red, 'reduction');\n    range(m.sign() > 0, 'reduction');\n\n    this.m = m;\n    this.prime = prime;\n    this.mb = null;\n    this.sm1 = null;\n  }\n\n  _verify1(a) {\n    range(a.negative === 0, 'red');\n    red(a.red != null, 'red');\n  }\n\n  _verify2(a, b) {\n    range((a.negative | b.negative) === 0, 'red');\n    red(a.red != null && a.red === b.red, 'red');\n  }\n\n  get mont() {\n    return false;\n  }\n\n  get coprime() {\n    return false;\n  }\n\n  precompute() {\n    // Precompute `sqrt(-1)` for primes congruent to 5 mod 8.\n    if (this.sm1 === null && this.m.andln(7) === 5) {\n      const x = new BN(2).toRed(this);\n      const e = this.m.subn(1).iushrn(2);\n\n      // sqrt(-1) = 2^((p - 1) / 4) mod p\n      this.sm1 = this.pow(x, e);\n    }\n\n    return this;\n  }\n\n  convertTo(num) {\n    const res = num.mod(this.m);\n    res.red = this;\n    return res;\n  }\n\n  convertFrom(num) {\n    const res = num.clone();\n    res.red = null;\n    return res;\n  }\n\n  intTo(a) {\n    return a;\n  }\n\n  intFrom(a) {\n    return a;\n  }\n\n  imod(a) {\n    if (this.prime)\n      return this.prime.ireduce(a)._forceRed(this);\n\n    return a.imod(this.m)._forceRed(this);\n  }\n\n  iadd(a, b) {\n    this._verify2(a, b);\n\n    a._iadd(a, b);\n\n    if (a.ucmp(this.m) >= 0)\n      a._isub(a, this.m);\n\n    return a;\n  }\n\n  add(a, b) {\n    if (a.length < b.length)\n      return this.iadd(b.clone(), a);\n\n    return this.iadd(a.clone(), b);\n  }\n\n  iaddn(a, num) {\n    this._verify1(a);\n\n    if (num < 0)\n      return this.isubn(a, -num);\n\n    if (this.m.length === 1)\n      num %= this.m.words[0];\n\n    a._iaddn(num);\n\n    if (a.ucmp(this.m) >= 0)\n      a._isub(a, this.m);\n\n    return a;\n  }\n\n  addn(a, num) {\n    return this.iaddn(a.clone(), num);\n  }\n\n  isub(a, b) {\n    this._verify2(a, b);\n\n    //  0: a - a mod m == 0\n    // -1: a - b mod m == m - (b - a)\n    // +1: a - b mod m == a - b\n    const cmp = a.ucmp(b);\n\n    if (cmp === 0) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    if (cmp < 0) {\n      a._isub(b, a);\n      a._isub(this.m, a);\n    } else {\n      a._isub(a, b);\n    }\n\n    return a;\n  }\n\n  sub(a, b) {\n    return this.isub(a.clone(), b);\n  }\n\n  isubn(a, num) {\n    this._verify1(a);\n\n    if (num < 0)\n      return this.iaddn(a, -num);\n\n    if (this.m.length === 1)\n      num %= this.m.words[0];\n\n    //  <: a - b mod m == m - (b - a)\n    // >=: a - b mod m == a - b\n    if (a.length === 1 && a.words[0] < num) {\n      a.words[0] = num - a.words[0];\n      a._isub(this.m, a);\n    } else {\n      a._isubn(num);\n    }\n\n    return a;\n  }\n\n  subn(a, num) {\n    return this.isubn(a.clone(), num);\n  }\n\n  imul(a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  }\n\n  mul(a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  }\n\n  imuln(a, num) {\n    this._verify1(a);\n\n    if (a.isZero())\n      return a;\n\n    if (num === 0) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    const neg = num < 0;\n\n    if (neg)\n      num = -num;\n\n    if (this.m.length === 1)\n      num %= this.m.words[0];\n\n    a.imuln(num);\n\n    if (num <= 16) {\n      // Quick reduction.\n      while (a.ucmp(this.m) >= 0)\n        a._isub(a, this.m);\n    } else {\n      this.imod(a);\n    }\n\n    if (neg)\n      this.ineg(a);\n\n    return a;\n  }\n\n  muln(a, num) {\n    return this.imuln(a.clone(), num);\n  }\n\n  idiv(a, b) {\n    return this.div(a, b)._move(a);\n  }\n\n  div(a, b) {\n    return this.mul(a, this.invert(b));\n  }\n\n  idivn(a, num) {\n    return this.divn(a, num)._move(a);\n  }\n\n  divn(a, num) {\n    return this.div(a, this.convertTo(new BN(num)));\n  }\n\n  ipow(a, num) {\n    return this.pow(a, num)._move(a);\n  }\n\n  pow(a, num) {\n    this._verify1(a);\n\n    if (num.isNeg())\n      a = this.invert(a);\n\n    // Small exponent.\n    if (num.length === 1)\n      return this.pown(a, num.words[0]);\n\n    // Call out to BigInt.\n    if (HAS_BIGINT && !this.prime)\n      return this.powInt(a, num);\n\n    // Otherwise, a BN implementation.\n    return this.powNum(a, num);\n  }\n\n  powNum(a, num) {\n    // Sliding window.\n    const wnd = new Array(WND_SIZE);\n\n    wnd[0] = this.sqrn(a, WND_WIDTH - 1);\n    wnd[1] = this.mul(wnd[0], a);\n\n    for (let i = 2; i < WND_SIZE; i++)\n      wnd[i] = this.mul(wnd[i - 1], a);\n\n    let i = num.bitLength();\n    let r = new BN(1).toRed(this);\n\n    while (i >= WND_WIDTH) {\n      const pos = i - WND_WIDTH;\n      const bits = num.bits(pos, WND_WIDTH);\n\n      if (bits < WND_SIZE) {\n        r = this.sqr(r);\n        i -= 1;\n        continue;\n      }\n\n      r = this.sqrn(r, WND_WIDTH);\n      r = this.mul(r, wnd[bits & ~WND_SIZE]);\n      i = pos;\n    }\n\n    if (i > 0) {\n      const bits = num.bits(0, i);\n\n      while (i--) {\n        r = this.sqr(r);\n\n        if ((bits >> i) & 1)\n          r = this.mul(r, a);\n      }\n    }\n\n    return r;\n  }\n\n  powInt(a, num) {\n    if (this.mb === null)\n      this.mb = this.m.toBigInt();\n\n    const x = this.intFrom(a.toBigInt());\n    const y = powInt(x, num, this.mb);\n    const z = this.intTo(y);\n\n    return BN.fromBigInt(z)._forceRed(this);\n  }\n\n  sqrn(a, n) {\n    for (let i = 0; i < n; i++)\n      a = this.sqr(a);\n    return a;\n  }\n\n  ipown(a, num) {\n    return this.pown(a, num)._move(a);\n  }\n\n  pown(a, num) {\n    this._verify1(a);\n\n    if (num < 0) {\n      a = this.invert(a);\n      num = -num;\n    }\n\n    if (num === 0)\n      return new BN(1).toRed(this);\n\n    if (num === 1)\n      return a.clone();\n\n    const bits = countBits(num);\n\n    let r = a;\n\n    for (let i = bits - 2; i >= 0; i--) {\n      r = this.sqr(r);\n\n      if ((num >> i) & 1)\n        r = this.mul(r, a);\n    }\n\n    return r;\n  }\n\n  isqr(a) {\n    return this.imul(a, a);\n  }\n\n  sqr(a) {\n    return this.mul(a, a);\n  }\n\n  isqrt(x) {\n    return this.sqrt(x)._move(x);\n  }\n\n  sqrt(x) {\n    this._verify1(x);\n\n    // Fast case (p = 3 mod 4).\n    if (this.m.andln(3) === 3)\n      return this.sqrt3mod4(x);\n\n    // Fast case (p = 5 mod 8).\n    if (this.m.andln(7) === 5) {\n      if (this.sm1 != null)\n        return this.sqrt5mod8sm1(x);\n      return this.sqrt5mod8(x);\n    }\n\n    // Slow case (Tonelli-Shanks).\n    return this.sqrt0(x);\n  }\n\n  sqrt3mod4(x) {\n    const e = this.m.addn(1).iushrn(2); // (p + 1) / 4\n    const b = this.pow(x, e);\n\n    if (!this.sqr(b).eq(x))\n      throw new Error('X is not a square mod P.');\n\n    return b;\n  }\n\n  sqrt5mod8(x) {\n    // Atkin's Algorithm.\n    const one = new BN(1).toRed(this);\n    const e = this.m.ushrn(3); // (p - 5) / 8\n    const x2 = this.add(x, x);\n    const alpha = this.pow(x2, e);\n    const beta = this.mul(x2, this.sqr(alpha));\n    const b = this.mul(this.mul(alpha, x), this.isub(beta, one));\n\n    if (!this.sqr(b).eq(x))\n      throw new Error('X is not a square mod P.');\n\n    return b;\n  }\n\n  sqrt5mod8sm1(x) {\n    const e = this.m.addn(3).iushrn(3); // (p + 3) / 8\n    const b = this.pow(x, e);\n\n    if (this.sqr(b).eq(x))\n      return b;\n\n    const c = this.mul(b, this.sm1);\n\n    if (this.sqr(c).eq(x))\n      return c;\n\n    throw new Error('X is not a square mod P.');\n  }\n\n  sqrt0(x) {\n    if (this.m.cmpn(1) === 0 || !this.m.isOdd())\n      throw new Error('Invalid prime.');\n\n    switch (this.jacobi(x)) {\n      case -1:\n        throw new Error('X is not a square mod P.');\n      case 0:\n        return new BN(0)._forceRed(this);\n      case 1:\n        break;\n    }\n\n    const one = new BN(1).toRed(this);\n    const s = this.m.subn(1);\n    const e = s.zeroBits();\n\n    s.iushrn(e);\n\n    const n = new BN(2).toRed(this);\n\n    while (this.jacobi(n) !== -1)\n      this.iadd(n, one);\n\n    let b = this.pow(x, s);\n    let g = this.pow(n, s);\n    let y = this.pow(x, s.iaddn(1).iushrn(1));\n    let k = e;\n\n    for (;;) {\n      let t = b;\n      let m = 0;\n\n      while (t.cmp(one) !== 0 && m < k) {\n        t = this.sqr(t);\n        m += 1;\n      }\n\n      if (m === 0)\n        break;\n\n      assert(m < k);\n\n      t = this.sqrn(g, k - m - 1);\n      g = this.sqr(t);\n      y = this.mul(y, t);\n      b = this.mul(b, g);\n      k = m;\n    }\n\n    return y;\n  }\n\n  idivsqrt(u, v) {\n    return this.divsqrt(u, v)._move(u);\n  }\n\n  divsqrt(u, v) {\n    this._verify2(u, v);\n\n    // v = 0\n    if (v.isZero())\n      throw new RangeError('Not invertible.');\n\n    // p = 3 mod 4\n    if (this.m.andln(3) === 3)\n      return this.divsqrt3mod4(u, v);\n\n    // p = 5 mod 8\n    if (this.sm1 != null && this.m.andln(7) === 5)\n      return this.divsqrt5mod8(u, v);\n\n    return this.sqrt(this.div(u, v));\n  }\n\n  divsqrt3mod4(u, v) {\n    // x = u^3 * v * (u^5 * v^3)^((p - 3) / 4) mod p\n    const e = this.m.subn(3).iushrn(2);\n    const u2 = this.sqr(u);\n    const u3 = this.mul(u2, u);\n    const u5 = this.mul(u3, u2);\n    const v3 = this.mul(this.sqr(v), v);\n    const p = this.pow(this.mul(u5, v3), e);\n    const x = this.mul(this.mul(u3, v), p);\n    const c = this.mul(v, this.sqr(x));\n\n    if (c.cmp(u) === 0)\n      return x;\n\n    throw new Error('X is not a square mod P.');\n  }\n\n  divsqrt5mod8(u, v) {\n    // x = u * v^3 * (u * v^7)^((p - 5) / 8) mod p\n    const e = this.m.subn(5).iushrn(3);\n    const v3 = this.mul(this.sqr(v), v);\n    const v7 = this.mul(this.sqr(v3), v);\n    const p = this.pow(this.mul(u, v7), e);\n    const x = this.mul(this.mul(u, v3), p);\n    const c = this.mul(v, this.sqr(x));\n\n    if (c.cmp(u) === 0)\n      return x;\n\n    if (this.ineg(c).cmp(u) === 0)\n      return this.mul(x, this.sm1);\n\n    throw new Error('X is not a square mod P.');\n  }\n\n  isSquare(a) {\n    let symbol;\n\n    if (this.prime || this.coprime)\n      symbol = this.legendre(a);\n    else if (this.m.isOdd())\n      symbol = this.jacobi(a);\n    else\n      symbol = this.kronecker(a);\n\n    return Boolean(~symbol >>> 31);\n  }\n\n  ishl(a, num) {\n    this._verify1(a);\n    return this.imod(a.iushl(num));\n  }\n\n  shl(a, num) {\n    return this.ishl(a.clone(), num);\n  }\n\n  ishln(a, num) {\n    this._verify1(a);\n\n    a.iushln(num);\n\n    if (num <= 4) {\n      // Quick reduction.\n      while (a.ucmp(this.m) >= 0)\n        a._isub(a, this.m);\n    } else {\n      this.imod(a);\n    }\n\n    return a;\n  }\n\n  shln(a, num) {\n    return this.ishln(a.clone(), num);\n  }\n\n  ineg(a) {\n    this._verify1(a);\n\n    if (!a.isZero())\n      a._isub(this.m, a);\n\n    return a;\n  }\n\n  neg(a) {\n    return this.ineg(a.clone());\n  }\n\n  eq(a, b) {\n    this._verify2(a, b);\n    return a.ucmp(b) === 0;\n  }\n\n  eqn(a, num) {\n    this._verify1(a);\n\n    if (this.m.length === 1) {\n      num %= this.m.words[0];\n\n      if (num < 0)\n        num += this.m.words[0];\n\n      return a.ucmpn(num) === 0;\n    }\n\n    if (num < 0) {\n      this.m._isubn(-num);\n\n      const cmp = a.ucmp(this.m);\n\n      this.m._iaddn(-num);\n\n      return cmp === 0;\n    }\n\n    return a.ucmpn(num) === 0;\n  }\n\n  isHigh(a) {\n    return !this.isLow(a);\n  }\n\n  isLow(a) {\n    this._verify1(a);\n    return a.ucmp(this.m.ushrn(1)) <= 0;\n  }\n\n  isOdd(a) {\n    this._verify1(a);\n    return a.isOdd();\n  }\n\n  isEven(a) {\n    this._verify1(a);\n    return a.isEven();\n  }\n\n  legendre(num) {\n    this._verify1(num);\n\n    if (this.m.isEven())\n      throw new Error('legendre: `num` must be odd.');\n\n    // Euler's criterion.\n    const e = this.m.subn(1).iushrn(1); // (p - 1) / 2\n    const symbol = this.pow(num, e);\n    const one = new BN(1).toRed(this);\n    const a = symbol.czero();\n    const b = symbol.ceq(one);\n    const c = symbol.ceq(this.ineg(one));\n\n    // Must be one of these.\n    if ((a | b | c) === 0)\n      throw new Error('Invalid prime.');\n\n    // Cannot be multiple.\n    assert(a + b + c === 1);\n\n    // 0, 1, or -1.\n    return b - c;\n  }\n\n  jacobi(a) {\n    this._verify1(a);\n    return a.jacobi(this.m);\n  }\n\n  kronecker(a) {\n    this._verify1(a);\n    return a.kronecker(this.m);\n  }\n\n  iinvert(a) {\n    return this.invert(a)._move(a);\n  }\n\n  invert(a) {\n    this._verify1(a);\n\n    if (this.prime)\n      return this.imod(a._invertp(this.m));\n\n    return a.invert(this.m)._forceRed(this);\n  }\n\n  ifermat(a) {\n    return this.fermat(a)._move(a);\n  }\n\n  fermat(a) {\n    this._verify1(a);\n\n    if (a.isZero() || this.m.cmpn(1) === 0)\n      throw new RangeError('Not invertible.');\n\n    // Invert using fermat's little theorem.\n    return this.pow(a, this.m.subn(2));\n  }\n\n  [custom]() {\n    if (this.prime)\n      return `<Red: ${this.prime.name}>`;\n\n    return `<Red: ${this.m.toString(10)}>`;\n  }\n}\n\n/**\n * Barrett Engine\n */\n\nclass Barrett extends Red {\n  constructor(m) {\n    super(m);\n\n    this.prime = null;\n    this.n = this.m.bitLength();\n\n    if ((this.n % 26) !== 0)\n      this.n += 26 - (this.n % 26);\n\n    this.k = this.n * 2;\n    this.w = this.k / 26;\n    this.b = BN.shift(1, this.k).div(this.m);\n  }\n\n  convertTo(num) {\n    if (num.length > this.w)\n      return super.convertTo(num);\n\n    return this.imod(num.clone());\n  }\n\n  _shift(q) {\n    let i = 0;\n    let j = this.w;\n\n    while (j < q.length)\n      q.words[i++] = q.words[j++];\n\n    if (i === 0)\n      q.words[i++] = 0;\n\n    q.length = i;\n  }\n\n  imod(a) {\n    const neg = a.negative;\n\n    assert(a.length <= this.w);\n\n    a.negative = 0;\n\n    const q = a.mul(this.b);\n\n    // Shift right by `k` bits.\n    this._shift(q);\n\n    a._isub(a, q.mul(this.m));\n\n    if (a.ucmp(this.m) >= 0)\n      a._isub(a, this.m);\n\n    if (neg && !a.isZero())\n      a._isub(this.m, a);\n\n    a.red = this;\n\n    return a;\n  }\n}\n\n/**\n * Montgomery Engine\n */\n\nclass Mont extends Red {\n  constructor(m) {\n    super(m);\n\n    this.prime = null;\n    this.n = this.m.bitLength();\n\n    if ((this.n % 26) !== 0)\n      this.n += 26 - (this.n % 26);\n\n    this.r = BN.shift(1, this.n);\n    this.r2 = BN.shift(1, this.n * 2).imod(this.m);\n    this.ri = this.r._invertp(this.m).imod(this.m);\n    this.mi = this.r.mul(this.ri).isubn(1).div(this.m);\n    this.rib = null;\n  }\n\n  get mont() {\n    return true;\n  }\n\n  get coprime() {\n    return true;\n  }\n\n  convertTo(num) {\n    return this.imod(num.ushln(this.n));\n  }\n\n  convertFrom(num) {\n    const r = this.imod(num.mul(this.ri));\n    r.red = null;\n    return r;\n  }\n\n  intTo(a) {\n    return (a << BigInt(this.n)) % this.mb;\n  }\n\n  intFrom(a) {\n    if (this.rib === null)\n      this.rib = this.ri.toBigInt();\n\n    return (a * this.rib) % this.mb;\n  }\n\n  iaddn(a, num) {\n    return this.iadd(a, this.convertTo(new BN(num)));\n  }\n\n  isubn(a, num) {\n    return this.isub(a, this.convertTo(new BN(num)));\n  }\n\n  imul(a, b) {\n    return this.mul(a, b)._move(a);\n  }\n\n  mul(a, b) {\n    this._verify2(a, b);\n\n    if (a.isZero() || b.isZero())\n      return new BN(0)._forceRed(this);\n\n    const t = a.mul(b);\n    const c = t.umaskn(this.n).mul(this.mi).iumaskn(this.n);\n    const u = t.iadd(c.mul(this.m)).iushrn(this.n);\n\n    if (u.ucmp(this.m) >= 0)\n      u._isub(u, this.m);\n\n    return u._forceRed(this);\n  }\n\n  imuln(a, num) {\n    this._verify1(a);\n\n    if (a.isZero())\n      return a;\n\n    if (num === 0) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    const neg = num < 0;\n\n    if (neg)\n      num = -num;\n\n    if (this.m.length === 1)\n      num %= this.m.words[0];\n\n    const bits = countBits(num);\n\n    // Potentially compute with additions.\n    // This avoids an expensive division.\n    if (bits > 5) {\n      // Slow case (num > 31).\n      this.imul(a, this.convertTo(new BN(num)));\n    } else if ((num & (num - 1)) === 0) {\n      // Optimize for powers of two.\n      for (let i = 0; i < bits - 1; i++)\n        this.iadd(a, a);\n    } else {\n      // Multiply left to right.\n      const c = a.clone();\n\n      for (let i = bits - 2; i >= 0; i--) {\n        this.iadd(a, a);\n\n        if ((num >> i) & 1)\n          this.iadd(a, c);\n      }\n    }\n\n    if (neg)\n      this.ineg(a);\n\n    return a;\n  }\n\n  eqn(a, num) {\n    this._verify1(a);\n\n    if (num === 0)\n      return a.isZero();\n\n    return a.ucmp(this.convertTo(new BN(num))) === 0;\n  }\n\n  isLow(a) {\n    this._verify1(a);\n    return this.convertFrom(a).ucmp(this.m.ushrn(1)) <= 0;\n  }\n\n  isOdd(a) {\n    this._verify1(a);\n    return this.convertFrom(a).isOdd();\n  }\n\n  isEven(a) {\n    this._verify1(a);\n    return this.convertFrom(a).isEven();\n  }\n\n  invert(a) {\n    this._verify1(a);\n\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    return this.imod(a._invertp(this.m).mul(this.r2));\n  }\n}\n\n/*\n * Helpers\n */\n\nfunction makeError(Error, msg, start) {\n  const err = new Error(msg);\n\n  if (Error.captureStackTrace)\n    Error.captureStackTrace(err, start);\n\n  return err;\n}\n\nfunction assert(value, message) {\n  if (!value) {\n    const msg = message || 'Assertion failed.';\n    throw makeError(Error, msg, assert);\n  }\n}\n\nfunction enforce(value, name, type) {\n  if (!value) {\n    const msg = `\"${name}\" must be a(n) ${type}.`;\n    throw makeError(TypeError, msg, enforce);\n  }\n}\n\nfunction range(value, name) {\n  if (!value) {\n    const msg = `\"${name}\" only works with positive numbers.`;\n    throw makeError(RangeError, msg, range);\n  }\n}\n\nfunction red(value, name) {\n  if (!value) {\n    const msg = `\"${name}\" only works with red numbers.`;\n    throw makeError(TypeError, msg, red);\n  }\n}\n\nfunction nonred(value, name) {\n  if (!value) {\n    const msg = `\"${name}\" only works with normal numbers.`;\n    throw makeError(TypeError, msg, nonred);\n  }\n}\n\nfunction nonzero(value) {\n  if (!value) {\n    const msg = 'Cannot divide by zero.';\n    throw makeError(RangeError, msg, nonzero);\n  }\n}\n\nfunction isInteger(num) {\n  return Number.isSafeInteger(num);\n}\n\nfunction isSMI(num) {\n  return isInteger(num)\n      && num >= -0x3ffffff\n      && num <= 0x3ffffff;\n}\n\nfunction allocate(ArrayType, size) {\n  if (ArrayType.allocUnsafeSlow)\n    return ArrayType.allocUnsafeSlow(size);\n\n  return new ArrayType(size);\n}\n\nfunction getBase(base) {\n  if (base == null)\n    return 10;\n\n  if (typeof base === 'number')\n    return base;\n\n  switch (base) {\n    case 'bin':\n      return 2;\n    case 'oct':\n      return 8;\n    case 'dec':\n      return 10;\n    case 'hex':\n      return 16;\n  }\n\n  return 0;\n}\n\n/*\n * Internal\n */\n\nfunction countBits(w) {\n  if (Math.clz32)\n    return 32 - Math.clz32(w);\n\n  let t = w;\n  let r = 0;\n\n  if (t >= 0x1000) {\n    r += 13;\n    t >>>= 13;\n  }\n\n  if (t >= 0x40) {\n    r += 7;\n    t >>>= 7;\n  }\n\n  if (t >= 0x8) {\n    r += 4;\n    t >>>= 4;\n  }\n\n  if (t >= 0x02) {\n    r += 2;\n    t >>>= 2;\n  }\n\n  return r + t;\n}\n\nfunction zeroBits(w) {\n  // Shortcut.\n  if (w === 0)\n    return 26;\n\n  let t = w;\n  let r = 0;\n\n  if ((t & 0x1fff) === 0) {\n    r += 13;\n    t >>>= 13;\n  }\n\n  if ((t & 0x7f) === 0) {\n    r += 7;\n    t >>>= 7;\n  }\n\n  if ((t & 0xf) === 0) {\n    r += 4;\n    t >>>= 4;\n  }\n\n  if ((t & 0x3) === 0) {\n    r += 2;\n    t >>>= 2;\n  }\n\n  if ((t & 0x1) === 0)\n    r += 1;\n\n  return r;\n}\n\nfunction parseHex(str, start, end) {\n  const len = Math.min(str.length, end);\n\n  let r = 0;\n  let z = 0;\n\n  for (let i = start; i < len; i++) {\n    const c = str.charCodeAt(i) - 48;\n\n    r <<= 4;\n\n    let b;\n\n    if (c >= 49 && c <= 54) {\n      // 'a' - 'f'\n      b = c - 49 + 0xa;\n    } else if (c >= 17 && c <= 22) {\n      // 'A' - 'F'\n      b = c - 17 + 0xa;\n    } else {\n      // '0' - '9'\n      b = c;\n    }\n\n    r |= b;\n    z |= b;\n  }\n\n  if (z & ~15)\n    throw new Error('Invalid string.');\n\n  return r;\n}\n\nfunction parseBase(str, start, end, mul) {\n  const len = Math.min(str.length, end);\n\n  let r = 0;\n\n  for (let i = start; i < len; i++) {\n    const c = str.charCodeAt(i) - 48;\n\n    r *= mul;\n\n    let b;\n\n    if (c >= 49) {\n      // 'a'\n      b = c - 49 + 0xa;\n    } else if (c >= 17) {\n      // 'A'\n      b = c - 17 + 0xa;\n    } else {\n      // '0' - '9'\n      b = c;\n    }\n\n    if (c < 0 || c > 207 || b >= mul)\n      throw new Error('Invalid string.');\n\n    r += b;\n  }\n\n  return r;\n}\n\n/*\n * Exponentiation (bigint)\n */\n\nfunction powInt(x, e, m) {\n  // Sliding window.\n  const wnd = new Array(WND_SIZE);\n\n  wnd[0] = sqrn(x, WND_WIDTH - 1, m);\n  wnd[1] = wnd[0] * x;\n\n  for (let i = 2; i < WND_SIZE; i++)\n    wnd[i] = (wnd[i - 1] * x) % m;\n\n  let i = e.bitLength();\n  let r = BigInt(1);\n\n  while (i >= WND_WIDTH) {\n    const pos = i - WND_WIDTH;\n    const bits = e.bits(pos, WND_WIDTH);\n\n    if (bits < WND_SIZE) {\n      r = (r * r) % m;\n      i -= 1;\n      continue;\n    }\n\n    r = sqrn(r, WND_WIDTH, m);\n    r = (r * wnd[bits & ~WND_SIZE]) % m;\n    i = pos;\n  }\n\n  if (i > 0) {\n    const bits = e.bits(0, i);\n\n    while (i--) {\n      r = (r * r) % m;\n\n      if ((bits >> i) & 1)\n        r = (r * x) % m;\n    }\n  }\n\n  return r;\n}\n\nfunction sqrn(x, n, m) {\n  for (let i = 0; i < n; i++)\n    x = (x * x) % m;\n  return x;\n}\n\n/*\n * Multiplication\n */\n\nfunction smallMulTo(self, num, out) {\n  const len = self.length + num.length;\n\n  out.negative = self.negative ^ num.negative;\n  out._alloc(len);\n  out.length = len;\n\n  // Peel one iteration (compiler can't\n  // do it, because of code complexity).\n  const a = self.words[0];\n  const b = num.words[0];\n  const r = a * b;\n  const lo = r & 0x3ffffff;\n\n  let carry = (r / 0x4000000) | 0;\n  let k = 1;\n\n  out.words[0] = lo;\n\n  for (; k < out.length - 1; k++) {\n    // Sum all words with the same\n    // `i + j = k` and accumulate\n    // `ncarry`, note that ncarry\n    // could be >= 0x3ffffff.\n    let ncarry = carry >>> 26;\n    let rword = carry & 0x3ffffff;\n\n    const min = Math.max(0, k - self.length + 1);\n    const max = Math.min(k, num.length - 1);\n\n    for (let j = min; j <= max; j++) {\n      const i = k - j;\n      const a = self.words[i];\n      const b = num.words[j];\n      const r = a * b + rword;\n\n      ncarry += (r / 0x4000000) | 0;\n      rword = r & 0x3ffffff;\n    }\n\n    out.words[k] = rword | 0;\n    carry = ncarry | 0;\n  }\n\n  if (carry !== 0)\n    out.words[k] = carry | 0;\n  else\n    out.length -= 1;\n\n  return out._strip();\n}\n\nfunction bigMulTo(self, num, out) {\n  const len = self.length + num.length;\n\n  out.negative = self.negative ^ num.negative;\n  out._alloc(len);\n  out.length = len;\n\n  let carry = 0;\n  let hncarry = 0;\n  let k = 0;\n\n  for (; k < out.length - 1; k++) {\n    // Sum all words with the same\n    // `i + j = k` and accumulate\n    // `ncarry`, note that ncarry\n    // could be >= 0x3ffffff.\n    let ncarry = hncarry;\n\n    hncarry = 0;\n\n    let rword = carry & 0x3ffffff;\n\n    const min = Math.max(0, k - self.length + 1);\n    const max = Math.min(k, num.length - 1);\n\n    for (let j = min; j <= max; j++) {\n      const i = k - j;\n      const a = self.words[i];\n      const b = num.words[j];\n      const r = a * b;\n\n      let lo = r & 0x3ffffff;\n\n      ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n      lo = (lo + rword) | 0;\n      rword = lo & 0x3ffffff;\n      ncarry = (ncarry + (lo >>> 26)) | 0;\n\n      hncarry += ncarry >>> 26;\n      ncarry &= 0x3ffffff;\n    }\n\n    out.words[k] = rword;\n    carry = ncarry;\n    ncarry = hncarry;\n  }\n\n  if (carry !== 0)\n    out.words[k] = carry;\n  else\n    out.length -= 1;\n\n  return out._strip();\n}\n\nfunction jumboMulTo(x, y, out) {\n  // v8 has a 2147483519 bit max (~256mb).\n  if (!HAS_BIGINT || x.length + y.length > 82595519)\n    return bigMulTo(x, y, out);\n\n  const zero = BigInt(0);\n  const mask = BigInt(0x3ffffff);\n  const shift = BigInt(26);\n\n  let z = x.toBigInt() * y.toBigInt();\n\n  const neg = (z < zero) | 0;\n\n  if (neg)\n    z = -z;\n\n  let i = 0;\n\n  while (z > zero) {\n    out.words[i++] = Number(z & mask);\n    z >>= shift;\n  }\n\n  if (i === 0)\n    out.words[i++] = 0;\n\n  out.length = i;\n  out.negative = neg;\n\n  return out;\n}\n\nfunction comb10MulTo(self, num, out) {\n  const a = self.words;\n  const b = num.words;\n  const o = out.words;\n  const a0 = a[0] | 0;\n  const al0 = a0 & 0x1fff;\n  const ah0 = a0 >>> 13;\n  const a1 = a[1] | 0;\n  const al1 = a1 & 0x1fff;\n  const ah1 = a1 >>> 13;\n  const a2 = a[2] | 0;\n  const al2 = a2 & 0x1fff;\n  const ah2 = a2 >>> 13;\n  const a3 = a[3] | 0;\n  const al3 = a3 & 0x1fff;\n  const ah3 = a3 >>> 13;\n  const a4 = a[4] | 0;\n  const al4 = a4 & 0x1fff;\n  const ah4 = a4 >>> 13;\n  const a5 = a[5] | 0;\n  const al5 = a5 & 0x1fff;\n  const ah5 = a5 >>> 13;\n  const a6 = a[6] | 0;\n  const al6 = a6 & 0x1fff;\n  const ah6 = a6 >>> 13;\n  const a7 = a[7] | 0;\n  const al7 = a7 & 0x1fff;\n  const ah7 = a7 >>> 13;\n  const a8 = a[8] | 0;\n  const al8 = a8 & 0x1fff;\n  const ah8 = a8 >>> 13;\n  const a9 = a[9] | 0;\n  const al9 = a9 & 0x1fff;\n  const ah9 = a9 >>> 13;\n  const b0 = b[0] | 0;\n  const bl0 = b0 & 0x1fff;\n  const bh0 = b0 >>> 13;\n  const b1 = b[1] | 0;\n  const bl1 = b1 & 0x1fff;\n  const bh1 = b1 >>> 13;\n  const b2 = b[2] | 0;\n  const bl2 = b2 & 0x1fff;\n  const bh2 = b2 >>> 13;\n  const b3 = b[3] | 0;\n  const bl3 = b3 & 0x1fff;\n  const bh3 = b3 >>> 13;\n  const b4 = b[4] | 0;\n  const bl4 = b4 & 0x1fff;\n  const bh4 = b4 >>> 13;\n  const b5 = b[5] | 0;\n  const bl5 = b5 & 0x1fff;\n  const bh5 = b5 >>> 13;\n  const b6 = b[6] | 0;\n  const bl6 = b6 & 0x1fff;\n  const bh6 = b6 >>> 13;\n  const b7 = b[7] | 0;\n  const bl7 = b7 & 0x1fff;\n  const bh7 = b7 >>> 13;\n  const b8 = b[8] | 0;\n  const bl8 = b8 & 0x1fff;\n  const bh8 = b8 >>> 13;\n  const b9 = b[9] | 0;\n  const bl9 = b9 & 0x1fff;\n  const bh9 = b9 >>> 13;\n\n  let c = 0;\n  let lo, mid, hi;\n\n  out.negative = self.negative ^ num.negative;\n  out._alloc(20);\n  out.length = 19;\n\n  /* k = 0 */\n  lo = Math.imul(al0, bl0);\n  mid = Math.imul(al0, bh0);\n  mid = (mid + Math.imul(ah0, bl0)) | 0;\n  hi = Math.imul(ah0, bh0);\n\n  let w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n  w0 &= 0x3ffffff;\n\n  /* k = 1 */\n  lo = Math.imul(al1, bl0);\n  mid = Math.imul(al1, bh0);\n  mid = (mid + Math.imul(ah1, bl0)) | 0;\n  hi = Math.imul(ah1, bh0);\n  lo = (lo + Math.imul(al0, bl1)) | 0;\n  mid = (mid + Math.imul(al0, bh1)) | 0;\n  mid = (mid + Math.imul(ah0, bl1)) | 0;\n  hi = (hi + Math.imul(ah0, bh1)) | 0;\n\n  let w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n  w1 &= 0x3ffffff;\n\n  /* k = 2 */\n  lo = Math.imul(al2, bl0);\n  mid = Math.imul(al2, bh0);\n  mid = (mid + Math.imul(ah2, bl0)) | 0;\n  hi = Math.imul(ah2, bh0);\n  lo = (lo + Math.imul(al1, bl1)) | 0;\n  mid = (mid + Math.imul(al1, bh1)) | 0;\n  mid = (mid + Math.imul(ah1, bl1)) | 0;\n  hi = (hi + Math.imul(ah1, bh1)) | 0;\n  lo = (lo + Math.imul(al0, bl2)) | 0;\n  mid = (mid + Math.imul(al0, bh2)) | 0;\n  mid = (mid + Math.imul(ah0, bl2)) | 0;\n  hi = (hi + Math.imul(ah0, bh2)) | 0;\n\n  let w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n  w2 &= 0x3ffffff;\n\n  /* k = 3 */\n  lo = Math.imul(al3, bl0);\n  mid = Math.imul(al3, bh0);\n  mid = (mid + Math.imul(ah3, bl0)) | 0;\n  hi = Math.imul(ah3, bh0);\n  lo = (lo + Math.imul(al2, bl1)) | 0;\n  mid = (mid + Math.imul(al2, bh1)) | 0;\n  mid = (mid + Math.imul(ah2, bl1)) | 0;\n  hi = (hi + Math.imul(ah2, bh1)) | 0;\n  lo = (lo + Math.imul(al1, bl2)) | 0;\n  mid = (mid + Math.imul(al1, bh2)) | 0;\n  mid = (mid + Math.imul(ah1, bl2)) | 0;\n  hi = (hi + Math.imul(ah1, bh2)) | 0;\n  lo = (lo + Math.imul(al0, bl3)) | 0;\n  mid = (mid + Math.imul(al0, bh3)) | 0;\n  mid = (mid + Math.imul(ah0, bl3)) | 0;\n  hi = (hi + Math.imul(ah0, bh3)) | 0;\n\n  let w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n  w3 &= 0x3ffffff;\n\n  /* k = 4 */\n  lo = Math.imul(al4, bl0);\n  mid = Math.imul(al4, bh0);\n  mid = (mid + Math.imul(ah4, bl0)) | 0;\n  hi = Math.imul(ah4, bh0);\n  lo = (lo + Math.imul(al3, bl1)) | 0;\n  mid = (mid + Math.imul(al3, bh1)) | 0;\n  mid = (mid + Math.imul(ah3, bl1)) | 0;\n  hi = (hi + Math.imul(ah3, bh1)) | 0;\n  lo = (lo + Math.imul(al2, bl2)) | 0;\n  mid = (mid + Math.imul(al2, bh2)) | 0;\n  mid = (mid + Math.imul(ah2, bl2)) | 0;\n  hi = (hi + Math.imul(ah2, bh2)) | 0;\n  lo = (lo + Math.imul(al1, bl3)) | 0;\n  mid = (mid + Math.imul(al1, bh3)) | 0;\n  mid = (mid + Math.imul(ah1, bl3)) | 0;\n  hi = (hi + Math.imul(ah1, bh3)) | 0;\n  lo = (lo + Math.imul(al0, bl4)) | 0;\n  mid = (mid + Math.imul(al0, bh4)) | 0;\n  mid = (mid + Math.imul(ah0, bl4)) | 0;\n  hi = (hi + Math.imul(ah0, bh4)) | 0;\n\n  let w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n  w4 &= 0x3ffffff;\n\n  /* k = 5 */\n  lo = Math.imul(al5, bl0);\n  mid = Math.imul(al5, bh0);\n  mid = (mid + Math.imul(ah5, bl0)) | 0;\n  hi = Math.imul(ah5, bh0);\n  lo = (lo + Math.imul(al4, bl1)) | 0;\n  mid = (mid + Math.imul(al4, bh1)) | 0;\n  mid = (mid + Math.imul(ah4, bl1)) | 0;\n  hi = (hi + Math.imul(ah4, bh1)) | 0;\n  lo = (lo + Math.imul(al3, bl2)) | 0;\n  mid = (mid + Math.imul(al3, bh2)) | 0;\n  mid = (mid + Math.imul(ah3, bl2)) | 0;\n  hi = (hi + Math.imul(ah3, bh2)) | 0;\n  lo = (lo + Math.imul(al2, bl3)) | 0;\n  mid = (mid + Math.imul(al2, bh3)) | 0;\n  mid = (mid + Math.imul(ah2, bl3)) | 0;\n  hi = (hi + Math.imul(ah2, bh3)) | 0;\n  lo = (lo + Math.imul(al1, bl4)) | 0;\n  mid = (mid + Math.imul(al1, bh4)) | 0;\n  mid = (mid + Math.imul(ah1, bl4)) | 0;\n  hi = (hi + Math.imul(ah1, bh4)) | 0;\n  lo = (lo + Math.imul(al0, bl5)) | 0;\n  mid = (mid + Math.imul(al0, bh5)) | 0;\n  mid = (mid + Math.imul(ah0, bl5)) | 0;\n  hi = (hi + Math.imul(ah0, bh5)) | 0;\n\n  let w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n  w5 &= 0x3ffffff;\n\n  /* k = 6 */\n  lo = Math.imul(al6, bl0);\n  mid = Math.imul(al6, bh0);\n  mid = (mid + Math.imul(ah6, bl0)) | 0;\n  hi = Math.imul(ah6, bh0);\n  lo = (lo + Math.imul(al5, bl1)) | 0;\n  mid = (mid + Math.imul(al5, bh1)) | 0;\n  mid = (mid + Math.imul(ah5, bl1)) | 0;\n  hi = (hi + Math.imul(ah5, bh1)) | 0;\n  lo = (lo + Math.imul(al4, bl2)) | 0;\n  mid = (mid + Math.imul(al4, bh2)) | 0;\n  mid = (mid + Math.imul(ah4, bl2)) | 0;\n  hi = (hi + Math.imul(ah4, bh2)) | 0;\n  lo = (lo + Math.imul(al3, bl3)) | 0;\n  mid = (mid + Math.imul(al3, bh3)) | 0;\n  mid = (mid + Math.imul(ah3, bl3)) | 0;\n  hi = (hi + Math.imul(ah3, bh3)) | 0;\n  lo = (lo + Math.imul(al2, bl4)) | 0;\n  mid = (mid + Math.imul(al2, bh4)) | 0;\n  mid = (mid + Math.imul(ah2, bl4)) | 0;\n  hi = (hi + Math.imul(ah2, bh4)) | 0;\n  lo = (lo + Math.imul(al1, bl5)) | 0;\n  mid = (mid + Math.imul(al1, bh5)) | 0;\n  mid = (mid + Math.imul(ah1, bl5)) | 0;\n  hi = (hi + Math.imul(ah1, bh5)) | 0;\n  lo = (lo + Math.imul(al0, bl6)) | 0;\n  mid = (mid + Math.imul(al0, bh6)) | 0;\n  mid = (mid + Math.imul(ah0, bl6)) | 0;\n  hi = (hi + Math.imul(ah0, bh6)) | 0;\n\n  let w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n  w6 &= 0x3ffffff;\n\n  /* k = 7 */\n  lo = Math.imul(al7, bl0);\n  mid = Math.imul(al7, bh0);\n  mid = (mid + Math.imul(ah7, bl0)) | 0;\n  hi = Math.imul(ah7, bh0);\n  lo = (lo + Math.imul(al6, bl1)) | 0;\n  mid = (mid + Math.imul(al6, bh1)) | 0;\n  mid = (mid + Math.imul(ah6, bl1)) | 0;\n  hi = (hi + Math.imul(ah6, bh1)) | 0;\n  lo = (lo + Math.imul(al5, bl2)) | 0;\n  mid = (mid + Math.imul(al5, bh2)) | 0;\n  mid = (mid + Math.imul(ah5, bl2)) | 0;\n  hi = (hi + Math.imul(ah5, bh2)) | 0;\n  lo = (lo + Math.imul(al4, bl3)) | 0;\n  mid = (mid + Math.imul(al4, bh3)) | 0;\n  mid = (mid + Math.imul(ah4, bl3)) | 0;\n  hi = (hi + Math.imul(ah4, bh3)) | 0;\n  lo = (lo + Math.imul(al3, bl4)) | 0;\n  mid = (mid + Math.imul(al3, bh4)) | 0;\n  mid = (mid + Math.imul(ah3, bl4)) | 0;\n  hi = (hi + Math.imul(ah3, bh4)) | 0;\n  lo = (lo + Math.imul(al2, bl5)) | 0;\n  mid = (mid + Math.imul(al2, bh5)) | 0;\n  mid = (mid + Math.imul(ah2, bl5)) | 0;\n  hi = (hi + Math.imul(ah2, bh5)) | 0;\n  lo = (lo + Math.imul(al1, bl6)) | 0;\n  mid = (mid + Math.imul(al1, bh6)) | 0;\n  mid = (mid + Math.imul(ah1, bl6)) | 0;\n  hi = (hi + Math.imul(ah1, bh6)) | 0;\n  lo = (lo + Math.imul(al0, bl7)) | 0;\n  mid = (mid + Math.imul(al0, bh7)) | 0;\n  mid = (mid + Math.imul(ah0, bl7)) | 0;\n  hi = (hi + Math.imul(ah0, bh7)) | 0;\n\n  let w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n  w7 &= 0x3ffffff;\n\n  /* k = 8 */\n  lo = Math.imul(al8, bl0);\n  mid = Math.imul(al8, bh0);\n  mid = (mid + Math.imul(ah8, bl0)) | 0;\n  hi = Math.imul(ah8, bh0);\n  lo = (lo + Math.imul(al7, bl1)) | 0;\n  mid = (mid + Math.imul(al7, bh1)) | 0;\n  mid = (mid + Math.imul(ah7, bl1)) | 0;\n  hi = (hi + Math.imul(ah7, bh1)) | 0;\n  lo = (lo + Math.imul(al6, bl2)) | 0;\n  mid = (mid + Math.imul(al6, bh2)) | 0;\n  mid = (mid + Math.imul(ah6, bl2)) | 0;\n  hi = (hi + Math.imul(ah6, bh2)) | 0;\n  lo = (lo + Math.imul(al5, bl3)) | 0;\n  mid = (mid + Math.imul(al5, bh3)) | 0;\n  mid = (mid + Math.imul(ah5, bl3)) | 0;\n  hi = (hi + Math.imul(ah5, bh3)) | 0;\n  lo = (lo + Math.imul(al4, bl4)) | 0;\n  mid = (mid + Math.imul(al4, bh4)) | 0;\n  mid = (mid + Math.imul(ah4, bl4)) | 0;\n  hi = (hi + Math.imul(ah4, bh4)) | 0;\n  lo = (lo + Math.imul(al3, bl5)) | 0;\n  mid = (mid + Math.imul(al3, bh5)) | 0;\n  mid = (mid + Math.imul(ah3, bl5)) | 0;\n  hi = (hi + Math.imul(ah3, bh5)) | 0;\n  lo = (lo + Math.imul(al2, bl6)) | 0;\n  mid = (mid + Math.imul(al2, bh6)) | 0;\n  mid = (mid + Math.imul(ah2, bl6)) | 0;\n  hi = (hi + Math.imul(ah2, bh6)) | 0;\n  lo = (lo + Math.imul(al1, bl7)) | 0;\n  mid = (mid + Math.imul(al1, bh7)) | 0;\n  mid = (mid + Math.imul(ah1, bl7)) | 0;\n  hi = (hi + Math.imul(ah1, bh7)) | 0;\n  lo = (lo + Math.imul(al0, bl8)) | 0;\n  mid = (mid + Math.imul(al0, bh8)) | 0;\n  mid = (mid + Math.imul(ah0, bl8)) | 0;\n  hi = (hi + Math.imul(ah0, bh8)) | 0;\n\n  let w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n  w8 &= 0x3ffffff;\n\n  /* k = 9 */\n  lo = Math.imul(al9, bl0);\n  mid = Math.imul(al9, bh0);\n  mid = (mid + Math.imul(ah9, bl0)) | 0;\n  hi = Math.imul(ah9, bh0);\n  lo = (lo + Math.imul(al8, bl1)) | 0;\n  mid = (mid + Math.imul(al8, bh1)) | 0;\n  mid = (mid + Math.imul(ah8, bl1)) | 0;\n  hi = (hi + Math.imul(ah8, bh1)) | 0;\n  lo = (lo + Math.imul(al7, bl2)) | 0;\n  mid = (mid + Math.imul(al7, bh2)) | 0;\n  mid = (mid + Math.imul(ah7, bl2)) | 0;\n  hi = (hi + Math.imul(ah7, bh2)) | 0;\n  lo = (lo + Math.imul(al6, bl3)) | 0;\n  mid = (mid + Math.imul(al6, bh3)) | 0;\n  mid = (mid + Math.imul(ah6, bl3)) | 0;\n  hi = (hi + Math.imul(ah6, bh3)) | 0;\n  lo = (lo + Math.imul(al5, bl4)) | 0;\n  mid = (mid + Math.imul(al5, bh4)) | 0;\n  mid = (mid + Math.imul(ah5, bl4)) | 0;\n  hi = (hi + Math.imul(ah5, bh4)) | 0;\n  lo = (lo + Math.imul(al4, bl5)) | 0;\n  mid = (mid + Math.imul(al4, bh5)) | 0;\n  mid = (mid + Math.imul(ah4, bl5)) | 0;\n  hi = (hi + Math.imul(ah4, bh5)) | 0;\n  lo = (lo + Math.imul(al3, bl6)) | 0;\n  mid = (mid + Math.imul(al3, bh6)) | 0;\n  mid = (mid + Math.imul(ah3, bl6)) | 0;\n  hi = (hi + Math.imul(ah3, bh6)) | 0;\n  lo = (lo + Math.imul(al2, bl7)) | 0;\n  mid = (mid + Math.imul(al2, bh7)) | 0;\n  mid = (mid + Math.imul(ah2, bl7)) | 0;\n  hi = (hi + Math.imul(ah2, bh7)) | 0;\n  lo = (lo + Math.imul(al1, bl8)) | 0;\n  mid = (mid + Math.imul(al1, bh8)) | 0;\n  mid = (mid + Math.imul(ah1, bl8)) | 0;\n  hi = (hi + Math.imul(ah1, bh8)) | 0;\n  lo = (lo + Math.imul(al0, bl9)) | 0;\n  mid = (mid + Math.imul(al0, bh9)) | 0;\n  mid = (mid + Math.imul(ah0, bl9)) | 0;\n  hi = (hi + Math.imul(ah0, bh9)) | 0;\n\n  let w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n  w9 &= 0x3ffffff;\n\n  /* k = 10 */\n  lo = Math.imul(al9, bl1);\n  mid = Math.imul(al9, bh1);\n  mid = (mid + Math.imul(ah9, bl1)) | 0;\n  hi = Math.imul(ah9, bh1);\n  lo = (lo + Math.imul(al8, bl2)) | 0;\n  mid = (mid + Math.imul(al8, bh2)) | 0;\n  mid = (mid + Math.imul(ah8, bl2)) | 0;\n  hi = (hi + Math.imul(ah8, bh2)) | 0;\n  lo = (lo + Math.imul(al7, bl3)) | 0;\n  mid = (mid + Math.imul(al7, bh3)) | 0;\n  mid = (mid + Math.imul(ah7, bl3)) | 0;\n  hi = (hi + Math.imul(ah7, bh3)) | 0;\n  lo = (lo + Math.imul(al6, bl4)) | 0;\n  mid = (mid + Math.imul(al6, bh4)) | 0;\n  mid = (mid + Math.imul(ah6, bl4)) | 0;\n  hi = (hi + Math.imul(ah6, bh4)) | 0;\n  lo = (lo + Math.imul(al5, bl5)) | 0;\n  mid = (mid + Math.imul(al5, bh5)) | 0;\n  mid = (mid + Math.imul(ah5, bl5)) | 0;\n  hi = (hi + Math.imul(ah5, bh5)) | 0;\n  lo = (lo + Math.imul(al4, bl6)) | 0;\n  mid = (mid + Math.imul(al4, bh6)) | 0;\n  mid = (mid + Math.imul(ah4, bl6)) | 0;\n  hi = (hi + Math.imul(ah4, bh6)) | 0;\n  lo = (lo + Math.imul(al3, bl7)) | 0;\n  mid = (mid + Math.imul(al3, bh7)) | 0;\n  mid = (mid + Math.imul(ah3, bl7)) | 0;\n  hi = (hi + Math.imul(ah3, bh7)) | 0;\n  lo = (lo + Math.imul(al2, bl8)) | 0;\n  mid = (mid + Math.imul(al2, bh8)) | 0;\n  mid = (mid + Math.imul(ah2, bl8)) | 0;\n  hi = (hi + Math.imul(ah2, bh8)) | 0;\n  lo = (lo + Math.imul(al1, bl9)) | 0;\n  mid = (mid + Math.imul(al1, bh9)) | 0;\n  mid = (mid + Math.imul(ah1, bl9)) | 0;\n  hi = (hi + Math.imul(ah1, bh9)) | 0;\n\n  let w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n  w10 &= 0x3ffffff;\n\n  /* k = 11 */\n  lo = Math.imul(al9, bl2);\n  mid = Math.imul(al9, bh2);\n  mid = (mid + Math.imul(ah9, bl2)) | 0;\n  hi = Math.imul(ah9, bh2);\n  lo = (lo + Math.imul(al8, bl3)) | 0;\n  mid = (mid + Math.imul(al8, bh3)) | 0;\n  mid = (mid + Math.imul(ah8, bl3)) | 0;\n  hi = (hi + Math.imul(ah8, bh3)) | 0;\n  lo = (lo + Math.imul(al7, bl4)) | 0;\n  mid = (mid + Math.imul(al7, bh4)) | 0;\n  mid = (mid + Math.imul(ah7, bl4)) | 0;\n  hi = (hi + Math.imul(ah7, bh4)) | 0;\n  lo = (lo + Math.imul(al6, bl5)) | 0;\n  mid = (mid + Math.imul(al6, bh5)) | 0;\n  mid = (mid + Math.imul(ah6, bl5)) | 0;\n  hi = (hi + Math.imul(ah6, bh5)) | 0;\n  lo = (lo + Math.imul(al5, bl6)) | 0;\n  mid = (mid + Math.imul(al5, bh6)) | 0;\n  mid = (mid + Math.imul(ah5, bl6)) | 0;\n  hi = (hi + Math.imul(ah5, bh6)) | 0;\n  lo = (lo + Math.imul(al4, bl7)) | 0;\n  mid = (mid + Math.imul(al4, bh7)) | 0;\n  mid = (mid + Math.imul(ah4, bl7)) | 0;\n  hi = (hi + Math.imul(ah4, bh7)) | 0;\n  lo = (lo + Math.imul(al3, bl8)) | 0;\n  mid = (mid + Math.imul(al3, bh8)) | 0;\n  mid = (mid + Math.imul(ah3, bl8)) | 0;\n  hi = (hi + Math.imul(ah3, bh8)) | 0;\n  lo = (lo + Math.imul(al2, bl9)) | 0;\n  mid = (mid + Math.imul(al2, bh9)) | 0;\n  mid = (mid + Math.imul(ah2, bl9)) | 0;\n  hi = (hi + Math.imul(ah2, bh9)) | 0;\n\n  let w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n  w11 &= 0x3ffffff;\n\n  /* k = 12 */\n  lo = Math.imul(al9, bl3);\n  mid = Math.imul(al9, bh3);\n  mid = (mid + Math.imul(ah9, bl3)) | 0;\n  hi = Math.imul(ah9, bh3);\n  lo = (lo + Math.imul(al8, bl4)) | 0;\n  mid = (mid + Math.imul(al8, bh4)) | 0;\n  mid = (mid + Math.imul(ah8, bl4)) | 0;\n  hi = (hi + Math.imul(ah8, bh4)) | 0;\n  lo = (lo + Math.imul(al7, bl5)) | 0;\n  mid = (mid + Math.imul(al7, bh5)) | 0;\n  mid = (mid + Math.imul(ah7, bl5)) | 0;\n  hi = (hi + Math.imul(ah7, bh5)) | 0;\n  lo = (lo + Math.imul(al6, bl6)) | 0;\n  mid = (mid + Math.imul(al6, bh6)) | 0;\n  mid = (mid + Math.imul(ah6, bl6)) | 0;\n  hi = (hi + Math.imul(ah6, bh6)) | 0;\n  lo = (lo + Math.imul(al5, bl7)) | 0;\n  mid = (mid + Math.imul(al5, bh7)) | 0;\n  mid = (mid + Math.imul(ah5, bl7)) | 0;\n  hi = (hi + Math.imul(ah5, bh7)) | 0;\n  lo = (lo + Math.imul(al4, bl8)) | 0;\n  mid = (mid + Math.imul(al4, bh8)) | 0;\n  mid = (mid + Math.imul(ah4, bl8)) | 0;\n  hi = (hi + Math.imul(ah4, bh8)) | 0;\n  lo = (lo + Math.imul(al3, bl9)) | 0;\n  mid = (mid + Math.imul(al3, bh9)) | 0;\n  mid = (mid + Math.imul(ah3, bl9)) | 0;\n  hi = (hi + Math.imul(ah3, bh9)) | 0;\n\n  let w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n  w12 &= 0x3ffffff;\n\n  /* k = 13 */\n  lo = Math.imul(al9, bl4);\n  mid = Math.imul(al9, bh4);\n  mid = (mid + Math.imul(ah9, bl4)) | 0;\n  hi = Math.imul(ah9, bh4);\n  lo = (lo + Math.imul(al8, bl5)) | 0;\n  mid = (mid + Math.imul(al8, bh5)) | 0;\n  mid = (mid + Math.imul(ah8, bl5)) | 0;\n  hi = (hi + Math.imul(ah8, bh5)) | 0;\n  lo = (lo + Math.imul(al7, bl6)) | 0;\n  mid = (mid + Math.imul(al7, bh6)) | 0;\n  mid = (mid + Math.imul(ah7, bl6)) | 0;\n  hi = (hi + Math.imul(ah7, bh6)) | 0;\n  lo = (lo + Math.imul(al6, bl7)) | 0;\n  mid = (mid + Math.imul(al6, bh7)) | 0;\n  mid = (mid + Math.imul(ah6, bl7)) | 0;\n  hi = (hi + Math.imul(ah6, bh7)) | 0;\n  lo = (lo + Math.imul(al5, bl8)) | 0;\n  mid = (mid + Math.imul(al5, bh8)) | 0;\n  mid = (mid + Math.imul(ah5, bl8)) | 0;\n  hi = (hi + Math.imul(ah5, bh8)) | 0;\n  lo = (lo + Math.imul(al4, bl9)) | 0;\n  mid = (mid + Math.imul(al4, bh9)) | 0;\n  mid = (mid + Math.imul(ah4, bl9)) | 0;\n  hi = (hi + Math.imul(ah4, bh9)) | 0;\n\n  let w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n  w13 &= 0x3ffffff;\n\n  /* k = 14 */\n  lo = Math.imul(al9, bl5);\n  mid = Math.imul(al9, bh5);\n  mid = (mid + Math.imul(ah9, bl5)) | 0;\n  hi = Math.imul(ah9, bh5);\n  lo = (lo + Math.imul(al8, bl6)) | 0;\n  mid = (mid + Math.imul(al8, bh6)) | 0;\n  mid = (mid + Math.imul(ah8, bl6)) | 0;\n  hi = (hi + Math.imul(ah8, bh6)) | 0;\n  lo = (lo + Math.imul(al7, bl7)) | 0;\n  mid = (mid + Math.imul(al7, bh7)) | 0;\n  mid = (mid + Math.imul(ah7, bl7)) | 0;\n  hi = (hi + Math.imul(ah7, bh7)) | 0;\n  lo = (lo + Math.imul(al6, bl8)) | 0;\n  mid = (mid + Math.imul(al6, bh8)) | 0;\n  mid = (mid + Math.imul(ah6, bl8)) | 0;\n  hi = (hi + Math.imul(ah6, bh8)) | 0;\n  lo = (lo + Math.imul(al5, bl9)) | 0;\n  mid = (mid + Math.imul(al5, bh9)) | 0;\n  mid = (mid + Math.imul(ah5, bl9)) | 0;\n  hi = (hi + Math.imul(ah5, bh9)) | 0;\n\n  let w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n  w14 &= 0x3ffffff;\n\n  /* k = 15 */\n  lo = Math.imul(al9, bl6);\n  mid = Math.imul(al9, bh6);\n  mid = (mid + Math.imul(ah9, bl6)) | 0;\n  hi = Math.imul(ah9, bh6);\n  lo = (lo + Math.imul(al8, bl7)) | 0;\n  mid = (mid + Math.imul(al8, bh7)) | 0;\n  mid = (mid + Math.imul(ah8, bl7)) | 0;\n  hi = (hi + Math.imul(ah8, bh7)) | 0;\n  lo = (lo + Math.imul(al7, bl8)) | 0;\n  mid = (mid + Math.imul(al7, bh8)) | 0;\n  mid = (mid + Math.imul(ah7, bl8)) | 0;\n  hi = (hi + Math.imul(ah7, bh8)) | 0;\n  lo = (lo + Math.imul(al6, bl9)) | 0;\n  mid = (mid + Math.imul(al6, bh9)) | 0;\n  mid = (mid + Math.imul(ah6, bl9)) | 0;\n  hi = (hi + Math.imul(ah6, bh9)) | 0;\n\n  let w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n  w15 &= 0x3ffffff;\n\n  /* k = 16 */\n  lo = Math.imul(al9, bl7);\n  mid = Math.imul(al9, bh7);\n  mid = (mid + Math.imul(ah9, bl7)) | 0;\n  hi = Math.imul(ah9, bh7);\n  lo = (lo + Math.imul(al8, bl8)) | 0;\n  mid = (mid + Math.imul(al8, bh8)) | 0;\n  mid = (mid + Math.imul(ah8, bl8)) | 0;\n  hi = (hi + Math.imul(ah8, bh8)) | 0;\n  lo = (lo + Math.imul(al7, bl9)) | 0;\n  mid = (mid + Math.imul(al7, bh9)) | 0;\n  mid = (mid + Math.imul(ah7, bl9)) | 0;\n  hi = (hi + Math.imul(ah7, bh9)) | 0;\n\n  let w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n  w16 &= 0x3ffffff;\n\n  /* k = 17 */\n  lo = Math.imul(al9, bl8);\n  mid = Math.imul(al9, bh8);\n  mid = (mid + Math.imul(ah9, bl8)) | 0;\n  hi = Math.imul(ah9, bh8);\n  lo = (lo + Math.imul(al8, bl9)) | 0;\n  mid = (mid + Math.imul(al8, bh9)) | 0;\n  mid = (mid + Math.imul(ah8, bl9)) | 0;\n  hi = (hi + Math.imul(ah8, bh9)) | 0;\n\n  let w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n  w17 &= 0x3ffffff;\n\n  /* k = 18 */\n  lo = Math.imul(al9, bl9);\n  mid = Math.imul(al9, bh9);\n  mid = (mid + Math.imul(ah9, bl9)) | 0;\n  hi = Math.imul(ah9, bh9);\n\n  let w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n  c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n  w18 &= 0x3ffffff;\n\n  o[0] = w0;\n  o[1] = w1;\n  o[2] = w2;\n  o[3] = w3;\n  o[4] = w4;\n  o[5] = w5;\n  o[6] = w6;\n  o[7] = w7;\n  o[8] = w8;\n  o[9] = w9;\n  o[10] = w10;\n  o[11] = w11;\n  o[12] = w12;\n  o[13] = w13;\n  o[14] = w14;\n  o[15] = w15;\n  o[16] = w16;\n  o[17] = w17;\n  o[18] = w18;\n\n  if (c !== 0) {\n    o[19] = c;\n    out.length += 1;\n  }\n\n  // Note: we shouldn't need to strip here.\n  return out;\n}\n\n// Polyfill comb.\nif (!Math.imul)\n  comb10MulTo = smallMulTo;\n\n/*\n * Expose\n */\n\nBN.Red = Red;\n\nmodule.exports = BN;\n"]},"metadata":{},"sourceType":"script"}