{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar pkg = require('../../../package.json');\n\nvar _require = require('../utils'),\n    withTimeoutOption = _require.withTimeoutOption; // TODO add the commit hash of the current ipfs version to the response.\n\n\nmodule.exports = function (_ref) {\n  var repo = _ref.repo;\n  return withTimeoutOption( /*#__PURE__*/function () {\n    var _version = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(options) {\n      var repoVersion;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return repo.version.get(options);\n\n            case 2:\n              repoVersion = _context.sent;\n              return _context.abrupt(\"return\", {\n                version: pkg.version,\n                repo: repoVersion,\n                commit: ''\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function version(_x) {\n      return _version.apply(this, arguments);\n    }\n\n    return version;\n  }());\n};","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/ipfs/src/core/components/version.js"],"names":["pkg","require","withTimeoutOption","module","exports","repo","options","version","get","repoVersion","commit"],"mappings":"AAAA;;;;;;AAEA,IAAMA,GAAG,GAAGC,OAAO,CAAC,uBAAD,CAAnB;;eAC8BA,OAAO,CAAC,UAAD,C;IAA7BC,iB,YAAAA,iB,EAER;;;AACAC,MAAM,CAACC,OAAP,GAAiB,gBAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAC7B,SAAOH,iBAAiB;AAAA,4EAAC,iBAAwBI,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACGD,IAAI,CAACE,OAAL,CAAaC,GAAb,CAAiBF,OAAjB,CADH;;AAAA;AACjBG,cAAAA,WADiB;AAAA,+CAGhB;AACLF,gBAAAA,OAAO,EAAEP,GAAG,CAACO,OADR;AAELF,gBAAAA,IAAI,EAAEI,WAFD;AAGLC,gBAAAA,MAAM,EAAE;AAHH,eAHgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA,aAAgBH,OAAhB;AAAA;AAAA;;AAAA,WAAgBA,OAAhB;AAAA,MAAxB;AASD,CAVD","sourcesContent":["'use strict'\n\nconst pkg = require('../../../package.json')\nconst { withTimeoutOption } = require('../utils')\n\n// TODO add the commit hash of the current ipfs version to the response.\nmodule.exports = ({ repo }) => {\n  return withTimeoutOption(async function version (options) {\n    const repoVersion = await repo.version.get(options)\n\n    return {\n      version: pkg.version,\n      repo: repoVersion,\n      commit: ''\n    }\n  })\n}\n"]},"metadata":{},"sourceType":"script"}