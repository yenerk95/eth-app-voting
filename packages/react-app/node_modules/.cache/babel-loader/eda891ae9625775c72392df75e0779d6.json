{"ast":null,"code":"'use strict';\n\nconst applyDefaultOptions = require('./utils/apply-default-options');\n\nconst stat = require('./stat');\n\nconst {\n  withTimeoutOption\n} = require('../../utils');\n\nconst defaultOptions = {\n  signal: undefined\n};\n\nmodule.exports = context => {\n  return withTimeoutOption(async function mfsFlush(path = '/', options = defaultOptions) {\n    if (path && typeof path !== 'string') {\n      options = path;\n      path = '/';\n    }\n\n    options = applyDefaultOptions(options, defaultOptions);\n    const result = await stat(context)(path, options);\n    return result.cid;\n  });\n};","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/ipfs/src/core/components/files/flush.js"],"names":["applyDefaultOptions","require","stat","withTimeoutOption","defaultOptions","signal","undefined","module","exports","context","mfsFlush","path","options","result","cid"],"mappings":"AAAA;;AAEA,MAAMA,mBAAmB,GAAGC,OAAO,CAAC,+BAAD,CAAnC;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,QAAD,CAApB;;AACA,MAAM;AAAEE,EAAAA;AAAF,IAAwBF,OAAO,CAAC,aAAD,CAArC;;AAEA,MAAMG,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAEC;AADa,CAAvB;;AAIAC,MAAM,CAACC,OAAP,GAAkBC,OAAD,IAAa;AAC5B,SAAON,iBAAiB,CAAC,eAAeO,QAAf,CAAyBC,IAAI,GAAG,GAAhC,EAAqCC,OAAO,GAAGR,cAA/C,EAA+D;AACtF,QAAIO,IAAI,IAAI,OAAOA,IAAP,KAAgB,QAA5B,EAAsC;AACpCC,MAAAA,OAAO,GAAGD,IAAV;AACAA,MAAAA,IAAI,GAAG,GAAP;AACD;;AAEDC,IAAAA,OAAO,GAAGZ,mBAAmB,CAACY,OAAD,EAAUR,cAAV,CAA7B;AAEA,UAAMS,MAAM,GAAG,MAAMX,IAAI,CAACO,OAAD,CAAJ,CAAcE,IAAd,EAAoBC,OAApB,CAArB;AAEA,WAAOC,MAAM,CAACC,GAAd;AACD,GAXuB,CAAxB;AAYD,CAbD","sourcesContent":["'use strict'\n\nconst applyDefaultOptions = require('./utils/apply-default-options')\nconst stat = require('./stat')\nconst { withTimeoutOption } = require('../../utils')\n\nconst defaultOptions = {\n  signal: undefined\n}\n\nmodule.exports = (context) => {\n  return withTimeoutOption(async function mfsFlush (path = '/', options = defaultOptions) {\n    if (path && typeof path !== 'string') {\n      options = path\n      path = '/'\n    }\n\n    options = applyDefaultOptions(options, defaultOptions)\n\n    const result = await stat(context)(path, options)\n\n    return result.cid\n  })\n}\n"]},"metadata":{},"sourceType":"script"}