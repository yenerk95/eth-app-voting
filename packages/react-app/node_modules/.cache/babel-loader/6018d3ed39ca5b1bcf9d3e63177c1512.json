{"ast":null,"code":"'use strict';\n\nvar IpnsPubsubDatastore = require('../../../ipns/routing/pubsub-datastore');\n\nvar errcode = require('err-code'); // Get pubsub from IPNS routing\n\n\nexports.getPubsubRouting = function (ipns, options) {\n  if (!ipns || !(options.EXPERIMENTAL && options.EXPERIMENTAL.ipnsPubsub)) {\n    throw errcode(new Error('IPNS pubsub subsystem is not enabled'), 'ERR_IPNS_PUBSUB_NOT_ENABLED');\n  } // Only one store and it is pubsub\n\n\n  if (IpnsPubsubDatastore.isIpnsPubsubDatastore(ipns.routing)) {\n    return ipns.routing;\n  } // Find in tiered\n\n\n  var pubsub = (ipns.routing.stores || []).find(function (s) {\n    return IpnsPubsubDatastore.isIpnsPubsubDatastore(s);\n  });\n\n  if (!pubsub) {\n    throw errcode(new Error('IPNS pubsub datastore not found'), 'ERR_PUBSUB_DATASTORE_NOT_FOUND');\n  }\n\n  return pubsub;\n};","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/ipfs/src/core/components/name/pubsub/utils.js"],"names":["IpnsPubsubDatastore","require","errcode","exports","getPubsubRouting","ipns","options","EXPERIMENTAL","ipnsPubsub","Error","isIpnsPubsubDatastore","routing","pubsub","stores","find","s"],"mappings":"AAAA;;AAEA,IAAMA,mBAAmB,GAAGC,OAAO,CAAC,wCAAD,CAAnC;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,UAAD,CAAvB,C,CAEA;;;AACAE,OAAO,CAACC,gBAAR,GAA2B,UAACC,IAAD,EAAOC,OAAP,EAAmB;AAC5C,MAAI,CAACD,IAAD,IAAS,EAAEC,OAAO,CAACC,YAAR,IAAwBD,OAAO,CAACC,YAAR,CAAqBC,UAA/C,CAAb,EAAyE;AACvE,UAAMN,OAAO,CAAC,IAAIO,KAAJ,CAAU,sCAAV,CAAD,EAAoD,6BAApD,CAAb;AACD,GAH2C,CAK5C;;;AACA,MAAIT,mBAAmB,CAACU,qBAApB,CAA0CL,IAAI,CAACM,OAA/C,CAAJ,EAA6D;AAC3D,WAAON,IAAI,CAACM,OAAZ;AACD,GAR2C,CAU5C;;;AACA,MAAMC,MAAM,GAAG,CAACP,IAAI,CAACM,OAAL,CAAaE,MAAb,IAAuB,EAAxB,EAA4BC,IAA5B,CAAiC,UAAAC,CAAC;AAAA,WAAIf,mBAAmB,CAACU,qBAApB,CAA0CK,CAA1C,CAAJ;AAAA,GAAlC,CAAf;;AAEA,MAAI,CAACH,MAAL,EAAa;AACX,UAAMV,OAAO,CAAC,IAAIO,KAAJ,CAAU,iCAAV,CAAD,EAA+C,gCAA/C,CAAb;AACD;;AAED,SAAOG,MAAP;AACD,CAlBD","sourcesContent":["'use strict'\n\nconst IpnsPubsubDatastore = require('../../../ipns/routing/pubsub-datastore')\nconst errcode = require('err-code')\n\n// Get pubsub from IPNS routing\nexports.getPubsubRouting = (ipns, options) => {\n  if (!ipns || !(options.EXPERIMENTAL && options.EXPERIMENTAL.ipnsPubsub)) {\n    throw errcode(new Error('IPNS pubsub subsystem is not enabled'), 'ERR_IPNS_PUBSUB_NOT_ENABLED')\n  }\n\n  // Only one store and it is pubsub\n  if (IpnsPubsubDatastore.isIpnsPubsubDatastore(ipns.routing)) {\n    return ipns.routing\n  }\n\n  // Find in tiered\n  const pubsub = (ipns.routing.stores || []).find(s => IpnsPubsubDatastore.isIpnsPubsubDatastore(s))\n\n  if (!pubsub) {\n    throw errcode(new Error('IPNS pubsub datastore not found'), 'ERR_PUBSUB_DATASTORE_NOT_FOUND')\n  }\n\n  return pubsub\n}\n"]},"metadata":{},"sourceType":"script"}