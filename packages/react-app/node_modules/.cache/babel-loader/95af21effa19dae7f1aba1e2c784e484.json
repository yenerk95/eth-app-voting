{"ast":null,"code":"'use strict';\n\nconst pFinally = require('p-finally');\n\nclass TimeoutError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = 'TimeoutError';\n  }\n\n}\n\nconst pTimeout = (promise, milliseconds, fallback) => new Promise((resolve, reject) => {\n  if (typeof milliseconds !== 'number' || milliseconds < 0) {\n    throw new TypeError('Expected `milliseconds` to be a positive number');\n  }\n\n  if (milliseconds === Infinity) {\n    resolve(promise);\n    return;\n  }\n\n  const timer = setTimeout(() => {\n    if (typeof fallback === 'function') {\n      try {\n        resolve(fallback());\n      } catch (error) {\n        reject(error);\n      }\n\n      return;\n    }\n\n    const message = typeof fallback === 'string' ? fallback : `Promise timed out after ${milliseconds} milliseconds`;\n    const timeoutError = fallback instanceof Error ? fallback : new TimeoutError(message);\n\n    if (typeof promise.cancel === 'function') {\n      promise.cancel();\n    }\n\n    reject(timeoutError);\n  }, milliseconds); // TODO: Use native `finally` keyword when targeting Node.js 10\n\n  pFinally( // eslint-disable-next-line promise/prefer-await-to-then\n  promise.then(resolve, reject), () => {\n    clearTimeout(timer);\n  });\n});\n\nmodule.exports = pTimeout; // TODO: Remove this for the next major release\n\nmodule.exports.default = pTimeout;\nmodule.exports.TimeoutError = TimeoutError;","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/p-timeout/index.js"],"names":["pFinally","require","TimeoutError","Error","constructor","message","name","pTimeout","promise","milliseconds","fallback","Promise","resolve","reject","TypeError","Infinity","timer","setTimeout","error","timeoutError","cancel","then","clearTimeout","module","exports","default"],"mappings":"AAAA;;AAEA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,WAAD,CAAxB;;AAEA,MAAMC,YAAN,SAA2BC,KAA3B,CAAiC;AAChCC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACpB,UAAMA,OAAN;AACA,SAAKC,IAAL,GAAY,cAAZ;AACA;;AAJ+B;;AAOjC,MAAMC,QAAQ,GAAG,CAACC,OAAD,EAAUC,YAAV,EAAwBC,QAAxB,KAAqC,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtF,MAAI,OAAOJ,YAAP,KAAwB,QAAxB,IAAoCA,YAAY,GAAG,CAAvD,EAA0D;AACzD,UAAM,IAAIK,SAAJ,CAAc,iDAAd,CAAN;AACA;;AAED,MAAIL,YAAY,KAAKM,QAArB,EAA+B;AAC9BH,IAAAA,OAAO,CAACJ,OAAD,CAAP;AACA;AACA;;AAED,QAAMQ,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC9B,QAAI,OAAOP,QAAP,KAAoB,UAAxB,EAAoC;AACnC,UAAI;AACHE,QAAAA,OAAO,CAACF,QAAQ,EAAT,CAAP;AACA,OAFD,CAEE,OAAOQ,KAAP,EAAc;AACfL,QAAAA,MAAM,CAACK,KAAD,CAAN;AACA;;AAED;AACA;;AAED,UAAMb,OAAO,GAAG,OAAOK,QAAP,KAAoB,QAApB,GAA+BA,QAA/B,GAA2C,2BAA0BD,YAAa,eAAlG;AACA,UAAMU,YAAY,GAAGT,QAAQ,YAAYP,KAApB,GAA4BO,QAA5B,GAAuC,IAAIR,YAAJ,CAAiBG,OAAjB,CAA5D;;AAEA,QAAI,OAAOG,OAAO,CAACY,MAAf,KAA0B,UAA9B,EAA0C;AACzCZ,MAAAA,OAAO,CAACY,MAAR;AACA;;AAEDP,IAAAA,MAAM,CAACM,YAAD,CAAN;AACA,GAnBuB,EAmBrBV,YAnBqB,CAAxB,CAVsF,CA+BtF;;AACAT,EAAAA,QAAQ,EACP;AACAQ,EAAAA,OAAO,CAACa,IAAR,CAAaT,OAAb,EAAsBC,MAAtB,CAFO,EAGP,MAAM;AACLS,IAAAA,YAAY,CAACN,KAAD,CAAZ;AACA,GALM,CAAR;AAOA,CAvCqD,CAAtD;;AAyCAO,MAAM,CAACC,OAAP,GAAiBjB,QAAjB,C,CACA;;AACAgB,MAAM,CAACC,OAAP,CAAeC,OAAf,GAAyBlB,QAAzB;AAEAgB,MAAM,CAACC,OAAP,CAAetB,YAAf,GAA8BA,YAA9B","sourcesContent":["'use strict';\n\nconst pFinally = require('p-finally');\n\nclass TimeoutError extends Error {\n\tconstructor(message) {\n\t\tsuper(message);\n\t\tthis.name = 'TimeoutError';\n\t}\n}\n\nconst pTimeout = (promise, milliseconds, fallback) => new Promise((resolve, reject) => {\n\tif (typeof milliseconds !== 'number' || milliseconds < 0) {\n\t\tthrow new TypeError('Expected `milliseconds` to be a positive number');\n\t}\n\n\tif (milliseconds === Infinity) {\n\t\tresolve(promise);\n\t\treturn;\n\t}\n\n\tconst timer = setTimeout(() => {\n\t\tif (typeof fallback === 'function') {\n\t\t\ttry {\n\t\t\t\tresolve(fallback());\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst message = typeof fallback === 'string' ? fallback : `Promise timed out after ${milliseconds} milliseconds`;\n\t\tconst timeoutError = fallback instanceof Error ? fallback : new TimeoutError(message);\n\n\t\tif (typeof promise.cancel === 'function') {\n\t\t\tpromise.cancel();\n\t\t}\n\n\t\treject(timeoutError);\n\t}, milliseconds);\n\n\t// TODO: Use native `finally` keyword when targeting Node.js 10\n\tpFinally(\n\t\t// eslint-disable-next-line promise/prefer-await-to-then\n\t\tpromise.then(resolve, reject),\n\t\t() => {\n\t\t\tclearTimeout(timer);\n\t\t}\n\t);\n});\n\nmodule.exports = pTimeout;\n// TODO: Remove this for the next major release\nmodule.exports.default = pTimeout;\n\nmodule.exports.TimeoutError = TimeoutError;\n"]},"metadata":{},"sourceType":"script"}