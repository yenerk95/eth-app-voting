{"ast":null,"code":"'use strict';\n\nvar _slicedToArray = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _createForOfIteratorHelper = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar debug = require('debug');\n/**\n * Creates a logger for the given subsystem\n *\n * @param {PeerId} [id]\n * @param {string} [subsystem]\n * @returns {debug}\n *\n * @private\n */\n\n\nvar logger = function logger(id, subsystem) {\n  var name = ['bitswap'];\n\n  if (subsystem) {\n    name.push(subsystem);\n  }\n\n  if (id) {\n    name.push(\"\".concat(id.toB58String().slice(0, 8)));\n  }\n\n  var logger = debug(name.join(':'));\n  logger.error = debug(name.concat(['error']).join(':'));\n  return logger;\n};\n\nvar includesWith = function includesWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n};\n\nvar uniqWith = function uniqWith(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var item;\n\n  while (idx < len) {\n    item = list[idx];\n\n    if (!includesWith(pred, item, result)) {\n      result[result.length] = item;\n    }\n\n    idx += 1;\n  }\n\n  return result;\n};\n\nvar groupBy = function groupBy(pred, list) {\n  return list.reduce(function (acc, v) {\n    var k = pred(v);\n\n    if (acc[k]) {\n      acc[k].push(v);\n    } else {\n      acc[k] = [v];\n    }\n\n    return acc;\n  }, {});\n};\n\nvar pullAllWith = function pullAllWith(pred, list, values) {\n  return list.filter(function (i) {\n    return !includesWith(pred, i, values);\n  });\n};\n\nvar sortBy = function sortBy(fn, list) {\n  return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    var aa = fn(a);\n    var bb = fn(b);\n    return aa < bb ? -1 : aa > bb ? 1 : 0;\n  });\n};\n/**\n * Is equal for Maps of BitswapMessageEntry or Blocks\n * @param {Map} a\n * @param {Map} b\n * @returns {boolean}\n */\n\n\nvar isMapEqual = function isMapEqual(a, b) {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  var _iterator = _createForOfIteratorHelper(a),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _step$value = _slicedToArray(_step.value, 2),\n          key = _step$value[0],\n          valueA = _step$value[1];\n\n      if (!b.has(key)) {\n        return false;\n      }\n\n      var valueB = b.get(key); // Support BitswapMessageEntry\n\n      if (typeof valueA.equals === 'function' && !valueA.equals(valueB)) {\n        return false;\n      } // Support Blocks\n\n\n      if (valueA._data && !valueA._data.equals(valueB._data)) {\n        return false;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return true;\n};\n\nmodule.exports = {\n  logger: logger,\n  includesWith: includesWith,\n  uniqWith: uniqWith,\n  groupBy: groupBy,\n  pullAllWith: pullAllWith,\n  sortBy: sortBy,\n  isMapEqual: isMapEqual\n};","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/ipfs-bitswap/src/utils/index.js"],"names":["debug","require","logger","id","subsystem","name","push","toB58String","slice","join","error","concat","includesWith","pred","x","list","idx","len","length","uniqWith","result","item","groupBy","reduce","acc","v","k","pullAllWith","values","filter","i","sortBy","fn","Array","prototype","call","sort","a","b","aa","bb","isMapEqual","size","key","valueA","has","valueB","get","equals","_data","module","exports"],"mappings":"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","sourcesContent":["'use strict'\n\nconst debug = require('debug')\n\n/**\n * Creates a logger for the given subsystem\n *\n * @param {PeerId} [id]\n * @param {string} [subsystem]\n * @returns {debug}\n *\n * @private\n */\nconst logger = (id, subsystem) => {\n  const name = ['bitswap']\n  if (subsystem) {\n    name.push(subsystem)\n  }\n  if (id) {\n    name.push(`${id.toB58String().slice(0, 8)}`)\n  }\n  const logger = debug(name.join(':'))\n  logger.error = debug(name.concat(['error']).join(':'))\n\n  return logger\n}\n\nconst includesWith = (pred, x, list) => {\n  let idx = 0\n  const len = list.length\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true\n    }\n    idx += 1\n  }\n  return false\n}\n\nconst uniqWith = (pred, list) => {\n  let idx = 0\n  const len = list.length\n  const result = []\n  let item\n\n  while (idx < len) {\n    item = list[idx]\n    if (!includesWith(pred, item, result)) {\n      result[result.length] = item\n    }\n    idx += 1\n  }\n  return result\n}\n\nconst groupBy = (pred, list) => {\n  return list.reduce((acc, v) => {\n    const k = pred(v)\n\n    if (acc[k]) {\n      acc[k].push(v)\n    } else {\n      acc[k] = [v]\n    }\n    return acc\n  }, {})\n}\n\nconst pullAllWith = (pred, list, values) => {\n  return list.filter(i => {\n    return !includesWith(pred, i, values)\n  })\n}\n\nconst sortBy = (fn, list) => {\n  return Array.prototype.slice.call(list, 0).sort((a, b) => {\n    const aa = fn(a)\n    const bb = fn(b)\n    return aa < bb ? -1 : aa > bb ? 1 : 0\n  })\n}\n\n/**\n * Is equal for Maps of BitswapMessageEntry or Blocks\n * @param {Map} a\n * @param {Map} b\n * @returns {boolean}\n */\nconst isMapEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false\n  }\n\n  for (const [key, valueA] of a) {\n    if (!b.has(key)) {\n      return false\n    }\n\n    const valueB = b.get(key)\n\n    // Support BitswapMessageEntry\n    if (typeof valueA.equals === 'function' && !valueA.equals(valueB)) {\n      return false\n    }\n    // Support Blocks\n    if (valueA._data && !valueA._data.equals(valueB._data)) {\n      return false\n    }\n  }\n\n  return true\n}\n\nmodule.exports = {\n  logger,\n  includesWith,\n  uniqWith,\n  groupBy,\n  pullAllWith,\n  sortBy,\n  isMapEqual\n}\n"]},"metadata":{},"sourceType":"script"}