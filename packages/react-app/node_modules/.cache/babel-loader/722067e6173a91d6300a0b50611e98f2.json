{"ast":null,"code":"'use strict';\n\nexports.test = function () {\n  return 'document' in global && 'onreadystatechange' in global.document.createElement('script');\n};\n\nexports.install = function (handle) {\n  return function () {\n    // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n    // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n    var scriptEl = global.document.createElement('script');\n\n    scriptEl.onreadystatechange = function () {\n      handle();\n      scriptEl.onreadystatechange = null;\n      scriptEl.parentNode.removeChild(scriptEl);\n      scriptEl = null;\n    };\n\n    global.document.documentElement.appendChild(scriptEl);\n    return handle;\n  };\n};","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/immediate/lib/stateChange.js"],"names":["exports","test","global","document","createElement","install","handle","scriptEl","onreadystatechange","parentNode","removeChild","documentElement","appendChild"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,IAAR,GAAe,YAAY;AACzB,SAAO,cAAcC,MAAd,IAAwB,wBAAwBA,MAAM,CAACC,QAAP,CAAgBC,aAAhB,CAA8B,QAA9B,CAAvD;AACD,CAFD;;AAIAJ,OAAO,CAACK,OAAR,GAAkB,UAAUC,MAAV,EAAkB;AAClC,SAAO,YAAY;AAEjB;AACA;AACA,QAAIC,QAAQ,GAAGL,MAAM,CAACC,QAAP,CAAgBC,aAAhB,CAA8B,QAA9B,CAAf;;AACAG,IAAAA,QAAQ,CAACC,kBAAT,GAA8B,YAAY;AACxCF,MAAAA,MAAM;AAENC,MAAAA,QAAQ,CAACC,kBAAT,GAA8B,IAA9B;AACAD,MAAAA,QAAQ,CAACE,UAAT,CAAoBC,WAApB,CAAgCH,QAAhC;AACAA,MAAAA,QAAQ,GAAG,IAAX;AACD,KAND;;AAOAL,IAAAA,MAAM,CAACC,QAAP,CAAgBQ,eAAhB,CAAgCC,WAAhC,CAA4CL,QAA5C;AAEA,WAAOD,MAAP;AACD,GAfD;AAgBD,CAjBD","sourcesContent":["'use strict';\n\nexports.test = function () {\n  return 'document' in global && 'onreadystatechange' in global.document.createElement('script');\n};\n\nexports.install = function (handle) {\n  return function () {\n\n    // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n    // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n    var scriptEl = global.document.createElement('script');\n    scriptEl.onreadystatechange = function () {\n      handle();\n\n      scriptEl.onreadystatechange = null;\n      scriptEl.parentNode.removeChild(scriptEl);\n      scriptEl = null;\n    };\n    global.document.documentElement.appendChild(scriptEl);\n\n    return handle;\n  };\n};"]},"metadata":{},"sourceType":"script"}