{"ast":null,"code":"'use strict';\n\nconst Key = require('./key');\n\nconst Adapter = require('./adapter'); // Errors\n\n\nconst Errors = require('./errors');\n\nclass MemoryDatastore extends Adapter {\n  constructor() {\n    super();\n    this.data = {};\n  }\n\n  async put(key, val) {\n    // eslint-disable-line require-await\n    this.data[key.toString()] = val;\n  }\n\n  async get(key) {\n    const exists = await this.has(key);\n    if (!exists) throw Errors.notFoundError();\n    return this.data[key.toString()];\n  }\n\n  async has(key) {\n    // eslint-disable-line require-await\n    return this.data[key.toString()] !== undefined;\n  }\n\n  async delete(key) {\n    // eslint-disable-line require-await\n    delete this.data[key.toString()];\n  }\n\n  *_all() {\n    yield* Object.entries(this.data).map(([key, value]) => ({\n      key: new Key(key),\n      value\n    }));\n  }\n\n}\n\nmodule.exports = MemoryDatastore;","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/interface-datastore/src/memory.js"],"names":["Key","require","Adapter","Errors","MemoryDatastore","constructor","data","put","key","val","toString","get","exists","has","notFoundError","undefined","delete","_all","Object","entries","map","value","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,WAAD,CAAvB,C,CAEA;;;AACA,MAAME,MAAM,GAAGF,OAAO,CAAC,UAAD,CAAtB;;AAEA,MAAMG,eAAN,SAA8BF,OAA9B,CAAsC;AACpCG,EAAAA,WAAW,GAAI;AACb;AAEA,SAAKC,IAAL,GAAY,EAAZ;AACD;;AAED,QAAMC,GAAN,CAAWC,GAAX,EAAgBC,GAAhB,EAAqB;AAAE;AACrB,SAAKH,IAAL,CAAUE,GAAG,CAACE,QAAJ,EAAV,IAA4BD,GAA5B;AACD;;AAED,QAAME,GAAN,CAAWH,GAAX,EAAgB;AACd,UAAMI,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASL,GAAT,CAArB;AACA,QAAI,CAACI,MAAL,EAAa,MAAMT,MAAM,CAACW,aAAP,EAAN;AACb,WAAO,KAAKR,IAAL,CAAUE,GAAG,CAACE,QAAJ,EAAV,CAAP;AACD;;AAED,QAAMG,GAAN,CAAWL,GAAX,EAAgB;AAAE;AAChB,WAAO,KAAKF,IAAL,CAAUE,GAAG,CAACE,QAAJ,EAAV,MAA8BK,SAArC;AACD;;AAED,QAAMC,MAAN,CAAcR,GAAd,EAAmB;AAAE;AACnB,WAAO,KAAKF,IAAL,CAAUE,GAAG,CAACE,QAAJ,EAAV,CAAP;AACD;;AAED,GAAEO,IAAF,GAAU;AACR,WAAQC,MAAM,CAACC,OAAP,CAAe,KAAKb,IAApB,EACLc,GADK,CACD,CAAC,CAACZ,GAAD,EAAMa,KAAN,CAAD,MAAmB;AAAEb,MAAAA,GAAG,EAAE,IAAIR,GAAJ,CAAQQ,GAAR,CAAP;AAAqBa,MAAAA;AAArB,KAAnB,CADC,CAAR;AAED;;AA5BmC;;AA+BtCC,MAAM,CAACC,OAAP,GAAiBnB,eAAjB","sourcesContent":["'use strict'\n\nconst Key = require('./key')\nconst Adapter = require('./adapter')\n\n// Errors\nconst Errors = require('./errors')\n\nclass MemoryDatastore extends Adapter {\n  constructor () {\n    super()\n\n    this.data = {}\n  }\n\n  async put (key, val) { // eslint-disable-line require-await\n    this.data[key.toString()] = val\n  }\n\n  async get (key) {\n    const exists = await this.has(key)\n    if (!exists) throw Errors.notFoundError()\n    return this.data[key.toString()]\n  }\n\n  async has (key) { // eslint-disable-line require-await\n    return this.data[key.toString()] !== undefined\n  }\n\n  async delete (key) { // eslint-disable-line require-await\n    delete this.data[key.toString()]\n  }\n\n  * _all () {\n    yield * Object.entries(this.data)\n      .map(([key, value]) => ({ key: new Key(key), value }))\n  }\n}\n\nmodule.exports = MemoryDatastore\n"]},"metadata":{},"sourceType":"script"}