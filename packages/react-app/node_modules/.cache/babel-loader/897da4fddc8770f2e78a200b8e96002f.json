{"ast":null,"code":"'use strict';\n\nconst T = require('../../message').TYPES;\n\nmodule.exports = dht => {\n  const handlers = {\n    [T.GET_VALUE]: require('./get-value')(dht),\n    [T.PUT_VALUE]: require('./put-value')(dht),\n    [T.FIND_NODE]: require('./find-node')(dht),\n    [T.ADD_PROVIDER]: require('./add-provider')(dht),\n    [T.GET_PROVIDERS]: require('./get-providers')(dht),\n    [T.PING]: require('./ping')(dht)\n  };\n  /**\n   * Get the message handler matching the passed in type.\n   *\n   * @param {number} type\n   *\n   * @returns {function(PeerId, Message, function(Error, Message))}\n   *\n   * @private\n   */\n\n  return function getMessageHandler(type) {\n    return handlers[type];\n  };\n};","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/libp2p-kad-dht/src/rpc/handlers/index.js"],"names":["T","require","TYPES","module","exports","dht","handlers","GET_VALUE","PUT_VALUE","FIND_NODE","ADD_PROVIDER","GET_PROVIDERS","PING","getMessageHandler","type"],"mappings":"AAAA;;AAEA,MAAMA,CAAC,GAAGC,OAAO,CAAC,eAAD,CAAP,CAAyBC,KAAnC;;AAEAC,MAAM,CAACC,OAAP,GAAkBC,GAAD,IAAS;AACxB,QAAMC,QAAQ,GAAG;AACf,KAACN,CAAC,CAACO,SAAH,GAAeN,OAAO,CAAC,aAAD,CAAP,CAAuBI,GAAvB,CADA;AAEf,KAACL,CAAC,CAACQ,SAAH,GAAeP,OAAO,CAAC,aAAD,CAAP,CAAuBI,GAAvB,CAFA;AAGf,KAACL,CAAC,CAACS,SAAH,GAAeR,OAAO,CAAC,aAAD,CAAP,CAAuBI,GAAvB,CAHA;AAIf,KAACL,CAAC,CAACU,YAAH,GAAkBT,OAAO,CAAC,gBAAD,CAAP,CAA0BI,GAA1B,CAJH;AAKf,KAACL,CAAC,CAACW,aAAH,GAAmBV,OAAO,CAAC,iBAAD,CAAP,CAA2BI,GAA3B,CALJ;AAMf,KAACL,CAAC,CAACY,IAAH,GAAUX,OAAO,CAAC,QAAD,CAAP,CAAkBI,GAAlB;AANK,GAAjB;AASA;;;;;;;;;;AASA,SAAO,SAASQ,iBAAT,CAA4BC,IAA5B,EAAkC;AACvC,WAAOR,QAAQ,CAACQ,IAAD,CAAf;AACD,GAFD;AAGD,CAtBD","sourcesContent":["'use strict'\n\nconst T = require('../../message').TYPES\n\nmodule.exports = (dht) => {\n  const handlers = {\n    [T.GET_VALUE]: require('./get-value')(dht),\n    [T.PUT_VALUE]: require('./put-value')(dht),\n    [T.FIND_NODE]: require('./find-node')(dht),\n    [T.ADD_PROVIDER]: require('./add-provider')(dht),\n    [T.GET_PROVIDERS]: require('./get-providers')(dht),\n    [T.PING]: require('./ping')(dht)\n  }\n\n  /**\n   * Get the message handler matching the passed in type.\n   *\n   * @param {number} type\n   *\n   * @returns {function(PeerId, Message, function(Error, Message))}\n   *\n   * @private\n   */\n  return function getMessageHandler (type) {\n    return handlers[type]\n  }\n}\n"]},"metadata":{},"sourceType":"script"}