{"ast":null,"code":"module.exports = dist;\n\nfunction dist(a, b) {\n  if (a.length !== b.length) throw new Error('Inputs should have the same length');\n  var result = Buffer.allocUnsafe(a.length);\n\n  for (var i = 0; i < a.length; i++) result[i] = a[i] ^ b[i];\n\n  return result;\n}\n\ndist.compare = function compare(a, b) {\n  if (a.length !== b.length) throw new Error('Inputs should have the same length');\n\n  for (var i = 0; i < a.length; i++) {\n    if (a[i] === b[i]) continue;\n    return a[i] < b[i] ? -1 : 1;\n  }\n\n  return 0;\n};\n\ndist.gt = function gt(a, b) {\n  return dist.compare(a, b) === 1;\n};\n\ndist.lt = function lt(a, b) {\n  return dist.compare(a, b) === -1;\n};\n\ndist.eq = function eq(a, b) {\n  return dist.compare(a, b) === 0;\n};","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/xor-distance/index.js"],"names":["module","exports","dist","a","b","length","Error","result","Buffer","allocUnsafe","i","compare","gt","lt","eq"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiBC,IAAjB;;AAEA,SAASA,IAAT,CAAeC,CAAf,EAAkBC,CAAlB,EAAqB;AACnB,MAAID,CAAC,CAACE,MAAF,KAAaD,CAAC,CAACC,MAAnB,EAA2B,MAAM,IAAIC,KAAJ,CAAU,oCAAV,CAAN;AAC3B,MAAIC,MAAM,GAAGC,MAAM,CAACC,WAAP,CAAmBN,CAAC,CAACE,MAArB,CAAb;;AACA,OAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,CAAC,CAACE,MAAtB,EAA8BK,CAAC,EAA/B,EAAmCH,MAAM,CAACG,CAAD,CAAN,GAAYP,CAAC,CAACO,CAAD,CAAD,GAAON,CAAC,CAACM,CAAD,CAApB;;AACnC,SAAOH,MAAP;AACD;;AAEDL,IAAI,CAACS,OAAL,GAAe,SAASA,OAAT,CAAkBR,CAAlB,EAAqBC,CAArB,EAAwB;AACrC,MAAID,CAAC,CAACE,MAAF,KAAaD,CAAC,CAACC,MAAnB,EAA2B,MAAM,IAAIC,KAAJ,CAAU,oCAAV,CAAN;;AAC3B,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,CAAC,CAACE,MAAtB,EAA8BK,CAAC,EAA/B,EAAmC;AACjC,QAAIP,CAAC,CAACO,CAAD,CAAD,KAASN,CAAC,CAACM,CAAD,CAAd,EAAmB;AACnB,WAAOP,CAAC,CAACO,CAAD,CAAD,GAAON,CAAC,CAACM,CAAD,CAAR,GAAc,CAAC,CAAf,GAAmB,CAA1B;AACD;;AACD,SAAO,CAAP;AACD,CAPD;;AASAR,IAAI,CAACU,EAAL,GAAU,SAASA,EAAT,CAAaT,CAAb,EAAgBC,CAAhB,EAAmB;AAC3B,SAAOF,IAAI,CAACS,OAAL,CAAaR,CAAb,EAAgBC,CAAhB,MAAuB,CAA9B;AACD,CAFD;;AAIAF,IAAI,CAACW,EAAL,GAAU,SAASA,EAAT,CAAaV,CAAb,EAAgBC,CAAhB,EAAmB;AAC3B,SAAOF,IAAI,CAACS,OAAL,CAAaR,CAAb,EAAgBC,CAAhB,MAAuB,CAAC,CAA/B;AACD,CAFD;;AAIAF,IAAI,CAACY,EAAL,GAAU,SAASA,EAAT,CAAaX,CAAb,EAAgBC,CAAhB,EAAmB;AAC3B,SAAOF,IAAI,CAACS,OAAL,CAAaR,CAAb,EAAgBC,CAAhB,MAAuB,CAA9B;AACD,CAFD","sourcesContent":["module.exports = dist\n\nfunction dist (a, b) {\n  if (a.length !== b.length) throw new Error('Inputs should have the same length')\n  var result = Buffer.allocUnsafe(a.length)\n  for (var i = 0; i < a.length; i++) result[i] = a[i] ^ b[i]\n  return result\n}\n\ndist.compare = function compare (a, b) {\n  if (a.length !== b.length) throw new Error('Inputs should have the same length')\n  for (var i = 0; i < a.length; i++) {\n    if (a[i] === b[i]) continue\n    return a[i] < b[i] ? -1 : 1\n  }\n  return 0\n}\n\ndist.gt = function gt (a, b) {\n  return dist.compare(a, b) === 1\n}\n\ndist.lt = function lt (a, b) {\n  return dist.compare(a, b) === -1\n}\n\ndist.eq = function eq (a, b) {\n  return dist.compare(a, b) === 0\n}\n"]},"metadata":{},"sourceType":"script"}