{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _slicedToArray = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _createForOfIteratorHelper = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _asyncToGenerator = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _require = require('../../utils'),\n    withTimeoutOption = _require.withTimeoutOption;\n\nmodule.exports = function (_ref) {\n  var libp2p = _ref.libp2p;\n  return withTimeoutOption( /*#__PURE__*/function () {\n    var _addrs = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(options) {\n      var peers, _iterator, _step, _step$value, peerId, peer;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // eslint-disable-line require-await\n              peers = [];\n              _iterator = _createForOfIteratorHelper(libp2p.peerStore.peers.entries(options));\n\n              try {\n                for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                  _step$value = _slicedToArray(_step.value, 2), peerId = _step$value[0], peer = _step$value[1];\n                  peers.push({\n                    id: peerId,\n                    addrs: peer.addresses.map(function (mi) {\n                      return mi.multiaddr;\n                    })\n                  });\n                }\n              } catch (err) {\n                _iterator.e(err);\n              } finally {\n                _iterator.f();\n              }\n\n              return _context.abrupt(\"return\", peers);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function addrs(_x) {\n      return _addrs.apply(this, arguments);\n    }\n\n    return addrs;\n  }());\n};","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/ipfs/src/core/components/swarm/addrs.js"],"names":["require","withTimeoutOption","module","exports","libp2p","options","peers","peerStore","entries","peerId","peer","push","id","addrs","addresses","map","mi","multiaddr"],"mappings":"AAAA;;;;;;;;;;eAE8BA,OAAO,CAAC,aAAD,C;IAA7BC,iB,YAAAA,iB;;AAERC,MAAM,CAACC,OAAP,GAAiB,gBAAgB;AAAA,MAAbC,MAAa,QAAbA,MAAa;AAC/B,SAAOH,iBAAiB;AAAA,0EAAC,iBAAsBI,OAAtB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAiC;AAClDC,cAAAA,KADiB,GACT,EADS;AAAA,qDAEMF,MAAM,CAACG,SAAP,CAAiBD,KAAjB,CAAuBE,OAAvB,CAA+BH,OAA/B,CAFN;;AAAA;AAEvB,oEAAsE;AAAA,gEAA1DI,MAA0D,mBAAlDC,IAAkD;AACpEJ,kBAAAA,KAAK,CAACK,IAAN,CAAW;AACTC,oBAAAA,EAAE,EAAEH,MADK;AAETI,oBAAAA,KAAK,EAAEH,IAAI,CAACI,SAAL,CAAeC,GAAf,CAAmB,UAACC,EAAD;AAAA,6BAAQA,EAAE,CAACC,SAAX;AAAA,qBAAnB;AAFE,mBAAX;AAID;AAPsB;AAAA;AAAA;AAAA;AAAA;;AAAA,+CAQhBX,KARgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA,aAAgBO,KAAhB;AAAA;AAAA;;AAAA,WAAgBA,KAAhB;AAAA,MAAxB;AAUD,CAXD","sourcesContent":["'use strict'\n\nconst { withTimeoutOption } = require('../../utils')\n\nmodule.exports = ({ libp2p }) => {\n  return withTimeoutOption(async function addrs (options) { // eslint-disable-line require-await\n    const peers = []\n    for (const [peerId, peer] of libp2p.peerStore.peers.entries(options)) {\n      peers.push({\n        id: peerId,\n        addrs: peer.addresses.map((mi) => mi.multiaddr)\n      })\n    }\n    return peers\n  })\n}\n"]},"metadata":{},"sourceType":"script"}