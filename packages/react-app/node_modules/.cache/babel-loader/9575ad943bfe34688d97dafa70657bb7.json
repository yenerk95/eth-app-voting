{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar DAGLink = require('../dag-link/dagLink');\n\nvar genCid = require('../genCid');\n/*\n * toDAGLink converts a DAGNode to a DAGLink\n */\n\n\nvar toDAGLink = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(node) {\n    var options,\n        nodeCid,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            _context.next = 3;\n            return genCid.cid(node.serialize(), options);\n\n          case 3:\n            nodeCid = _context.sent;\n            return _context.abrupt(\"return\", new DAGLink(options.name || '', node.size, nodeCid));\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function toDAGLink(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports = toDAGLink;","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/ipld-dag-pb/src/dag-node/toDagLink.js"],"names":["DAGLink","require","genCid","toDAGLink","node","options","cid","serialize","nodeCid","name","size","module","exports"],"mappings":"AAAA;;;;;;AAEA,IAAMA,OAAO,GAAGC,OAAO,CAAC,qBAAD,CAAvB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,WAAD,CAAtB;AAEA;;;;;AAGA,IAAME,SAAS;AAAA,sEAAG,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAaC,YAAAA,OAAb,2DAAuB,EAAvB;AAAA;AAAA,mBACMH,MAAM,CAACI,GAAP,CAAWF,IAAI,CAACG,SAAL,EAAX,EAA6BF,OAA7B,CADN;;AAAA;AACVG,YAAAA,OADU;AAAA,6CAET,IAAIR,OAAJ,CAAYK,OAAO,CAACI,IAAR,IAAgB,EAA5B,EAAgCL,IAAI,CAACM,IAArC,EAA2CF,OAA3C,CAFS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATL,SAAS;AAAA;AAAA;AAAA,GAAf;;AAKAQ,MAAM,CAACC,OAAP,GAAiBT,SAAjB","sourcesContent":["'use strict'\n\nconst DAGLink = require('../dag-link/dagLink')\nconst genCid = require('../genCid')\n\n/*\n * toDAGLink converts a DAGNode to a DAGLink\n */\nconst toDAGLink = async (node, options = {}) => {\n  const nodeCid = await genCid.cid(node.serialize(), options)\n  return new DAGLink(options.name || '', node.size, nodeCid)\n}\n\nmodule.exports = toDAGLink\n"]},"metadata":{},"sourceType":"script"}