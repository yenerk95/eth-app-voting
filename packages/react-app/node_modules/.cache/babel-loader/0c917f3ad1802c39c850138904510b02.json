{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shuffle = void 0;\n/**\n * Pseudo-randomly shuffles an array\n *\n * Mutates the input array\n *\n * @param {Array} arr\n * @returns {Array}\n */\n\nfunction shuffle(arr) {\n  if (arr.length <= 1) {\n    return arr;\n  }\n\n  const randInt = () => {\n    return Math.floor(Math.random() * Math.floor(arr.length));\n  };\n\n  for (let i = 0; i < arr.length; i++) {\n    const j = randInt();\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n  }\n\n  return arr;\n}\n\nexports.shuffle = shuffle;","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/libp2p-gossipsub/src/utils/shuffle.js"],"names":["Object","defineProperty","exports","value","shuffle","arr","length","randInt","Math","floor","random","i","j","tmp"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;AACA;;;;;;;;;AAQA,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAClB,MAAIA,GAAG,CAACC,MAAJ,IAAc,CAAlB,EAAqB;AACjB,WAAOD,GAAP;AACH;;AACD,QAAME,OAAO,GAAG,MAAM;AAClB,WAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACC,KAAL,CAAWJ,GAAG,CAACC,MAAf,CAA3B,CAAP;AACH,GAFD;;AAGA,OAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,GAAG,CAACC,MAAxB,EAAgCK,CAAC,EAAjC,EAAqC;AACjC,UAAMC,CAAC,GAAGL,OAAO,EAAjB;AACA,UAAMM,GAAG,GAAGR,GAAG,CAACM,CAAD,CAAf;AACAN,IAAAA,GAAG,CAACM,CAAD,CAAH,GAASN,GAAG,CAACO,CAAD,CAAZ;AACAP,IAAAA,GAAG,CAACO,CAAD,CAAH,GAASC,GAAT;AACH;;AACD,SAAOR,GAAP;AACH;;AACDH,OAAO,CAACE,OAAR,GAAkBA,OAAlB","sourcesContent":["'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.shuffle = void 0;\n/**\n * Pseudo-randomly shuffles an array\n *\n * Mutates the input array\n *\n * @param {Array} arr\n * @returns {Array}\n */\nfunction shuffle(arr) {\n    if (arr.length <= 1) {\n        return arr;\n    }\n    const randInt = () => {\n        return Math.floor(Math.random() * Math.floor(arr.length));\n    };\n    for (let i = 0; i < arr.length; i++) {\n        const j = randInt();\n        const tmp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = tmp;\n    }\n    return arr;\n}\nexports.shuffle = shuffle;\n"]},"metadata":{},"sourceType":"script"}