{"ast":null,"code":"const FIFO = require('fast-fifo');\n\nmodule.exports = options => {\n  options = options || {};\n  let onEnd;\n\n  if (typeof options === 'function') {\n    onEnd = options;\n    options = {};\n  } else {\n    onEnd = options.onEnd;\n  }\n\n  let buffer = new FIFO();\n  let pushable, onNext, ended;\n\n  const waitNext = () => {\n    if (!buffer.isEmpty()) {\n      if (options.writev) {\n        let next;\n        const values = [];\n\n        while (!buffer.isEmpty()) {\n          next = buffer.shift();\n          if (next.error) throw next.error;\n          values.push(next.value);\n        }\n\n        return {\n          done: next.done,\n          value: values\n        };\n      }\n\n      const next = buffer.shift();\n      if (next.error) throw next.error;\n      return next;\n    }\n\n    if (ended) return {\n      done: true\n    };\n    return new Promise((resolve, reject) => {\n      onNext = next => {\n        onNext = null;\n\n        if (next.error) {\n          reject(next.error);\n        } else {\n          if (options.writev && !next.done) {\n            resolve({\n              done: next.done,\n              value: [next.value]\n            });\n          } else {\n            resolve(next);\n          }\n        }\n\n        return pushable;\n      };\n    });\n  };\n\n  const bufferNext = next => {\n    if (onNext) return onNext(next);\n    buffer.push(next);\n    return pushable;\n  };\n\n  const bufferError = err => {\n    buffer = new FIFO();\n    if (onNext) return onNext({\n      error: err\n    });\n    buffer.push({\n      error: err\n    });\n    return pushable;\n  };\n\n  const push = value => {\n    if (ended) return pushable;\n    return bufferNext({\n      done: false,\n      value\n    });\n  };\n\n  const end = err => {\n    if (ended) return pushable;\n    ended = true;\n    return err ? bufferError(err) : bufferNext({\n      done: true\n    });\n  };\n\n  const _return = () => {\n    buffer = new FIFO();\n    end();\n    return {\n      done: true\n    };\n  };\n\n  const _throw = err => {\n    end(err);\n    return {\n      done: true\n    };\n  };\n\n  pushable = {\n    [Symbol.asyncIterator]() {\n      return this;\n    },\n\n    next: waitNext,\n    return: _return,\n    throw: _throw,\n    push,\n    end\n  };\n  if (!onEnd) return pushable;\n  const _pushable = pushable;\n  pushable = {\n    [Symbol.asyncIterator]() {\n      return this;\n    },\n\n    next() {\n      return _pushable.next();\n    },\n\n    throw(err) {\n      _pushable.throw(err);\n\n      if (onEnd) {\n        onEnd(err);\n        onEnd = null;\n      }\n\n      return {\n        done: true\n      };\n    },\n\n    return() {\n      _pushable.return();\n\n      if (onEnd) {\n        onEnd();\n        onEnd = null;\n      }\n\n      return {\n        done: true\n      };\n    },\n\n    push,\n\n    end(err) {\n      _pushable.end(err);\n\n      if (onEnd) {\n        onEnd(err);\n        onEnd = null;\n      }\n\n      return pushable;\n    }\n\n  };\n  return pushable;\n};","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/it-pushable/index.js"],"names":["FIFO","require","module","exports","options","onEnd","buffer","pushable","onNext","ended","waitNext","isEmpty","writev","next","values","shift","error","push","value","done","Promise","resolve","reject","bufferNext","bufferError","err","end","_return","_throw","Symbol","asyncIterator","return","throw","_pushable"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,WAAD,CAApB;;AAEAC,MAAM,CAACC,OAAP,GAAkBC,OAAD,IAAa;AAC5BA,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,MAAIC,KAAJ;;AAEA,MAAI,OAAOD,OAAP,KAAmB,UAAvB,EAAmC;AACjCC,IAAAA,KAAK,GAAGD,OAAR;AACAA,IAAAA,OAAO,GAAG,EAAV;AACD,GAHD,MAGO;AACLC,IAAAA,KAAK,GAAGD,OAAO,CAACC,KAAhB;AACD;;AAED,MAAIC,MAAM,GAAG,IAAIN,IAAJ,EAAb;AACA,MAAIO,QAAJ,EAAcC,MAAd,EAAsBC,KAAtB;;AAEA,QAAMC,QAAQ,GAAG,MAAM;AACrB,QAAI,CAACJ,MAAM,CAACK,OAAP,EAAL,EAAuB;AACrB,UAAIP,OAAO,CAACQ,MAAZ,EAAoB;AAClB,YAAIC,IAAJ;AACA,cAAMC,MAAM,GAAG,EAAf;;AACA,eAAO,CAACR,MAAM,CAACK,OAAP,EAAR,EAA0B;AACxBE,UAAAA,IAAI,GAAGP,MAAM,CAACS,KAAP,EAAP;AACA,cAAIF,IAAI,CAACG,KAAT,EAAgB,MAAMH,IAAI,CAACG,KAAX;AAChBF,UAAAA,MAAM,CAACG,IAAP,CAAYJ,IAAI,CAACK,KAAjB;AACD;;AACD,eAAO;AAAEC,UAAAA,IAAI,EAAEN,IAAI,CAACM,IAAb;AAAmBD,UAAAA,KAAK,EAAEJ;AAA1B,SAAP;AACD;;AAED,YAAMD,IAAI,GAAGP,MAAM,CAACS,KAAP,EAAb;AACA,UAAIF,IAAI,CAACG,KAAT,EAAgB,MAAMH,IAAI,CAACG,KAAX;AAChB,aAAOH,IAAP;AACD;;AAED,QAAIJ,KAAJ,EAAW,OAAO;AAAEU,MAAAA,IAAI,EAAE;AAAR,KAAP;AAEX,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCd,MAAAA,MAAM,GAAGK,IAAI,IAAI;AACfL,QAAAA,MAAM,GAAG,IAAT;;AACA,YAAIK,IAAI,CAACG,KAAT,EAAgB;AACdM,UAAAA,MAAM,CAACT,IAAI,CAACG,KAAN,CAAN;AACD,SAFD,MAEO;AACL,cAAIZ,OAAO,CAACQ,MAAR,IAAkB,CAACC,IAAI,CAACM,IAA5B,EAAkC;AAChCE,YAAAA,OAAO,CAAC;AAAEF,cAAAA,IAAI,EAAEN,IAAI,CAACM,IAAb;AAAmBD,cAAAA,KAAK,EAAE,CAACL,IAAI,CAACK,KAAN;AAA1B,aAAD,CAAP;AACD,WAFD,MAEO;AACLG,YAAAA,OAAO,CAACR,IAAD,CAAP;AACD;AACF;;AACD,eAAON,QAAP;AACD,OAZD;AAaD,KAdM,CAAP;AAeD,GAnCD;;AAqCA,QAAMgB,UAAU,GAAGV,IAAI,IAAI;AACzB,QAAIL,MAAJ,EAAY,OAAOA,MAAM,CAACK,IAAD,CAAb;AACZP,IAAAA,MAAM,CAACW,IAAP,CAAYJ,IAAZ;AACA,WAAON,QAAP;AACD,GAJD;;AAMA,QAAMiB,WAAW,GAAGC,GAAG,IAAI;AACzBnB,IAAAA,MAAM,GAAG,IAAIN,IAAJ,EAAT;AACA,QAAIQ,MAAJ,EAAY,OAAOA,MAAM,CAAC;AAAEQ,MAAAA,KAAK,EAAES;AAAT,KAAD,CAAb;AACZnB,IAAAA,MAAM,CAACW,IAAP,CAAY;AAAED,MAAAA,KAAK,EAAES;AAAT,KAAZ;AACA,WAAOlB,QAAP;AACD,GALD;;AAOA,QAAMU,IAAI,GAAGC,KAAK,IAAI;AACpB,QAAIT,KAAJ,EAAW,OAAOF,QAAP;AACX,WAAOgB,UAAU,CAAC;AAAEJ,MAAAA,IAAI,EAAE,KAAR;AAAeD,MAAAA;AAAf,KAAD,CAAjB;AACD,GAHD;;AAIA,QAAMQ,GAAG,GAAGD,GAAG,IAAI;AACjB,QAAIhB,KAAJ,EAAW,OAAOF,QAAP;AACXE,IAAAA,KAAK,GAAG,IAAR;AACA,WAAOgB,GAAG,GAAGD,WAAW,CAACC,GAAD,CAAd,GAAsBF,UAAU,CAAC;AAAEJ,MAAAA,IAAI,EAAE;AAAR,KAAD,CAA1C;AACD,GAJD;;AAKA,QAAMQ,OAAO,GAAG,MAAM;AACpBrB,IAAAA,MAAM,GAAG,IAAIN,IAAJ,EAAT;AACA0B,IAAAA,GAAG;AACH,WAAO;AAAEP,MAAAA,IAAI,EAAE;AAAR,KAAP;AACD,GAJD;;AAKA,QAAMS,MAAM,GAAGH,GAAG,IAAI;AACpBC,IAAAA,GAAG,CAACD,GAAD,CAAH;AACA,WAAO;AAAEN,MAAAA,IAAI,EAAE;AAAR,KAAP;AACD,GAHD;;AAKAZ,EAAAA,QAAQ,GAAG;AACT,KAACsB,MAAM,CAACC,aAAR,IAA0B;AAAE,aAAO,IAAP;AAAa,KADhC;;AAETjB,IAAAA,IAAI,EAAEH,QAFG;AAGTqB,IAAAA,MAAM,EAAEJ,OAHC;AAITK,IAAAA,KAAK,EAAEJ,MAJE;AAKTX,IAAAA,IALS;AAMTS,IAAAA;AANS,GAAX;AASA,MAAI,CAACrB,KAAL,EAAY,OAAOE,QAAP;AAEZ,QAAM0B,SAAS,GAAG1B,QAAlB;AAEAA,EAAAA,QAAQ,GAAG;AACT,KAACsB,MAAM,CAACC,aAAR,IAA0B;AAAE,aAAO,IAAP;AAAa,KADhC;;AAETjB,IAAAA,IAAI,GAAI;AACN,aAAOoB,SAAS,CAACpB,IAAV,EAAP;AACD,KAJQ;;AAKTmB,IAAAA,KAAK,CAAEP,GAAF,EAAO;AACVQ,MAAAA,SAAS,CAACD,KAAV,CAAgBP,GAAhB;;AACA,UAAIpB,KAAJ,EAAW;AACTA,QAAAA,KAAK,CAACoB,GAAD,CAAL;AACApB,QAAAA,KAAK,GAAG,IAAR;AACD;;AACD,aAAO;AAAEc,QAAAA,IAAI,EAAE;AAAR,OAAP;AACD,KAZQ;;AAaTY,IAAAA,MAAM,GAAI;AACRE,MAAAA,SAAS,CAACF,MAAV;;AACA,UAAI1B,KAAJ,EAAW;AACTA,QAAAA,KAAK;AACLA,QAAAA,KAAK,GAAG,IAAR;AACD;;AACD,aAAO;AAAEc,QAAAA,IAAI,EAAE;AAAR,OAAP;AACD,KApBQ;;AAqBTF,IAAAA,IArBS;;AAsBTS,IAAAA,GAAG,CAAED,GAAF,EAAO;AACRQ,MAAAA,SAAS,CAACP,GAAV,CAAcD,GAAd;;AACA,UAAIpB,KAAJ,EAAW;AACTA,QAAAA,KAAK,CAACoB,GAAD,CAAL;AACApB,QAAAA,KAAK,GAAG,IAAR;AACD;;AACD,aAAOE,QAAP;AACD;;AA7BQ,GAAX;AAgCA,SAAOA,QAAP;AACD,CAjID","sourcesContent":["const FIFO = require('fast-fifo')\n\nmodule.exports = (options) => {\n  options = options || {}\n  let onEnd\n\n  if (typeof options === 'function') {\n    onEnd = options\n    options = {}\n  } else {\n    onEnd = options.onEnd\n  }\n\n  let buffer = new FIFO()\n  let pushable, onNext, ended\n\n  const waitNext = () => {\n    if (!buffer.isEmpty()) {\n      if (options.writev) {\n        let next\n        const values = []\n        while (!buffer.isEmpty()) {\n          next = buffer.shift()\n          if (next.error) throw next.error\n          values.push(next.value)\n        }\n        return { done: next.done, value: values }\n      }\n\n      const next = buffer.shift()\n      if (next.error) throw next.error\n      return next\n    }\n\n    if (ended) return { done: true }\n\n    return new Promise((resolve, reject) => {\n      onNext = next => {\n        onNext = null\n        if (next.error) {\n          reject(next.error)\n        } else {\n          if (options.writev && !next.done) {\n            resolve({ done: next.done, value: [next.value] })\n          } else {\n            resolve(next)\n          }\n        }\n        return pushable\n      }\n    })\n  }\n\n  const bufferNext = next => {\n    if (onNext) return onNext(next)\n    buffer.push(next)\n    return pushable\n  }\n\n  const bufferError = err => {\n    buffer = new FIFO()\n    if (onNext) return onNext({ error: err })\n    buffer.push({ error: err })\n    return pushable\n  }\n\n  const push = value => {\n    if (ended) return pushable\n    return bufferNext({ done: false, value })\n  }\n  const end = err => {\n    if (ended) return pushable\n    ended = true\n    return err ? bufferError(err) : bufferNext({ done: true })\n  }\n  const _return = () => {\n    buffer = new FIFO()\n    end()\n    return { done: true }\n  }\n  const _throw = err => {\n    end(err)\n    return { done: true }\n  }\n\n  pushable = {\n    [Symbol.asyncIterator] () { return this },\n    next: waitNext,\n    return: _return,\n    throw: _throw,\n    push,\n    end\n  }\n\n  if (!onEnd) return pushable\n\n  const _pushable = pushable\n\n  pushable = {\n    [Symbol.asyncIterator] () { return this },\n    next () {\n      return _pushable.next()\n    },\n    throw (err) {\n      _pushable.throw(err)\n      if (onEnd) {\n        onEnd(err)\n        onEnd = null\n      }\n      return { done: true }\n    },\n    return () {\n      _pushable.return()\n      if (onEnd) {\n        onEnd()\n        onEnd = null\n      }\n      return { done: true }\n    },\n    push,\n    end (err) {\n      _pushable.end(err)\n      if (onEnd) {\n        onEnd(err)\n        onEnd = null\n      }\n      return pushable\n    }\n  }\n\n  return pushable\n}\n"]},"metadata":{},"sourceType":"script"}