{"ast":null,"code":"'use strict';\n\nconst dagPB = require('ipld-dag-pb');\n\nconst {\n  withTimeoutOption\n} = require('../../utils');\n\nmodule.exports = ({\n  ipld,\n  preload\n}) => {\n  const get = require('./get')({\n    ipld,\n    preload\n  });\n\n  return withTimeoutOption(async function stat(multihash, options) {\n    options = options || {};\n    const node = await get(multihash, options);\n    const serialized = dagPB.util.serialize(node);\n    const cid = await dagPB.util.cid(serialized, {\n      cidVersion: 0\n    });\n    const blockSize = serialized.length;\n    const linkLength = node.Links.reduce((a, l) => a + l.Tsize, 0);\n    return {\n      Hash: cid.toBaseEncodedString(),\n      NumLinks: node.Links.length,\n      BlockSize: blockSize,\n      LinksSize: blockSize - node.Data.length,\n      DataSize: node.Data.length,\n      CumulativeSize: blockSize + linkLength\n    };\n  });\n};","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/ipfs/src/core/components/object/stat.js"],"names":["dagPB","require","withTimeoutOption","module","exports","ipld","preload","get","stat","multihash","options","node","serialized","util","serialize","cid","cidVersion","blockSize","length","linkLength","Links","reduce","a","l","Tsize","Hash","toBaseEncodedString","NumLinks","BlockSize","LinksSize","Data","DataSize","CumulativeSize"],"mappings":"AAAA;;AAEA,MAAMA,KAAK,GAAGC,OAAO,CAAC,aAAD,CAArB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAwBD,OAAO,CAAC,aAAD,CAArC;;AAEAE,MAAM,CAACC,OAAP,GAAiB,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AACtC,QAAMC,GAAG,GAAGN,OAAO,CAAC,OAAD,CAAP,CAAiB;AAAEI,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAjB,CAAZ;;AACA,SAAOJ,iBAAiB,CAAC,eAAeM,IAAf,CAAqBC,SAArB,EAAgCC,OAAhC,EAAyC;AAChEA,IAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AAEA,UAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACE,SAAD,EAAYC,OAAZ,CAAtB;AACA,UAAME,UAAU,GAAGZ,KAAK,CAACa,IAAN,CAAWC,SAAX,CAAqBH,IAArB,CAAnB;AACA,UAAMI,GAAG,GAAG,MAAMf,KAAK,CAACa,IAAN,CAAWE,GAAX,CAAeH,UAAf,EAA2B;AAC3CI,MAAAA,UAAU,EAAE;AAD+B,KAA3B,CAAlB;AAIA,UAAMC,SAAS,GAAGL,UAAU,CAACM,MAA7B;AACA,UAAMC,UAAU,GAAGR,IAAI,CAACS,KAAL,CAAWC,MAAX,CAAkB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAAC,CAACC,KAAlC,EAAyC,CAAzC,CAAnB;AAEA,WAAO;AACLC,MAAAA,IAAI,EAAEV,GAAG,CAACW,mBAAJ,EADD;AAELC,MAAAA,QAAQ,EAAEhB,IAAI,CAACS,KAAL,CAAWF,MAFhB;AAGLU,MAAAA,SAAS,EAAEX,SAHN;AAILY,MAAAA,SAAS,EAAEZ,SAAS,GAAGN,IAAI,CAACmB,IAAL,CAAUZ,MAJ5B;AAKLa,MAAAA,QAAQ,EAAEpB,IAAI,CAACmB,IAAL,CAAUZ,MALf;AAMLc,MAAAA,cAAc,EAAEf,SAAS,GAAGE;AANvB,KAAP;AAQD,GApBuB,CAAxB;AAqBD,CAvBD","sourcesContent":["'use strict'\n\nconst dagPB = require('ipld-dag-pb')\nconst { withTimeoutOption } = require('../../utils')\n\nmodule.exports = ({ ipld, preload }) => {\n  const get = require('./get')({ ipld, preload })\n  return withTimeoutOption(async function stat (multihash, options) {\n    options = options || {}\n\n    const node = await get(multihash, options)\n    const serialized = dagPB.util.serialize(node)\n    const cid = await dagPB.util.cid(serialized, {\n      cidVersion: 0\n    })\n\n    const blockSize = serialized.length\n    const linkLength = node.Links.reduce((a, l) => a + l.Tsize, 0)\n\n    return {\n      Hash: cid.toBaseEncodedString(),\n      NumLinks: node.Links.length,\n      BlockSize: blockSize,\n      LinksSize: blockSize - node.Data.length,\n      DataSize: node.Data.length,\n      CumulativeSize: blockSize + linkLength\n    }\n  })\n}\n"]},"metadata":{},"sourceType":"script"}