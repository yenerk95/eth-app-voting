{"ast":null,"code":"'use strict';\n\nconst batch = require('it-batch');\n\nasync function* balanced(source, reduce, options) {\n  yield await reduceToParents(source, reduce, options);\n}\n\nasync function reduceToParents(source, reduce, options) {\n  const roots = [];\n\n  for await (const chunked of batch(source, options.maxChildrenPerNode)) {\n    roots.push(await reduce(chunked));\n  }\n\n  if (roots.length > 1) {\n    return reduceToParents(roots, reduce, options);\n  }\n\n  return roots[0];\n}\n\nmodule.exports = balanced;","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/ipfs-unixfs-importer/src/dag-builder/file/balanced.js"],"names":["batch","require","balanced","source","reduce","options","reduceToParents","roots","chunked","maxChildrenPerNode","push","length","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,KAAK,GAAGC,OAAO,CAAC,UAAD,CAArB;;AAEA,gBAAiBC,QAAjB,CAA2BC,MAA3B,EAAmCC,MAAnC,EAA2CC,OAA3C,EAAoD;AAClD,QAAM,MAAMC,eAAe,CAACH,MAAD,EAASC,MAAT,EAAiBC,OAAjB,CAA3B;AACD;;AAED,eAAeC,eAAf,CAAgCH,MAAhC,EAAwCC,MAAxC,EAAgDC,OAAhD,EAAyD;AACvD,QAAME,KAAK,GAAG,EAAd;;AAEA,aAAW,MAAMC,OAAjB,IAA4BR,KAAK,CAACG,MAAD,EAASE,OAAO,CAACI,kBAAjB,CAAjC,EAAuE;AACrEF,IAAAA,KAAK,CAACG,IAAN,CAAW,MAAMN,MAAM,CAACI,OAAD,CAAvB;AACD;;AAED,MAAID,KAAK,CAACI,MAAN,GAAe,CAAnB,EAAsB;AACpB,WAAOL,eAAe,CAACC,KAAD,EAAQH,MAAR,EAAgBC,OAAhB,CAAtB;AACD;;AAED,SAAOE,KAAK,CAAC,CAAD,CAAZ;AACD;;AAEDK,MAAM,CAACC,OAAP,GAAiBX,QAAjB","sourcesContent":["'use strict'\n\nconst batch = require('it-batch')\n\nasync function * balanced (source, reduce, options) {\n  yield await reduceToParents(source, reduce, options)\n}\n\nasync function reduceToParents (source, reduce, options) {\n  const roots = []\n\n  for await (const chunked of batch(source, options.maxChildrenPerNode)) {\n    roots.push(await reduce(chunked))\n  }\n\n  if (roots.length > 1) {\n    return reduceToParents(roots, reduce, options)\n  }\n\n  return roots[0]\n}\n\nmodule.exports = balanced\n"]},"metadata":{},"sourceType":"script"}