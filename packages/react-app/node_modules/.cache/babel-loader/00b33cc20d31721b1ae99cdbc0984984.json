{"ast":null,"code":"'use strict';\n\nconst defaultConfig = require('../../runtime/config-nodejs.js');\n\nconst {\n  isValidMultiaddr\n} = require('./utils');\n\nconst {\n  withTimeoutOption\n} = require('../../utils');\n\nmodule.exports = ({\n  repo\n}) => {\n  return withTimeoutOption(async function add(multiaddr, options) {\n    options = options || {};\n\n    if (multiaddr && !isValidMultiaddr(multiaddr)) {\n      throw new Error(`${multiaddr} is not a valid Multiaddr`);\n    }\n\n    const config = await repo.config.getAll();\n\n    if (options.default) {\n      config.Bootstrap = defaultConfig().Bootstrap;\n    } else if (multiaddr && config.Bootstrap.indexOf(multiaddr) === -1) {\n      config.Bootstrap.push(multiaddr);\n    }\n\n    await repo.config.set(config);\n    return {\n      Peers: options.default ? defaultConfig().Bootstrap : [multiaddr]\n    };\n  });\n};","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/ipfs/src/core/components/bootstrap/add.js"],"names":["defaultConfig","require","isValidMultiaddr","withTimeoutOption","module","exports","repo","add","multiaddr","options","Error","config","getAll","default","Bootstrap","indexOf","push","set","Peers"],"mappings":"AAAA;;AAEA,MAAMA,aAAa,GAAGC,OAAO,CAAC,gCAAD,CAA7B;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAuBD,OAAO,CAAC,SAAD,CAApC;;AACA,MAAM;AAAEE,EAAAA;AAAF,IAAwBF,OAAO,CAAC,aAAD,CAArC;;AAEAG,MAAM,CAACC,OAAP,GAAiB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC7B,SAAOH,iBAAiB,CAAC,eAAeI,GAAf,CAAoBC,SAApB,EAA+BC,OAA/B,EAAwC;AAC/DA,IAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;;AAEA,QAAID,SAAS,IAAI,CAACN,gBAAgB,CAACM,SAAD,CAAlC,EAA+C;AAC7C,YAAM,IAAIE,KAAJ,CAAW,GAAEF,SAAU,2BAAvB,CAAN;AACD;;AAED,UAAMG,MAAM,GAAG,MAAML,IAAI,CAACK,MAAL,CAAYC,MAAZ,EAArB;;AACA,QAAIH,OAAO,CAACI,OAAZ,EAAqB;AACnBF,MAAAA,MAAM,CAACG,SAAP,GAAmBd,aAAa,GAAGc,SAAnC;AACD,KAFD,MAEO,IAAIN,SAAS,IAAIG,MAAM,CAACG,SAAP,CAAiBC,OAAjB,CAAyBP,SAAzB,MAAwC,CAAC,CAA1D,EAA6D;AAClEG,MAAAA,MAAM,CAACG,SAAP,CAAiBE,IAAjB,CAAsBR,SAAtB;AACD;;AACD,UAAMF,IAAI,CAACK,MAAL,CAAYM,GAAZ,CAAgBN,MAAhB,CAAN;AAEA,WAAO;AACLO,MAAAA,KAAK,EAAET,OAAO,CAACI,OAAR,GAAkBb,aAAa,GAAGc,SAAlC,GAA8C,CAACN,SAAD;AADhD,KAAP;AAGD,GAlBuB,CAAxB;AAmBD,CApBD","sourcesContent":["'use strict'\n\nconst defaultConfig = require('../../runtime/config-nodejs.js')\nconst { isValidMultiaddr } = require('./utils')\nconst { withTimeoutOption } = require('../../utils')\n\nmodule.exports = ({ repo }) => {\n  return withTimeoutOption(async function add (multiaddr, options) {\n    options = options || {}\n\n    if (multiaddr && !isValidMultiaddr(multiaddr)) {\n      throw new Error(`${multiaddr} is not a valid Multiaddr`)\n    }\n\n    const config = await repo.config.getAll()\n    if (options.default) {\n      config.Bootstrap = defaultConfig().Bootstrap\n    } else if (multiaddr && config.Bootstrap.indexOf(multiaddr) === -1) {\n      config.Bootstrap.push(multiaddr)\n    }\n    await repo.config.set(config)\n\n    return {\n      Peers: options.default ? defaultConfig().Bootstrap : [multiaddr]\n    }\n  })\n}\n"]},"metadata":{},"sourceType":"script"}