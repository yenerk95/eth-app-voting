{"ast":null,"code":"var createError = require('errno').create;\n\nvar LevelUPError = createError('LevelUPError');\nvar NotFoundError = createError('NotFoundError', LevelUPError);\nNotFoundError.prototype.notFound = true;\nNotFoundError.prototype.status = 404;\nmodule.exports = {\n  LevelUPError: LevelUPError,\n  InitializationError: createError('InitializationError', LevelUPError),\n  OpenError: createError('OpenError', LevelUPError),\n  ReadError: createError('ReadError', LevelUPError),\n  WriteError: createError('WriteError', LevelUPError),\n  NotFoundError: NotFoundError,\n  EncodingError: createError('EncodingError', LevelUPError)\n};","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/level-errors/errors.js"],"names":["createError","require","create","LevelUPError","NotFoundError","prototype","notFound","status","module","exports","InitializationError","OpenError","ReadError","WriteError","EncodingError"],"mappings":"AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiBC,MAAnC;;AACA,IAAIC,YAAY,GAAGH,WAAW,CAAC,cAAD,CAA9B;AACA,IAAII,aAAa,GAAGJ,WAAW,CAAC,eAAD,EAAkBG,YAAlB,CAA/B;AAEAC,aAAa,CAACC,SAAd,CAAwBC,QAAxB,GAAmC,IAAnC;AACAF,aAAa,CAACC,SAAd,CAAwBE,MAAxB,GAAiC,GAAjC;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACfN,EAAAA,YAAY,EAAEA,YADC;AAEfO,EAAAA,mBAAmB,EAAEV,WAAW,CAAC,qBAAD,EAAwBG,YAAxB,CAFjB;AAGfQ,EAAAA,SAAS,EAAEX,WAAW,CAAC,WAAD,EAAcG,YAAd,CAHP;AAIfS,EAAAA,SAAS,EAAEZ,WAAW,CAAC,WAAD,EAAcG,YAAd,CAJP;AAKfU,EAAAA,UAAU,EAAEb,WAAW,CAAC,YAAD,EAAeG,YAAf,CALR;AAMfC,EAAAA,aAAa,EAAEA,aANA;AAOfU,EAAAA,aAAa,EAAEd,WAAW,CAAC,eAAD,EAAkBG,YAAlB;AAPX,CAAjB","sourcesContent":["var createError = require('errno').create\nvar LevelUPError = createError('LevelUPError')\nvar NotFoundError = createError('NotFoundError', LevelUPError)\n\nNotFoundError.prototype.notFound = true\nNotFoundError.prototype.status = 404\n\nmodule.exports = {\n  LevelUPError: LevelUPError,\n  InitializationError: createError('InitializationError', LevelUPError),\n  OpenError: createError('OpenError', LevelUPError),\n  ReadError: createError('ReadError', LevelUPError),\n  WriteError: createError('WriteError', LevelUPError),\n  NotFoundError: NotFoundError,\n  EncodingError: createError('EncodingError', LevelUPError)\n}\n"]},"metadata":{},"sourceType":"script"}