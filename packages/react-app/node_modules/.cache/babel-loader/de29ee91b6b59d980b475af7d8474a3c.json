{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _createForOfIteratorHelper = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _awaitAsyncGenerator = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\n\nvar _wrapAsyncGenerator = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\n\nvar directoryContent = function directoryContent(cid, node, unixfs, path, resolve, depth, ipld, options) {\n  return /*#__PURE__*/function () {\n    var _ref = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var options,\n          offset,\n          length,\n          links,\n          _iterator,\n          _step,\n          link,\n          result,\n          _args = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n              offset = options.offset || 0;\n              length = options.length || node.Links.length;\n              links = node.Links.slice(offset, length);\n              _iterator = _createForOfIteratorHelper(links);\n              _context.prev = 5;\n\n              _iterator.s();\n\n            case 7:\n              if ((_step = _iterator.n()).done) {\n                _context.next = 16;\n                break;\n              }\n\n              link = _step.value;\n              _context.next = 11;\n              return _awaitAsyncGenerator(resolve(link.Hash, link.Name, \"\".concat(path, \"/\").concat(link.Name), [], depth + 1, ipld, options));\n\n            case 11:\n              result = _context.sent;\n              _context.next = 14;\n              return result.entry;\n\n            case 14:\n              _context.next = 7;\n              break;\n\n            case 16:\n              _context.next = 21;\n              break;\n\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](5);\n\n              _iterator.e(_context.t0);\n\n            case 21:\n              _context.prev = 21;\n\n              _iterator.f();\n\n              return _context.finish(21);\n\n            case 24:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[5, 18, 21, 24]]);\n    }));\n\n    return function () {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\n\nmodule.exports = directoryContent;","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/ipfs-unixfs-exporter/src/resolvers/unixfs-v1/content/directory.js"],"names":["directoryContent","cid","node","unixfs","path","resolve","depth","ipld","options","offset","length","Links","links","slice","link","Hash","Name","result","entry","module","exports"],"mappings":"AAAA;;;;;;;;;;AAEA,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,GAAD,EAAMC,IAAN,EAAYC,MAAZ,EAAoBC,IAApB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,IAA1C,EAAgDC,OAAhD,EAA4D;AACnF;AAAA,0EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAkBA,cAAAA,OAAlB,2DAA4B,EAA5B;AACCC,cAAAA,MADD,GACUD,OAAO,CAACC,MAAR,IAAkB,CAD5B;AAECC,cAAAA,MAFD,GAEUF,OAAO,CAACE,MAAR,IAAkBR,IAAI,CAACS,KAAL,CAAWD,MAFvC;AAGCE,cAAAA,KAHD,GAGSV,IAAI,CAACS,KAAL,CAAWE,KAAX,CAAiBJ,MAAjB,EAAyBC,MAAzB,CAHT;AAAA,qDAKcE,KALd;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKME,cAAAA,IALN;AAAA;AAAA,0CAMkBT,OAAO,CAACS,IAAI,CAACC,IAAN,EAAYD,IAAI,CAACE,IAAjB,YAA0BZ,IAA1B,cAAkCU,IAAI,CAACE,IAAvC,GAA+C,EAA/C,EAAmDV,KAAK,GAAG,CAA3D,EAA8DC,IAA9D,EAAoEC,OAApE,CANzB;;AAAA;AAMGS,cAAAA,MANH;AAAA;AAQH,qBAAMA,MAAM,CAACC,KAAb;;AARG;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAWD,CAZD;;AAcAC,MAAM,CAACC,OAAP,GAAiBpB,gBAAjB","sourcesContent":["'use strict'\n\nconst directoryContent = (cid, node, unixfs, path, resolve, depth, ipld, options) => {\n  return async function * (options = {}) {\n    const offset = options.offset || 0\n    const length = options.length || node.Links.length\n    const links = node.Links.slice(offset, length)\n\n    for (const link of links) {\n      const result = await resolve(link.Hash, link.Name, `${path}/${link.Name}`, [], depth + 1, ipld, options)\n\n      yield result.entry\n    }\n  }\n}\n\nmodule.exports = directoryContent\n"]},"metadata":{},"sourceType":"script"}