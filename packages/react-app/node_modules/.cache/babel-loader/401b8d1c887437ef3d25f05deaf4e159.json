{"ast":null,"code":"module.exports = class FixedFIFO {\n  constructor(hwm) {\n    if (!(hwm > 0) || (hwm - 1 & hwm) !== 0) throw new Error('Max size for a FixedFIFO should be a power of two');\n    this.buffer = new Array(hwm);\n    this.mask = hwm - 1;\n    this.top = 0;\n    this.btm = 0;\n    this.next = null;\n  }\n\n  push(data) {\n    if (this.buffer[this.top] !== undefined) return false;\n    this.buffer[this.top] = data;\n    this.top = this.top + 1 & this.mask;\n    return true;\n  }\n\n  shift() {\n    const last = this.buffer[this.btm];\n    if (last === undefined) return undefined;\n    this.buffer[this.btm] = undefined;\n    this.btm = this.btm + 1 & this.mask;\n    return last;\n  }\n\n  isEmpty() {\n    return this.buffer[this.btm] === undefined;\n  }\n\n};","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/fast-fifo/fixed-size.js"],"names":["module","exports","FixedFIFO","constructor","hwm","Error","buffer","Array","mask","top","btm","next","push","data","undefined","shift","last","isEmpty"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,MAAMC,SAAN,CAAgB;AAC/BC,EAAAA,WAAW,CAAEC,GAAF,EAAO;AAChB,QAAI,EAAEA,GAAG,GAAG,CAAR,KAAc,CAAEA,GAAG,GAAG,CAAP,GAAYA,GAAb,MAAsB,CAAxC,EAA2C,MAAM,IAAIC,KAAJ,CAAU,mDAAV,CAAN;AAC3C,SAAKC,MAAL,GAAc,IAAIC,KAAJ,CAAUH,GAAV,CAAd;AACA,SAAKI,IAAL,GAAYJ,GAAG,GAAG,CAAlB;AACA,SAAKK,GAAL,GAAW,CAAX;AACA,SAAKC,GAAL,GAAW,CAAX;AACA,SAAKC,IAAL,GAAY,IAAZ;AACD;;AAEDC,EAAAA,IAAI,CAAEC,IAAF,EAAQ;AACV,QAAI,KAAKP,MAAL,CAAY,KAAKG,GAAjB,MAA0BK,SAA9B,EAAyC,OAAO,KAAP;AACzC,SAAKR,MAAL,CAAY,KAAKG,GAAjB,IAAwBI,IAAxB;AACA,SAAKJ,GAAL,GAAY,KAAKA,GAAL,GAAW,CAAZ,GAAiB,KAAKD,IAAjC;AACA,WAAO,IAAP;AACD;;AAEDO,EAAAA,KAAK,GAAI;AACP,UAAMC,IAAI,GAAG,KAAKV,MAAL,CAAY,KAAKI,GAAjB,CAAb;AACA,QAAIM,IAAI,KAAKF,SAAb,EAAwB,OAAOA,SAAP;AACxB,SAAKR,MAAL,CAAY,KAAKI,GAAjB,IAAwBI,SAAxB;AACA,SAAKJ,GAAL,GAAY,KAAKA,GAAL,GAAW,CAAZ,GAAiB,KAAKF,IAAjC;AACA,WAAOQ,IAAP;AACD;;AAEDC,EAAAA,OAAO,GAAI;AACT,WAAO,KAAKX,MAAL,CAAY,KAAKI,GAAjB,MAA0BI,SAAjC;AACD;;AA3B8B,CAAjC","sourcesContent":["module.exports = class FixedFIFO {\n  constructor (hwm) {\n    if (!(hwm > 0) || ((hwm - 1) & hwm) !== 0) throw new Error('Max size for a FixedFIFO should be a power of two')\n    this.buffer = new Array(hwm)\n    this.mask = hwm - 1\n    this.top = 0\n    this.btm = 0\n    this.next = null\n  }\n\n  push (data) {\n    if (this.buffer[this.top] !== undefined) return false\n    this.buffer[this.top] = data\n    this.top = (this.top + 1) & this.mask\n    return true\n  }\n\n  shift () {\n    const last = this.buffer[this.btm]\n    if (last === undefined) return undefined\n    this.buffer[this.btm] = undefined\n    this.btm = (this.btm + 1) & this.mask\n    return last\n  }\n\n  isEmpty () {\n    return this.buffer[this.btm] === undefined\n  }\n}\n"]},"metadata":{},"sourceType":"script"}