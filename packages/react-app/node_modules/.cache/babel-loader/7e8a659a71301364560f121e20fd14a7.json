{"ast":null,"code":"var AbstractIterator = require('abstract-leveldown').AbstractIterator;\n\nvar inherits = require('inherits');\n\nfunction DeferredIterator(db, options) {\n  AbstractIterator.call(this, db);\n  this._options = options;\n  this._iterator = null;\n  this._operations = [];\n}\n\ninherits(DeferredIterator, AbstractIterator);\n\nDeferredIterator.prototype.setDb = function (db) {\n  var it = this._iterator = db.iterator(this._options);\n\n  this._operations.forEach(function (op) {\n    it[op.method].apply(it, op.args);\n  });\n};\n\nDeferredIterator.prototype._operation = function (method, args) {\n  if (this._iterator) return this._iterator[method].apply(this._iterator, args);\n\n  this._operations.push({\n    method: method,\n    args: args\n  });\n};\n\n'next end'.split(' ').forEach(function (m) {\n  DeferredIterator.prototype['_' + m] = function () {\n    this._operation(m, arguments);\n  };\n}); // Must defer seek() rather than _seek() because it requires db._serializeKey to be available\n\nDeferredIterator.prototype.seek = function () {\n  this._operation('seek', arguments);\n};\n\nmodule.exports = DeferredIterator;","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/level-packager/node_modules/deferred-leveldown/deferred-iterator.js"],"names":["AbstractIterator","require","inherits","DeferredIterator","db","options","call","_options","_iterator","_operations","prototype","setDb","it","iterator","forEach","op","method","apply","args","_operation","push","split","m","arguments","seek","module","exports"],"mappings":"AAAA,IAAIA,gBAAgB,GAAGC,OAAO,CAAC,oBAAD,CAAP,CAA8BD,gBAArD;;AACA,IAAIE,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAtB;;AAEA,SAASE,gBAAT,CAA2BC,EAA3B,EAA+BC,OAA/B,EAAwC;AACtCL,EAAAA,gBAAgB,CAACM,IAAjB,CAAsB,IAAtB,EAA4BF,EAA5B;AAEA,OAAKG,QAAL,GAAgBF,OAAhB;AACA,OAAKG,SAAL,GAAiB,IAAjB;AACA,OAAKC,WAAL,GAAmB,EAAnB;AACD;;AAEDP,QAAQ,CAACC,gBAAD,EAAmBH,gBAAnB,CAAR;;AAEAG,gBAAgB,CAACO,SAAjB,CAA2BC,KAA3B,GAAmC,UAAUP,EAAV,EAAc;AAC/C,MAAIQ,EAAE,GAAG,KAAKJ,SAAL,GAAiBJ,EAAE,CAACS,QAAH,CAAY,KAAKN,QAAjB,CAA1B;;AACA,OAAKE,WAAL,CAAiBK,OAAjB,CAAyB,UAAUC,EAAV,EAAc;AACrCH,IAAAA,EAAE,CAACG,EAAE,CAACC,MAAJ,CAAF,CAAcC,KAAd,CAAoBL,EAApB,EAAwBG,EAAE,CAACG,IAA3B;AACD,GAFD;AAGD,CALD;;AAOAf,gBAAgB,CAACO,SAAjB,CAA2BS,UAA3B,GAAwC,UAAUH,MAAV,EAAkBE,IAAlB,EAAwB;AAC9D,MAAI,KAAKV,SAAT,EAAoB,OAAO,KAAKA,SAAL,CAAeQ,MAAf,EAAuBC,KAAvB,CAA6B,KAAKT,SAAlC,EAA6CU,IAA7C,CAAP;;AACpB,OAAKT,WAAL,CAAiBW,IAAjB,CAAsB;AAAEJ,IAAAA,MAAM,EAAEA,MAAV;AAAkBE,IAAAA,IAAI,EAAEA;AAAxB,GAAtB;AACD,CAHD;;AAKA,WAAWG,KAAX,CAAiB,GAAjB,EAAsBP,OAAtB,CAA8B,UAAUQ,CAAV,EAAa;AACzCnB,EAAAA,gBAAgB,CAACO,SAAjB,CAA2B,MAAMY,CAAjC,IAAsC,YAAY;AAChD,SAAKH,UAAL,CAAgBG,CAAhB,EAAmBC,SAAnB;AACD,GAFD;AAGD,CAJD,E,CAMA;;AACApB,gBAAgB,CAACO,SAAjB,CAA2Bc,IAA3B,GAAkC,YAAY;AAC5C,OAAKL,UAAL,CAAgB,MAAhB,EAAwBI,SAAxB;AACD,CAFD;;AAIAE,MAAM,CAACC,OAAP,GAAiBvB,gBAAjB","sourcesContent":["var AbstractIterator = require('abstract-leveldown').AbstractIterator\nvar inherits = require('inherits')\n\nfunction DeferredIterator (db, options) {\n  AbstractIterator.call(this, db)\n\n  this._options = options\n  this._iterator = null\n  this._operations = []\n}\n\ninherits(DeferredIterator, AbstractIterator)\n\nDeferredIterator.prototype.setDb = function (db) {\n  var it = this._iterator = db.iterator(this._options)\n  this._operations.forEach(function (op) {\n    it[op.method].apply(it, op.args)\n  })\n}\n\nDeferredIterator.prototype._operation = function (method, args) {\n  if (this._iterator) return this._iterator[method].apply(this._iterator, args)\n  this._operations.push({ method: method, args: args })\n}\n\n'next end'.split(' ').forEach(function (m) {\n  DeferredIterator.prototype['_' + m] = function () {\n    this._operation(m, arguments)\n  }\n})\n\n// Must defer seek() rather than _seek() because it requires db._serializeKey to be available\nDeferredIterator.prototype.seek = function () {\n  this._operation('seek', arguments)\n}\n\nmodule.exports = DeferredIterator\n"]},"metadata":{},"sourceType":"script"}