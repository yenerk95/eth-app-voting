{"ast":null,"code":"/*!\n * util.js - encoding utils for javascript\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n'use strict';\n\nconst assert = require('../internal/assert');\n/*\n * Util\n */\n\n\nfunction countLeft(data) {\n  assert(Buffer.isBuffer(data));\n  let i = 0;\n\n  while (i < data.length && data[i] === 0x00) i += 1;\n\n  let bits = (data.length - i) * 8;\n  if (bits === 0) return 0;\n  bits -= 8;\n  let oct = data[i];\n\n  while (oct) {\n    bits += 1;\n    oct >>>= 1;\n  }\n\n  return bits;\n}\n\nfunction countRight(data) {\n  assert(Buffer.isBuffer(data));\n  let i = data.length;\n\n  while (i > 0 && data[i - 1] === 0x00) i -= 1;\n\n  let bits = i * 8;\n  if (bits === 0) return 0;\n  bits -= 8;\n  let oct = data[i - 1];\n\n  while (oct) {\n    bits += 1;\n    oct >>>= 1;\n  }\n\n  return bits;\n}\n\nfunction compareLeft(x, y) {\n  assert(Buffer.isBuffer(x));\n  assert(Buffer.isBuffer(y));\n  let xpos = 0;\n  let xlen = x.length;\n  let ypos = 0;\n  let ylen = y.length;\n\n  while (xlen > 0 && x[xpos] === 0x00) {\n    xpos += 1;\n    xlen -= 1;\n  }\n\n  while (ylen > 0 && y[ypos] === 0x00) {\n    ypos += 1;\n    ylen -= 1;\n  }\n\n  if (xlen < ylen) return -1;\n  if (xlen > ylen) return 1;\n\n  for (let i = 0; i < xlen; i++) {\n    if (x[xpos + i] < y[ypos + i]) return -1;\n    if (x[xpos + i] > y[ypos + i]) return 1;\n  }\n\n  return 0;\n}\n\nfunction compareRight(x, y) {\n  assert(Buffer.isBuffer(x));\n  assert(Buffer.isBuffer(y));\n  let xlen = x.length;\n  let ylen = y.length;\n\n  while (xlen > 0 && x[xlen - 1] === 0x00) xlen -= 1;\n\n  while (ylen > 0 && y[ylen - 1] === 0x00) ylen -= 1;\n\n  if (xlen < ylen) return -1;\n  if (xlen > ylen) return 1;\n\n  for (let i = xlen - 1; i >= 0; i--) {\n    if (x[i] < y[i]) return -1;\n    if (x[i] > y[i]) return 1;\n  }\n\n  return 0;\n}\n\nfunction trimLeft(data) {\n  assert(Buffer.isBuffer(data));\n  let i = 0;\n\n  while (i < data.length && data[i] === 0x00) i += 1;\n\n  return data.slice(i);\n}\n\nfunction trimRight(data) {\n  assert(Buffer.isBuffer(data));\n  let i = data.length;\n\n  while (i > 0 && data[i - 1] === 0x00) i -= 1;\n\n  return data.slice(0, i);\n}\n\nfunction padLeft(data, size) {\n  assert(Buffer.isBuffer(data));\n  assert(size >>> 0 === size);\n  if (data.length > size) data = trimLeft(data);\n  if (data.length > size) throw new RangeError(`Buffer expected to be ${size} bytes in size.`);\n  const out = Buffer.allocUnsafe(size);\n  const left = size - data.length;\n  out.fill(0x00, 0, left);\n  data.copy(out, left);\n  return out;\n}\n\nfunction padRight(data, size) {\n  assert(Buffer.isBuffer(data));\n  assert(size >>> 0 === size);\n  if (data.length > size) data = trimRight(data);\n  if (data.length > size) throw new RangeError(`Buffer expected to be ${size} bytes in size.`);\n  const out = Buffer.allocUnsafe(size);\n  data.copy(out, 0);\n  out.fill(0x00, data.length, size);\n  return out;\n}\n/*\n * Expose\n */\n\n\nexports.countLeft = countLeft;\nexports.countRight = countRight;\nexports.compareLeft = compareLeft;\nexports.compareRight = compareRight;\nexports.trimLeft = trimLeft;\nexports.trimRight = trimRight;\nexports.padLeft = padLeft;\nexports.padRight = padRight;","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/bcrypto/lib/encoding/util.js"],"names":["assert","require","countLeft","data","Buffer","isBuffer","i","length","bits","oct","countRight","compareLeft","x","y","xpos","xlen","ypos","ylen","compareRight","trimLeft","slice","trimRight","padLeft","size","RangeError","out","allocUnsafe","left","fill","copy","padRight","exports"],"mappings":"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","sourcesContent":["/*!\n * util.js - encoding utils for javascript\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\n\n/*\n * Util\n */\n\nfunction countLeft(data) {\n  assert(Buffer.isBuffer(data));\n\n  let i = 0;\n\n  while (i < data.length && data[i] === 0x00)\n    i += 1;\n\n  let bits = (data.length - i) * 8;\n\n  if (bits === 0)\n    return 0;\n\n  bits -= 8;\n\n  let oct = data[i];\n\n  while (oct) {\n    bits += 1;\n    oct >>>= 1;\n  }\n\n  return bits;\n}\n\nfunction countRight(data) {\n  assert(Buffer.isBuffer(data));\n\n  let i = data.length;\n\n  while (i > 0 && data[i - 1] === 0x00)\n    i -= 1;\n\n  let bits = i * 8;\n\n  if (bits === 0)\n    return 0;\n\n  bits -= 8;\n\n  let oct = data[i - 1];\n\n  while (oct) {\n    bits += 1;\n    oct >>>= 1;\n  }\n\n  return bits;\n}\n\nfunction compareLeft(x, y) {\n  assert(Buffer.isBuffer(x));\n  assert(Buffer.isBuffer(y));\n\n  let xpos = 0;\n  let xlen = x.length;\n  let ypos = 0;\n  let ylen = y.length;\n\n  while (xlen > 0 && x[xpos] === 0x00) {\n    xpos += 1;\n    xlen -= 1;\n  }\n\n  while (ylen > 0 && y[ypos] === 0x00) {\n    ypos += 1;\n    ylen -= 1;\n  }\n\n  if (xlen < ylen)\n    return -1;\n\n  if (xlen > ylen)\n    return 1;\n\n  for (let i = 0; i < xlen; i++) {\n    if (x[xpos + i] < y[ypos + i])\n      return -1;\n\n    if (x[xpos + i] > y[ypos + i])\n      return 1;\n  }\n\n  return 0;\n}\n\nfunction compareRight(x, y) {\n  assert(Buffer.isBuffer(x));\n  assert(Buffer.isBuffer(y));\n\n  let xlen = x.length;\n  let ylen = y.length;\n\n  while (xlen > 0 && x[xlen - 1] === 0x00)\n    xlen -= 1;\n\n  while (ylen > 0 && y[ylen - 1] === 0x00)\n    ylen -= 1;\n\n  if (xlen < ylen)\n    return -1;\n\n  if (xlen > ylen)\n    return 1;\n\n  for (let i = xlen - 1; i >= 0; i--) {\n    if (x[i] < y[i])\n      return -1;\n\n    if (x[i] > y[i])\n      return 1;\n  }\n\n  return 0;\n}\n\nfunction trimLeft(data) {\n  assert(Buffer.isBuffer(data));\n\n  let i = 0;\n\n  while (i < data.length && data[i] === 0x00)\n    i += 1;\n\n  return data.slice(i);\n}\n\nfunction trimRight(data) {\n  assert(Buffer.isBuffer(data));\n\n  let i = data.length;\n\n  while (i > 0 && data[i - 1] === 0x00)\n    i -= 1;\n\n  return data.slice(0, i);\n}\n\nfunction padLeft(data, size) {\n  assert(Buffer.isBuffer(data));\n  assert((size >>> 0) === size);\n\n  if (data.length > size)\n    data = trimLeft(data);\n\n  if (data.length > size)\n    throw new RangeError(`Buffer expected to be ${size} bytes in size.`);\n\n  const out = Buffer.allocUnsafe(size);\n  const left = size - data.length;\n\n  out.fill(0x00, 0, left);\n  data.copy(out, left);\n\n  return out;\n}\n\nfunction padRight(data, size) {\n  assert(Buffer.isBuffer(data));\n  assert((size >>> 0) === size);\n\n  if (data.length > size)\n    data = trimRight(data);\n\n  if (data.length > size)\n    throw new RangeError(`Buffer expected to be ${size} bytes in size.`);\n\n  const out = Buffer.allocUnsafe(size);\n\n  data.copy(out, 0);\n  out.fill(0x00, data.length, size);\n\n  return out;\n}\n\n/*\n * Expose\n */\n\nexports.countLeft = countLeft;\nexports.countRight = countRight;\nexports.compareLeft = compareLeft;\nexports.compareRight = compareRight;\nexports.trimLeft = trimLeft;\nexports.trimRight = trimRight;\nexports.padLeft = padLeft;\nexports.padRight = padRight;\n"]},"metadata":{},"sourceType":"script"}