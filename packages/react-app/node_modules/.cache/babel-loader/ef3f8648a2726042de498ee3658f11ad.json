{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar defer = require('p-defer');\n\nvar _require = require('../errors'),\n    NotStartedError = _require.NotStartedError,\n    AlreadyInitializedError = _require.AlreadyInitializedError;\n\nvar Components = require('./');\n\nvar _require2 = require('../utils'),\n    withTimeoutOption = _require2.withTimeoutOption;\n\nmodule.exports = function (_ref) {\n  var apiManager = _ref.apiManager,\n      constructorOptions = _ref.options,\n      bitswap = _ref.bitswap,\n      blockService = _ref.blockService,\n      gcLock = _ref.gcLock,\n      initOptions = _ref.initOptions,\n      ipld = _ref.ipld,\n      ipns = _ref.ipns,\n      keychain = _ref.keychain,\n      libp2p = _ref.libp2p,\n      mfsPreload = _ref.mfsPreload,\n      peerId = _ref.peerId,\n      pinManager = _ref.pinManager,\n      preload = _ref.preload,\n      print = _ref.print,\n      repo = _ref.repo;\n  return withTimeoutOption( /*#__PURE__*/function () {\n    var _stop = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var stopPromise, _apiManager$update, cancel, api;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              stopPromise = defer();\n              _apiManager$update = apiManager.update({\n                stop: function stop() {\n                  return stopPromise.promise;\n                }\n              }), cancel = _apiManager$update.cancel;\n              _context.prev = 2;\n              blockService.unsetExchange();\n              bitswap.stop();\n              preload.stop();\n              _context.next = 8;\n              return Promise.all([ipns.republisher.stop(), mfsPreload.stop(), libp2p.stop(), repo.close()]);\n\n            case 8:\n              api = createApi({\n                apiManager: apiManager,\n                constructorOptions: constructorOptions,\n                blockService: blockService,\n                gcLock: gcLock,\n                initOptions: initOptions,\n                ipld: ipld,\n                keychain: keychain,\n                peerId: peerId,\n                pinManager: pinManager,\n                preload: preload,\n                print: print,\n                repo: repo\n              });\n              apiManager.update(api, function () {\n                throw new NotStartedError();\n              });\n              _context.next = 17;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](2);\n              cancel();\n              stopPromise.reject(_context.t0);\n              throw _context.t0;\n\n            case 17:\n              stopPromise.resolve();\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 12]]);\n    }));\n\n    function stop() {\n      return _stop.apply(this, arguments);\n    }\n\n    return stop;\n  }());\n};\n\nfunction createApi(_ref2) {\n  var apiManager = _ref2.apiManager,\n      constructorOptions = _ref2.constructorOptions,\n      blockService = _ref2.blockService,\n      gcLock = _ref2.gcLock,\n      initOptions = _ref2.initOptions,\n      ipld = _ref2.ipld,\n      keychain = _ref2.keychain,\n      peerId = _ref2.peerId,\n      pinManager = _ref2.pinManager,\n      preload = _ref2.preload,\n      print = _ref2.print,\n      repo = _ref2.repo;\n  var dag = {\n    get: Components.dag.get({\n      ipld: ipld,\n      preload: preload\n    }),\n    resolve: Components.dag.resolve({\n      ipld: ipld,\n      preload: preload\n    }),\n    tree: Components.dag.tree({\n      ipld: ipld,\n      preload: preload\n    })\n  };\n  var object = {\n    data: Components.object.data({\n      ipld: ipld,\n      preload: preload\n    }),\n    get: Components.object.get({\n      ipld: ipld,\n      preload: preload\n    }),\n    links: Components.object.links({\n      dag: dag\n    }),\n    new: Components.object.new({\n      ipld: ipld,\n      preload: preload\n    }),\n    patch: {\n      addLink: Components.object.patch.addLink({\n        ipld: ipld,\n        gcLock: gcLock,\n        preload: preload\n      }),\n      appendData: Components.object.patch.appendData({\n        ipld: ipld,\n        gcLock: gcLock,\n        preload: preload\n      }),\n      rmLink: Components.object.patch.rmLink({\n        ipld: ipld,\n        gcLock: gcLock,\n        preload: preload\n      }),\n      setData: Components.object.patch.setData({\n        ipld: ipld,\n        gcLock: gcLock,\n        preload: preload\n      })\n    },\n    put: Components.object.put({\n      ipld: ipld,\n      gcLock: gcLock,\n      preload: preload\n    }),\n    stat: Components.object.stat({\n      ipld: ipld,\n      preload: preload\n    })\n  };\n  var pin = {\n    add: Components.pin.add({\n      pinManager: pinManager,\n      gcLock: gcLock,\n      dag: dag\n    }),\n    ls: Components.pin.ls({\n      pinManager: pinManager,\n      dag: dag\n    }),\n    rm: Components.pin.rm({\n      pinManager: pinManager,\n      gcLock: gcLock,\n      dag: dag\n    })\n  }; // FIXME: resolve this circular dependency\n\n  dag.put = Components.dag.put({\n    ipld: ipld,\n    pin: pin,\n    gcLock: gcLock,\n    preload: preload\n  });\n  var block = {\n    get: Components.block.get({\n      blockService: blockService,\n      preload: preload\n    }),\n    put: Components.block.put({\n      blockService: blockService,\n      pin: pin,\n      gcLock: gcLock,\n      preload: preload\n    }),\n    rm: Components.block.rm({\n      blockService: blockService,\n      gcLock: gcLock,\n      pinManager: pinManager\n    }),\n    stat: Components.block.stat({\n      blockService: blockService,\n      preload: preload\n    })\n  };\n  var add = Components.add({\n    block: block,\n    preload: preload,\n    pin: pin,\n    gcLock: gcLock,\n    options: constructorOptions\n  });\n  var resolve = Components.resolve({\n    ipld: ipld\n  });\n  var refs = Components.refs({\n    ipld: ipld,\n    resolve: resolve,\n    preload: preload\n  });\n  refs.local = Components.refs.local({\n    repo: repo\n  });\n\n  var notStarted = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              throw new NotStartedError();\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function notStarted() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var api = {\n    add: add,\n    bitswap: {\n      stat: notStarted,\n      unwant: notStarted,\n      wantlist: notStarted\n    },\n    block: block,\n    bootstrap: {\n      add: Components.bootstrap.add({\n        repo: repo\n      }),\n      list: Components.bootstrap.list({\n        repo: repo\n      }),\n      rm: Components.bootstrap.rm({\n        repo: repo\n      })\n    },\n    cat: Components.cat({\n      ipld: ipld,\n      preload: preload\n    }),\n    config: Components.config({\n      repo: repo\n    }),\n    dag: dag,\n    dns: Components.dns(),\n    files: Components.files({\n      ipld: ipld,\n      block: block,\n      blockService: blockService,\n      repo: repo,\n      preload: preload,\n      options: constructorOptions\n    }),\n    get: Components.get({\n      ipld: ipld,\n      preload: preload\n    }),\n    id: Components.id({\n      peerId: peerId\n    }),\n    init: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                throw new AlreadyInitializedError();\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function init() {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }(),\n    isOnline: Components.isOnline({}),\n    key: {\n      export: Components.key.export({\n        keychain: keychain\n      }),\n      gen: Components.key.gen({\n        keychain: keychain\n      }),\n      import: Components.key.import({\n        keychain: keychain\n      }),\n      info: Components.key.info({\n        keychain: keychain\n      }),\n      list: Components.key.list({\n        keychain: keychain\n      }),\n      rename: Components.key.rename({\n        keychain: keychain\n      }),\n      rm: Components.key.rm({\n        keychain: keychain\n      })\n    },\n    ls: Components.ls({\n      ipld: ipld,\n      preload: preload\n    }),\n    object: object,\n    pin: pin,\n    refs: refs,\n    repo: {\n      gc: Components.repo.gc({\n        gcLock: gcLock,\n        pin: pin,\n        pinManager: pinManager,\n        refs: refs,\n        repo: repo\n      }),\n      stat: Components.repo.stat({\n        repo: repo\n      }),\n      version: Components.repo.version({\n        repo: repo\n      })\n    },\n    resolve: resolve,\n    start: Components.start({\n      apiManager: apiManager,\n      options: constructorOptions,\n      blockService: blockService,\n      gcLock: gcLock,\n      initOptions: initOptions,\n      ipld: ipld,\n      keychain: keychain,\n      peerId: peerId,\n      pinManager: pinManager,\n      preload: preload,\n      print: print,\n      repo: repo\n    }),\n    stats: {\n      bitswap: notStarted,\n      bw: notStarted,\n      repo: Components.repo.stat({\n        repo: repo\n      })\n    },\n    stop: function stop() {},\n    swarm: {\n      addrs: notStarted,\n      connect: notStarted,\n      disconnect: notStarted,\n      localAddrs: Components.swarm.localAddrs({\n        multiaddrs: []\n      }),\n      peers: notStarted\n    },\n    version: Components.version({\n      repo: repo\n    })\n  };\n  return api;\n}","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/ipfs/src/core/components/stop.js"],"names":["defer","require","NotStartedError","AlreadyInitializedError","Components","withTimeoutOption","module","exports","apiManager","constructorOptions","options","bitswap","blockService","gcLock","initOptions","ipld","ipns","keychain","libp2p","mfsPreload","peerId","pinManager","preload","print","repo","stopPromise","update","stop","promise","cancel","unsetExchange","Promise","all","republisher","close","api","createApi","reject","resolve","dag","get","tree","object","data","links","new","patch","addLink","appendData","rmLink","setData","put","stat","pin","add","ls","rm","block","refs","local","notStarted","unwant","wantlist","bootstrap","list","cat","config","dns","files","id","init","isOnline","key","export","gen","import","info","rename","gc","version","start","stats","bw","swarm","addrs","connect","disconnect","localAddrs","multiaddrs","peers"],"mappings":"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","sourcesContent":["'use strict'\n\nconst defer = require('p-defer')\nconst { NotStartedError, AlreadyInitializedError } = require('../errors')\nconst Components = require('./')\nconst { withTimeoutOption } = require('../utils')\n\nmodule.exports = ({\n  apiManager,\n  options: constructorOptions,\n  bitswap,\n  blockService,\n  gcLock,\n  initOptions,\n  ipld,\n  ipns,\n  keychain,\n  libp2p,\n  mfsPreload,\n  peerId,\n  pinManager,\n  preload,\n  print,\n  repo\n}) => withTimeoutOption(async function stop () {\n  const stopPromise = defer()\n  const { cancel } = apiManager.update({ stop: () => stopPromise.promise })\n\n  try {\n    blockService.unsetExchange()\n    bitswap.stop()\n    preload.stop()\n\n    await Promise.all([\n      ipns.republisher.stop(),\n      mfsPreload.stop(),\n      libp2p.stop(),\n      repo.close()\n    ])\n\n    const api = createApi({\n      apiManager,\n      constructorOptions,\n      blockService,\n      gcLock,\n      initOptions,\n      ipld,\n      keychain,\n      peerId,\n      pinManager,\n      preload,\n      print,\n      repo\n    })\n\n    apiManager.update(api, () => { throw new NotStartedError() })\n  } catch (err) {\n    cancel()\n    stopPromise.reject(err)\n    throw err\n  }\n\n  stopPromise.resolve()\n})\n\nfunction createApi ({\n  apiManager,\n  constructorOptions,\n  blockService,\n  gcLock,\n  initOptions,\n  ipld,\n  keychain,\n  peerId,\n  pinManager,\n  preload,\n  print,\n  repo\n}) {\n  const dag = {\n    get: Components.dag.get({ ipld, preload }),\n    resolve: Components.dag.resolve({ ipld, preload }),\n    tree: Components.dag.tree({ ipld, preload })\n  }\n  const object = {\n    data: Components.object.data({ ipld, preload }),\n    get: Components.object.get({ ipld, preload }),\n    links: Components.object.links({ dag }),\n    new: Components.object.new({ ipld, preload }),\n    patch: {\n      addLink: Components.object.patch.addLink({ ipld, gcLock, preload }),\n      appendData: Components.object.patch.appendData({ ipld, gcLock, preload }),\n      rmLink: Components.object.patch.rmLink({ ipld, gcLock, preload }),\n      setData: Components.object.patch.setData({ ipld, gcLock, preload })\n    },\n    put: Components.object.put({ ipld, gcLock, preload }),\n    stat: Components.object.stat({ ipld, preload })\n  }\n\n  const pin = {\n    add: Components.pin.add({ pinManager, gcLock, dag }),\n    ls: Components.pin.ls({ pinManager, dag }),\n    rm: Components.pin.rm({ pinManager, gcLock, dag })\n  }\n\n  // FIXME: resolve this circular dependency\n  dag.put = Components.dag.put({ ipld, pin, gcLock, preload })\n\n  const block = {\n    get: Components.block.get({ blockService, preload }),\n    put: Components.block.put({ blockService, pin, gcLock, preload }),\n    rm: Components.block.rm({ blockService, gcLock, pinManager }),\n    stat: Components.block.stat({ blockService, preload })\n  }\n\n  const add = Components.add({ block, preload, pin, gcLock, options: constructorOptions })\n  const resolve = Components.resolve({ ipld })\n  const refs = Components.refs({ ipld, resolve, preload })\n  refs.local = Components.refs.local({ repo })\n\n  const notStarted = async () => { // eslint-disable-line require-await\n    throw new NotStartedError()\n  }\n\n  const api = {\n    add,\n    bitswap: {\n      stat: notStarted,\n      unwant: notStarted,\n      wantlist: notStarted\n    },\n    block,\n    bootstrap: {\n      add: Components.bootstrap.add({ repo }),\n      list: Components.bootstrap.list({ repo }),\n      rm: Components.bootstrap.rm({ repo })\n    },\n    cat: Components.cat({ ipld, preload }),\n    config: Components.config({ repo }),\n    dag,\n    dns: Components.dns(),\n    files: Components.files({ ipld, block, blockService, repo, preload, options: constructorOptions }),\n    get: Components.get({ ipld, preload }),\n    id: Components.id({ peerId }),\n    init: async () => { // eslint-disable-line require-await\n      throw new AlreadyInitializedError()\n    },\n    isOnline: Components.isOnline({}),\n    key: {\n      export: Components.key.export({ keychain }),\n      gen: Components.key.gen({ keychain }),\n      import: Components.key.import({ keychain }),\n      info: Components.key.info({ keychain }),\n      list: Components.key.list({ keychain }),\n      rename: Components.key.rename({ keychain }),\n      rm: Components.key.rm({ keychain })\n    },\n    ls: Components.ls({ ipld, preload }),\n    object,\n    pin,\n    refs,\n    repo: {\n      gc: Components.repo.gc({ gcLock, pin, pinManager, refs, repo }),\n      stat: Components.repo.stat({ repo }),\n      version: Components.repo.version({ repo })\n    },\n    resolve,\n    start: Components.start({\n      apiManager,\n      options: constructorOptions,\n      blockService,\n      gcLock,\n      initOptions,\n      ipld,\n      keychain,\n      peerId,\n      pinManager,\n      preload,\n      print,\n      repo\n    }),\n    stats: {\n      bitswap: notStarted,\n      bw: notStarted,\n      repo: Components.repo.stat({ repo })\n    },\n    stop: () => {},\n    swarm: {\n      addrs: notStarted,\n      connect: notStarted,\n      disconnect: notStarted,\n      localAddrs: Components.swarm.localAddrs({ multiaddrs: [] }),\n      peers: notStarted\n    },\n    version: Components.version({ repo })\n  }\n\n  return api\n}\n"]},"metadata":{},"sourceType":"script"}