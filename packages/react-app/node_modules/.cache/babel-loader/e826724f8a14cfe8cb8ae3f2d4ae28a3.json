{"ast":null,"code":"'use strict';\n\nvar _defineProperty = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _regeneratorRuntime = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _objectSpread = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _classCallCheck = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _require = require('interface-datastore'),\n    Key = _require.Key,\n    Errors = _require.Errors,\n    Adapter = _require.Adapter,\n    _require$utils = _require.utils,\n    filter = _require$utils.filter,\n    map = _require$utils.map,\n    take = _require$utils.take,\n    sortAll = _require$utils.sortAll;\n/**\n * A datastore backed by leveldb.\n */\n\n\nvar LevelDatastore = /*#__PURE__*/function (_Adapter) {\n  _inherits(LevelDatastore, _Adapter);\n\n  var _super = _createSuper(LevelDatastore);\n\n  function LevelDatastore(path, opts) {\n    var _this;\n\n    _classCallCheck(this, LevelDatastore);\n\n    _this = _super.call(this);\n    var database;\n\n    if (opts && opts.db) {\n      database = opts.db;\n      delete opts.db;\n    } else {\n      database = require('level');\n    }\n\n    _this.db = _this._initDb(database, path, opts);\n    return _this;\n  }\n\n  _createClass(LevelDatastore, [{\n    key: \"_initDb\",\n    value: function _initDb(database, path, opts) {\n      return database(path, _objectSpread(_objectSpread({}, opts), {}, {\n        valueEncoding: 'binary',\n        compression: false // same default as go\n\n      }));\n    }\n  }, {\n    key: \"open\",\n    value: function () {\n      var _open = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return this.db.open();\n\n              case 3:\n                _context.next = 8;\n                break;\n\n              case 5:\n                _context.prev = 5;\n                _context.t0 = _context[\"catch\"](0);\n                throw Errors.dbOpenFailedError(_context.t0);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 5]]);\n      }));\n\n      function open() {\n        return _open.apply(this, arguments);\n      }\n\n      return open;\n    }()\n  }, {\n    key: \"put\",\n    value: function () {\n      var _put = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(key, value) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return this.db.put(key.toString(), value);\n\n              case 3:\n                _context2.next = 8;\n                break;\n\n              case 5:\n                _context2.prev = 5;\n                _context2.t0 = _context2[\"catch\"](0);\n                throw Errors.dbWriteFailedError(_context2.t0);\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 5]]);\n      }));\n\n      function put(_x, _x2) {\n        return _put.apply(this, arguments);\n      }\n\n      return put;\n    }()\n  }, {\n    key: \"get\",\n    value: function () {\n      var _get = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(key) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return this.db.get(key.toString());\n\n              case 3:\n                data = _context3.sent;\n                _context3.next = 11;\n                break;\n\n              case 6:\n                _context3.prev = 6;\n                _context3.t0 = _context3[\"catch\"](0);\n\n                if (!_context3.t0.notFound) {\n                  _context3.next = 10;\n                  break;\n                }\n\n                throw Errors.notFoundError(_context3.t0);\n\n              case 10:\n                throw Errors.dbWriteFailedError(_context3.t0);\n\n              case 11:\n                return _context3.abrupt(\"return\", data);\n\n              case 12:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 6]]);\n      }));\n\n      function get(_x3) {\n        return _get.apply(this, arguments);\n      }\n\n      return get;\n    }()\n  }, {\n    key: \"has\",\n    value: function () {\n      var _has = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(key) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return this.db.get(key.toString());\n\n              case 3:\n                _context4.next = 10;\n                break;\n\n              case 5:\n                _context4.prev = 5;\n                _context4.t0 = _context4[\"catch\"](0);\n\n                if (!_context4.t0.notFound) {\n                  _context4.next = 9;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", false);\n\n              case 9:\n                throw _context4.t0;\n\n              case 10:\n                return _context4.abrupt(\"return\", true);\n\n              case 11:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[0, 5]]);\n      }));\n\n      function has(_x4) {\n        return _has.apply(this, arguments);\n      }\n\n      return has;\n    }()\n  }, {\n    key: \"delete\",\n    value: function () {\n      var _delete2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(key) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                _context5.next = 3;\n                return this.db.del(key.toString());\n\n              case 3:\n                _context5.next = 8;\n                break;\n\n              case 5:\n                _context5.prev = 5;\n                _context5.t0 = _context5[\"catch\"](0);\n                throw Errors.dbDeleteFailedError(_context5.t0);\n\n              case 8:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[0, 5]]);\n      }));\n\n      function _delete(_x5) {\n        return _delete2.apply(this, arguments);\n      }\n\n      return _delete;\n    }()\n  }, {\n    key: \"close\",\n    value: function close() {\n      return this.db.close();\n    }\n  }, {\n    key: \"batch\",\n    value: function batch() {\n      var _this2 = this;\n\n      var ops = [];\n      return {\n        put: function put(key, value) {\n          ops.push({\n            type: 'put',\n            key: key.toString(),\n            value: value\n          });\n        },\n        delete: function _delete(key) {\n          ops.push({\n            type: 'del',\n            key: key.toString()\n          });\n        },\n        commit: function commit() {\n          return _this2.db.batch(ops);\n        }\n      };\n    }\n  }, {\n    key: \"query\",\n    value: function query(q) {\n      var values = true;\n\n      if (q.keysOnly != null) {\n        values = !q.keysOnly;\n      }\n\n      var opts = {\n        keys: true,\n        values: values,\n        keyAsBuffer: true\n      }; // Let the db do the prefix matching\n\n      if (q.prefix != null) {\n        var prefix = q.prefix.toString(); // Match keys greater than or equal to `prefix` and\n\n        opts.gte = prefix; // less than `prefix` + \\xFF (hex escape sequence)\n\n        opts.lt = prefix + '\\xFF';\n      }\n\n      var it = levelIteratorToIterator(this.db.iterator(opts));\n      it = map(it, function (_ref) {\n        var key = _ref.key,\n            value = _ref.value;\n        var res = {\n          key: new Key(key, false)\n        };\n\n        if (values) {\n          res.value = Buffer.from(value);\n        }\n\n        return res;\n      });\n\n      if (Array.isArray(q.filters)) {\n        it = q.filters.reduce(function (it, f) {\n          return filter(it, f);\n        }, it);\n      }\n\n      if (Array.isArray(q.orders)) {\n        it = q.orders.reduce(function (it, f) {\n          return sortAll(it, f);\n        }, it);\n      }\n\n      if (q.offset != null) {\n        var i = 0;\n        it = filter(it, function () {\n          return i++ >= q.offset;\n        });\n      }\n\n      if (q.limit != null) {\n        it = take(it, q.limit);\n      }\n\n      return it;\n    }\n  }]);\n\n  return LevelDatastore;\n}(Adapter);\n\nfunction levelIteratorToIterator(li) {\n  return _defineProperty({\n    next: function next() {\n      return new Promise(function (resolve, reject) {\n        li.next(function (err, key, value) {\n          if (err) return reject(err);\n\n          if (key == null) {\n            return li.end(function (err) {\n              if (err) return reject(err);\n              resolve({\n                done: true\n              });\n            });\n          }\n\n          resolve({\n            done: false,\n            value: {\n              key: key,\n              value: value\n            }\n          });\n        });\n      });\n    },\n    return: function _return() {\n      return new Promise(function (resolve, reject) {\n        li.end(function (err) {\n          if (err) return reject(err);\n          resolve({\n            done: true\n          });\n        });\n      });\n    }\n  }, Symbol.asyncIterator, function () {\n    return this;\n  });\n}\n\nmodule.exports = LevelDatastore;","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/datastore-level/src/index.js"],"names":["require","Key","Errors","Adapter","utils","filter","map","take","sortAll","LevelDatastore","path","opts","database","db","_initDb","valueEncoding","compression","open","dbOpenFailedError","key","value","put","toString","dbWriteFailedError","get","data","notFound","notFoundError","del","dbDeleteFailedError","close","ops","push","type","delete","commit","batch","q","values","keysOnly","keys","keyAsBuffer","prefix","gte","lt","it","levelIteratorToIterator","iterator","res","Buffer","from","Array","isArray","filters","reduce","f","orders","offset","i","limit","li","next","Promise","resolve","reject","err","end","done","return","Symbol","asyncIterator","module","exports"],"mappings":"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","sourcesContent":["'use strict'\n\nconst {\n  Key, Errors, Adapter,\n  utils: {\n    filter, map, take, sortAll\n  }\n} = require('interface-datastore')\n\n/**\n * A datastore backed by leveldb.\n */\nclass LevelDatastore extends Adapter {\n  constructor (path, opts) {\n    super()\n\n    let database\n\n    if (opts && opts.db) {\n      database = opts.db\n      delete opts.db\n    } else {\n      database = require('level')\n    }\n\n    this.db = this._initDb(database, path, opts)\n  }\n\n  _initDb (database, path, opts) {\n    return database(path, {\n      ...opts,\n      valueEncoding: 'binary',\n      compression: false // same default as go\n    })\n  }\n\n  async open () {\n    try {\n      await this.db.open()\n    } catch (err) {\n      throw Errors.dbOpenFailedError(err)\n    }\n  }\n\n  async put (key, value) {\n    try {\n      await this.db.put(key.toString(), value)\n    } catch (err) {\n      throw Errors.dbWriteFailedError(err)\n    }\n  }\n\n  async get (key) {\n    let data\n    try {\n      data = await this.db.get(key.toString())\n    } catch (err) {\n      if (err.notFound) throw Errors.notFoundError(err)\n      throw Errors.dbWriteFailedError(err)\n    }\n    return data\n  }\n\n  async has (key) {\n    try {\n      await this.db.get(key.toString())\n    } catch (err) {\n      if (err.notFound) return false\n      throw err\n    }\n    return true\n  }\n\n  async delete (key) {\n    try {\n      await this.db.del(key.toString())\n    } catch (err) {\n      throw Errors.dbDeleteFailedError(err)\n    }\n  }\n\n  close () {\n    return this.db.close()\n  }\n\n  batch () {\n    const ops = []\n    return {\n      put: (key, value) => {\n        ops.push({\n          type: 'put',\n          key: key.toString(),\n          value: value\n        })\n      },\n      delete: (key) => {\n        ops.push({\n          type: 'del',\n          key: key.toString()\n        })\n      },\n      commit: () => {\n        return this.db.batch(ops)\n      }\n    }\n  }\n\n  query (q) {\n    let values = true\n    if (q.keysOnly != null) {\n      values = !q.keysOnly\n    }\n\n    const opts = {\n      keys: true,\n      values: values,\n      keyAsBuffer: true\n    }\n\n    // Let the db do the prefix matching\n    if (q.prefix != null) {\n      const prefix = q.prefix.toString()\n      // Match keys greater than or equal to `prefix` and\n      opts.gte = prefix\n      // less than `prefix` + \\xFF (hex escape sequence)\n      opts.lt = prefix + '\\xFF'\n    }\n\n    let it = levelIteratorToIterator(\n      this.db.iterator(opts)\n    )\n\n    it = map(it, ({ key, value }) => {\n      const res = { key: new Key(key, false) }\n      if (values) {\n        res.value = Buffer.from(value)\n      }\n      return res\n    })\n\n    if (Array.isArray(q.filters)) {\n      it = q.filters.reduce((it, f) => filter(it, f), it)\n    }\n\n    if (Array.isArray(q.orders)) {\n      it = q.orders.reduce((it, f) => sortAll(it, f), it)\n    }\n\n    if (q.offset != null) {\n      let i = 0\n      it = filter(it, () => i++ >= q.offset)\n    }\n\n    if (q.limit != null) {\n      it = take(it, q.limit)\n    }\n\n    return it\n  }\n}\n\nfunction levelIteratorToIterator (li) {\n  return {\n    next: () => new Promise((resolve, reject) => {\n      li.next((err, key, value) => {\n        if (err) return reject(err)\n        if (key == null) {\n          return li.end(err => {\n            if (err) return reject(err)\n            resolve({ done: true })\n          })\n        }\n        resolve({ done: false, value: { key, value } })\n      })\n    }),\n    return: () => new Promise((resolve, reject) => {\n      li.end(err => {\n        if (err) return reject(err)\n        resolve({ done: true })\n      })\n    }),\n    [Symbol.asyncIterator] () {\n      return this\n    }\n  }\n}\n\nmodule.exports = LevelDatastore\n"]},"metadata":{},"sourceType":"script"}