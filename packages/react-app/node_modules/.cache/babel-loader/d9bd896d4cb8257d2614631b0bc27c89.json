{"ast":null,"code":"'use strict';\n\nexports.first = async iterator => {\n  for await (const value of iterator) {\n    return value;\n  }\n};\n\nexports.last = async iterator => {\n  let value;\n\n  for await (value of iterator) {// Intentionally empty\n  }\n\n  return value;\n};\n\nexports.all = async iterator => {\n  const values = [];\n\n  for await (const value of iterator) {\n    values.push(value);\n  }\n\n  return values;\n};\n\nexports.extendIterator = iterator => {\n  iterator.first = () => exports.first(iterator);\n\n  iterator.last = () => exports.last(iterator);\n\n  iterator.all = () => exports.all(iterator);\n\n  return iterator;\n};","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/ipld/src/util.js"],"names":["exports","first","iterator","value","last","all","values","push","extendIterator"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,KAAR,GAAgB,MAAOC,QAAP,IAAoB;AAClC,aAAW,MAAMC,KAAjB,IAA0BD,QAA1B,EAAoC;AAClC,WAAOC,KAAP;AACD;AACF,CAJD;;AAMAH,OAAO,CAACI,IAAR,GAAe,MAAOF,QAAP,IAAoB;AACjC,MAAIC,KAAJ;;AACA,aAAWA,KAAX,IAAoBD,QAApB,EAA8B,CAC5B;AACD;;AACD,SAAOC,KAAP;AACD,CAND;;AAQAH,OAAO,CAACK,GAAR,GAAc,MAAOH,QAAP,IAAoB;AAChC,QAAMI,MAAM,GAAG,EAAf;;AACA,aAAW,MAAMH,KAAjB,IAA0BD,QAA1B,EAAoC;AAClCI,IAAAA,MAAM,CAACC,IAAP,CAAYJ,KAAZ;AACD;;AACD,SAAOG,MAAP;AACD,CAND;;AAQAN,OAAO,CAACQ,cAAR,GAA0BN,QAAD,IAAc;AACrCA,EAAAA,QAAQ,CAACD,KAAT,GAAiB,MAAMD,OAAO,CAACC,KAAR,CAAcC,QAAd,CAAvB;;AACAA,EAAAA,QAAQ,CAACE,IAAT,GAAgB,MAAMJ,OAAO,CAACI,IAAR,CAAaF,QAAb,CAAtB;;AACAA,EAAAA,QAAQ,CAACG,GAAT,GAAe,MAAML,OAAO,CAACK,GAAR,CAAYH,QAAZ,CAArB;;AACA,SAAOA,QAAP;AACD,CALD","sourcesContent":["'use strict'\n\nexports.first = async (iterator) => {\n  for await (const value of iterator) {\n    return value\n  }\n}\n\nexports.last = async (iterator) => {\n  let value\n  for await (value of iterator) {\n    // Intentionally empty\n  }\n  return value\n}\n\nexports.all = async (iterator) => {\n  const values = []\n  for await (const value of iterator) {\n    values.push(value)\n  }\n  return values\n}\n\nexports.extendIterator = (iterator) => {\n  iterator.first = () => exports.first(iterator)\n  iterator.last = () => exports.last(iterator)\n  iterator.all = () => exports.all(iterator)\n  return iterator\n}\n"]},"metadata":{},"sourceType":"script"}