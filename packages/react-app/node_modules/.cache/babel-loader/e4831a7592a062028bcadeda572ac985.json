{"ast":null,"code":"var encodings = require('./lib/encodings');\n\nmodule.exports = Codec;\n\nfunction Codec(opts) {\n  if (!(this instanceof Codec)) {\n    return new Codec(opts);\n  }\n\n  this.opts = opts || {};\n  this.encodings = encodings;\n}\n\nCodec.prototype._encoding = function (encoding) {\n  if (typeof encoding === 'string') encoding = encodings[encoding];\n  if (!encoding) encoding = encodings.id;\n  return encoding;\n};\n\nCodec.prototype._keyEncoding = function (opts, batchOpts) {\n  return this._encoding(batchOpts && batchOpts.keyEncoding || opts && opts.keyEncoding || this.opts.keyEncoding);\n};\n\nCodec.prototype._valueEncoding = function (opts, batchOpts) {\n  return this._encoding(batchOpts && (batchOpts.valueEncoding || batchOpts.encoding) || opts && (opts.valueEncoding || opts.encoding) || this.opts.valueEncoding || this.opts.encoding);\n};\n\nCodec.prototype.encodeKey = function (key, opts, batchOpts) {\n  return this._keyEncoding(opts, batchOpts).encode(key);\n};\n\nCodec.prototype.encodeValue = function (value, opts, batchOpts) {\n  return this._valueEncoding(opts, batchOpts).encode(value);\n};\n\nCodec.prototype.decodeKey = function (key, opts) {\n  return this._keyEncoding(opts).decode(key);\n};\n\nCodec.prototype.decodeValue = function (value, opts) {\n  return this._valueEncoding(opts).decode(value);\n};\n\nCodec.prototype.encodeBatch = function (ops, opts) {\n  var self = this;\n  return ops.map(function (_op) {\n    var op = {\n      type: _op.type,\n      key: self.encodeKey(_op.key, opts, _op)\n    };\n    if (self.keyAsBuffer(opts, _op)) op.keyEncoding = 'binary';\n    if (_op.prefix) op.prefix = _op.prefix;\n\n    if ('value' in _op) {\n      op.value = self.encodeValue(_op.value, opts, _op);\n      if (self.valueAsBuffer(opts, _op)) op.valueEncoding = 'binary';\n    }\n\n    return op;\n  });\n};\n\nvar ltgtKeys = ['lt', 'gt', 'lte', 'gte', 'start', 'end'];\n\nCodec.prototype.encodeLtgt = function (ltgt) {\n  var self = this;\n  var ret = {};\n  Object.keys(ltgt).forEach(function (key) {\n    ret[key] = ltgtKeys.indexOf(key) > -1 ? self.encodeKey(ltgt[key], ltgt) : ltgt[key];\n  });\n  return ret;\n};\n\nCodec.prototype.createStreamDecoder = function (opts) {\n  var self = this;\n\n  if (opts.keys && opts.values) {\n    return function (key, value) {\n      return {\n        key: self.decodeKey(key, opts),\n        value: self.decodeValue(value, opts)\n      };\n    };\n  } else if (opts.keys) {\n    return function (key) {\n      return self.decodeKey(key, opts);\n    };\n  } else if (opts.values) {\n    return function (_, value) {\n      return self.decodeValue(value, opts);\n    };\n  } else {\n    return function () {};\n  }\n};\n\nCodec.prototype.keyAsBuffer = function (opts) {\n  return this._keyEncoding(opts).buffer;\n};\n\nCodec.prototype.valueAsBuffer = function (opts) {\n  return this._valueEncoding(opts).buffer;\n};","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/level-codec/index.js"],"names":["encodings","require","module","exports","Codec","opts","prototype","_encoding","encoding","id","_keyEncoding","batchOpts","keyEncoding","_valueEncoding","valueEncoding","encodeKey","key","encode","encodeValue","value","decodeKey","decode","decodeValue","encodeBatch","ops","self","map","_op","op","type","keyAsBuffer","prefix","valueAsBuffer","ltgtKeys","encodeLtgt","ltgt","ret","Object","keys","forEach","indexOf","createStreamDecoder","values","_","buffer"],"mappings":"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","sourcesContent":["var encodings = require('./lib/encodings')\n\nmodule.exports = Codec\n\nfunction Codec (opts) {\n  if (!(this instanceof Codec)) {\n    return new Codec(opts)\n  }\n  this.opts = opts || {}\n  this.encodings = encodings\n}\n\nCodec.prototype._encoding = function (encoding) {\n  if (typeof encoding === 'string') encoding = encodings[encoding]\n  if (!encoding) encoding = encodings.id\n  return encoding\n}\n\nCodec.prototype._keyEncoding = function (opts, batchOpts) {\n  return this._encoding((batchOpts && batchOpts.keyEncoding) ||\n                        (opts && opts.keyEncoding) ||\n                        this.opts.keyEncoding)\n}\n\nCodec.prototype._valueEncoding = function (opts, batchOpts) {\n  return this._encoding((batchOpts && (batchOpts.valueEncoding || batchOpts.encoding)) ||\n                        (opts && (opts.valueEncoding || opts.encoding)) ||\n                        (this.opts.valueEncoding || this.opts.encoding))\n}\n\nCodec.prototype.encodeKey = function (key, opts, batchOpts) {\n  return this._keyEncoding(opts, batchOpts).encode(key)\n}\n\nCodec.prototype.encodeValue = function (value, opts, batchOpts) {\n  return this._valueEncoding(opts, batchOpts).encode(value)\n}\n\nCodec.prototype.decodeKey = function (key, opts) {\n  return this._keyEncoding(opts).decode(key)\n}\n\nCodec.prototype.decodeValue = function (value, opts) {\n  return this._valueEncoding(opts).decode(value)\n}\n\nCodec.prototype.encodeBatch = function (ops, opts) {\n  var self = this\n\n  return ops.map(function (_op) {\n    var op = {\n      type: _op.type,\n      key: self.encodeKey(_op.key, opts, _op)\n    }\n    if (self.keyAsBuffer(opts, _op)) op.keyEncoding = 'binary'\n    if (_op.prefix) op.prefix = _op.prefix\n    if ('value' in _op) {\n      op.value = self.encodeValue(_op.value, opts, _op)\n      if (self.valueAsBuffer(opts, _op)) op.valueEncoding = 'binary'\n    }\n    return op\n  })\n}\n\nvar ltgtKeys = ['lt', 'gt', 'lte', 'gte', 'start', 'end']\n\nCodec.prototype.encodeLtgt = function (ltgt) {\n  var self = this\n  var ret = {}\n  Object.keys(ltgt).forEach(function (key) {\n    ret[key] = ltgtKeys.indexOf(key) > -1\n      ? self.encodeKey(ltgt[key], ltgt)\n      : ltgt[key]\n  })\n  return ret\n}\n\nCodec.prototype.createStreamDecoder = function (opts) {\n  var self = this\n\n  if (opts.keys && opts.values) {\n    return function (key, value) {\n      return {\n        key: self.decodeKey(key, opts),\n        value: self.decodeValue(value, opts)\n      }\n    }\n  } else if (opts.keys) {\n    return function (key) {\n      return self.decodeKey(key, opts)\n    }\n  } else if (opts.values) {\n    return function (_, value) {\n      return self.decodeValue(value, opts)\n    }\n  } else {\n    return function () {}\n  }\n}\n\nCodec.prototype.keyAsBuffer = function (opts) {\n  return this._keyEncoding(opts).buffer\n}\n\nCodec.prototype.valueAsBuffer = function (opts) {\n  return this._valueEncoding(opts).buffer\n}\n"]},"metadata":{},"sourceType":"script"}