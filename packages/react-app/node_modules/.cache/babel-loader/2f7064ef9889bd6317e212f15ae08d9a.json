{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _require = require('../../utils'),\n    withTimeoutOption = _require.withTimeoutOption;\n\nmodule.exports = function (_ref) {\n  var repo = _ref.repo;\n  return withTimeoutOption( /*#__PURE__*/function () {\n    var _list = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(options) {\n      var peers;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return repo.config.get('Bootstrap', options);\n\n            case 2:\n              peers = _context.sent;\n              return _context.abrupt(\"return\", {\n                Peers: peers || []\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function list(_x) {\n      return _list.apply(this, arguments);\n    }\n\n    return list;\n  }());\n};","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/ipfs/src/core/components/bootstrap/list.js"],"names":["require","withTimeoutOption","module","exports","repo","options","config","get","peers","Peers","list"],"mappings":"AAAA;;;;;;eAE8BA,OAAO,CAAC,aAAD,C;IAA7BC,iB,YAAAA,iB;;AAERC,MAAM,CAACC,OAAP,GAAiB,gBAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAC7B,SAAOH,iBAAiB;AAAA,yEAAC,iBAAqBI,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACHD,IAAI,CAACE,MAAL,CAAYC,GAAZ,CAAgB,WAAhB,EAA6BF,OAA7B,CADG;;AAAA;AACjBG,cAAAA,KADiB;AAAA,+CAEhB;AAAEC,gBAAAA,KAAK,EAAED,KAAK,IAAI;AAAlB,eAFgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA,aAAgBE,IAAhB;AAAA;AAAA;;AAAA,WAAgBA,IAAhB;AAAA,MAAxB;AAID,CALD","sourcesContent":["'use strict'\n\nconst { withTimeoutOption } = require('../../utils')\n\nmodule.exports = ({ repo }) => {\n  return withTimeoutOption(async function list (options) {\n    const peers = await repo.config.get('Bootstrap', options)\n    return { Peers: peers || [] }\n  })\n}\n"]},"metadata":{},"sourceType":"script"}