{"ast":null,"code":"const source = require('./source');\n\nconst sink = require('./sink');\n\nmodule.exports = (socket, options) => {\n  options = options || {};\n\n  if (options.binaryType) {\n    socket.binaryType = options.binaryType;\n  } else if (options.binary) {\n    socket.binaryType = 'arraybuffer';\n  }\n\n  const duplex = {\n    sink: sink(socket, options),\n    source: source(socket, options),\n    connected: () => duplex.source.connected()\n  };\n  return duplex;\n};","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/it-ws/duplex.js"],"names":["source","require","sink","module","exports","socket","options","binaryType","binary","duplex","connected"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,QAAD,CAApB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,CAACC,MAAD,EAASC,OAAT,KAAqB;AACpCA,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;;AAEA,MAAIA,OAAO,CAACC,UAAZ,EAAwB;AACtBF,IAAAA,MAAM,CAACE,UAAP,GAAoBD,OAAO,CAACC,UAA5B;AACD,GAFD,MAEO,IAAID,OAAO,CAACE,MAAZ,EAAoB;AACzBH,IAAAA,MAAM,CAACE,UAAP,GAAoB,aAApB;AACD;;AAED,QAAME,MAAM,GAAG;AACbP,IAAAA,IAAI,EAAEA,IAAI,CAACG,MAAD,EAASC,OAAT,CADG;AAEbN,IAAAA,MAAM,EAAEA,MAAM,CAACK,MAAD,EAASC,OAAT,CAFD;AAGbI,IAAAA,SAAS,EAAE,MAAMD,MAAM,CAACT,MAAP,CAAcU,SAAd;AAHJ,GAAf;AAMA,SAAOD,MAAP;AACD,CAhBD","sourcesContent":["const source = require('./source')\nconst sink = require('./sink')\n\nmodule.exports = (socket, options) => {\n  options = options || {}\n\n  if (options.binaryType) {\n    socket.binaryType = options.binaryType\n  } else if (options.binary) {\n    socket.binaryType = 'arraybuffer'\n  }\n\n  const duplex = {\n    sink: sink(socket, options),\n    source: source(socket, options),\n    connected: () => duplex.source.connected()\n  }\n\n  return duplex\n}\n"]},"metadata":{},"sourceType":"script"}