{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _createForOfIteratorHelper = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _asyncToGenerator = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar toUri = require('multiaddr-to-uri');\n\nvar debug = require('debug');\n\nvar CID = require('cids');\n\nvar shuffle = require('array-shuffle');\n\nvar AbortController = require('abort-controller');\n\nvar preload = require('./runtime/preload-nodejs');\n\nvar log = debug('ipfs:preload');\nlog.error = debug('ipfs:preload:error');\n\nmodule.exports = function (options) {\n  options = options || {};\n  options.enabled = Boolean(options.enabled);\n  options.addresses = options.addresses || [];\n\n  if (!options.enabled || !options.addresses.length) {\n    log('preload disabled');\n\n    var _api = function _api() {};\n\n    _api.start = function () {};\n\n    _api.stop = function () {};\n\n    return _api;\n  }\n\n  var stopped = true;\n  var requests = [];\n  var apiUris = options.addresses.map(toUri);\n\n  var api = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(path) {\n      var fallbackApiUris, success, now, _iterator, _step, _loop, _ret;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n\n              if (!stopped) {\n                _context2.next = 3;\n                break;\n              }\n\n              throw new Error(\"preload \".concat(path, \" but preloader is not started\"));\n\n            case 3:\n              if (typeof path !== 'string') {\n                path = new CID(path).toString();\n              }\n\n              fallbackApiUris = shuffle(apiUris);\n              success = false;\n              now = Date.now();\n              _iterator = _createForOfIteratorHelper(fallbackApiUris);\n              _context2.prev = 8;\n              _loop = /*#__PURE__*/_regeneratorRuntime.mark(function _loop() {\n                var uri, controller;\n                return _regeneratorRuntime.wrap(function _loop$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        uri = _step.value;\n\n                        if (!stopped) {\n                          _context.next = 3;\n                          break;\n                        }\n\n                        throw new Error(\"preload aborted for \".concat(path));\n\n                      case 3:\n                        controller = void 0;\n                        _context.prev = 4;\n                        controller = new AbortController();\n                        requests = requests.concat(controller);\n                        _context.next = 9;\n                        return preload(\"\".concat(uri, \"/api/v0/refs?r=true&arg=\").concat(encodeURIComponent(path)), {\n                          signal: controller.signal\n                        });\n\n                      case 9:\n                        success = true;\n                        _context.next = 15;\n                        break;\n\n                      case 12:\n                        _context.prev = 12;\n                        _context.t0 = _context[\"catch\"](4);\n                        if (_context.t0.type !== 'aborted') log.error(_context.t0);\n\n                      case 15:\n                        _context.prev = 15;\n                        requests = requests.filter(function (r) {\n                          return r !== controller;\n                        });\n                        return _context.finish(15);\n\n                      case 18:\n                        if (!success) {\n                          _context.next = 20;\n                          break;\n                        }\n\n                        return _context.abrupt(\"return\", \"break\");\n\n                      case 20:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _loop, null, [[4, 12, 15, 18]]);\n              });\n\n              _iterator.s();\n\n            case 11:\n              if ((_step = _iterator.n()).done) {\n                _context2.next = 18;\n                break;\n              }\n\n              return _context2.delegateYield(_loop(), \"t0\", 13);\n\n            case 13:\n              _ret = _context2.t0;\n\n              if (!(_ret === \"break\")) {\n                _context2.next = 16;\n                break;\n              }\n\n              return _context2.abrupt(\"break\", 18);\n\n            case 16:\n              _context2.next = 11;\n              break;\n\n            case 18:\n              _context2.next = 23;\n              break;\n\n            case 20:\n              _context2.prev = 20;\n              _context2.t1 = _context2[\"catch\"](8);\n\n              _iterator.e(_context2.t1);\n\n            case 23:\n              _context2.prev = 23;\n\n              _iterator.f();\n\n              return _context2.finish(23);\n\n            case 26:\n              log(\"\".concat(success ? '' : 'un', \"successfully preloaded \").concat(path, \" in \").concat(Date.now() - now, \"ms\"));\n              _context2.next = 32;\n              break;\n\n            case 29:\n              _context2.prev = 29;\n              _context2.t2 = _context2[\"catch\"](0);\n              log.error(_context2.t2);\n\n            case 32:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee, null, [[0, 29], [8, 20, 23, 26]]);\n    }));\n\n    return function api(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  api.start = function () {\n    stopped = false;\n  };\n\n  api.stop = function () {\n    stopped = true;\n    log(\"aborting \".concat(requests.length, \" pending preload request(s)\"));\n    requests.forEach(function (r) {\n      return r.abort();\n    });\n    requests = [];\n  };\n\n  return api;\n};","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/ipfs/src/core/preload.js"],"names":["toUri","require","debug","CID","shuffle","AbortController","preload","log","error","module","exports","options","enabled","Boolean","addresses","length","api","start","stop","stopped","requests","apiUris","map","path","Error","toString","fallbackApiUris","success","now","Date","uri","controller","concat","encodeURIComponent","signal","type","filter","r","forEach","abort"],"mappings":"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","sourcesContent":["'use strict'\n\nconst toUri = require('multiaddr-to-uri')\nconst debug = require('debug')\nconst CID = require('cids')\nconst shuffle = require('array-shuffle')\nconst AbortController = require('abort-controller')\nconst preload = require('./runtime/preload-nodejs')\n\nconst log = debug('ipfs:preload')\nlog.error = debug('ipfs:preload:error')\n\nmodule.exports = options => {\n  options = options || {}\n  options.enabled = Boolean(options.enabled)\n  options.addresses = options.addresses || []\n\n  if (!options.enabled || !options.addresses.length) {\n    log('preload disabled')\n    const api = () => {}\n    api.start = () => {}\n    api.stop = () => {}\n    return api\n  }\n\n  let stopped = true\n  let requests = []\n  const apiUris = options.addresses.map(toUri)\n\n  const api = async path => {\n    try {\n      if (stopped) throw new Error(`preload ${path} but preloader is not started`)\n\n      if (typeof path !== 'string') {\n        path = new CID(path).toString()\n      }\n\n      const fallbackApiUris = shuffle(apiUris)\n      let success = false\n      const now = Date.now()\n\n      for (const uri of fallbackApiUris) {\n        if (stopped) throw new Error(`preload aborted for ${path}`)\n        let controller\n\n        try {\n          controller = new AbortController()\n          requests = requests.concat(controller)\n          await preload(`${uri}/api/v0/refs?r=true&arg=${encodeURIComponent(path)}`, { signal: controller.signal })\n          success = true\n        } catch (err) {\n          if (err.type !== 'aborted') log.error(err)\n        } finally {\n          requests = requests.filter(r => r !== controller)\n        }\n\n        if (success) break\n      }\n\n      log(`${success ? '' : 'un'}successfully preloaded ${path} in ${Date.now() - now}ms`)\n    } catch (err) {\n      log.error(err)\n    }\n  }\n\n  api.start = () => {\n    stopped = false\n  }\n\n  api.stop = () => {\n    stopped = true\n    log(`aborting ${requests.length} pending preload request(s)`)\n    requests.forEach(r => r.abort())\n    requests = []\n  }\n\n  return api\n}\n"]},"metadata":{},"sourceType":"script"}