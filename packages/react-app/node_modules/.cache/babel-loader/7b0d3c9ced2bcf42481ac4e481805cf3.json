{"ast":null,"code":"'use strict'; // dns-nodejs gets replaced by dns-browser when webpacked/browserified\n\nconst dns = require('../runtime/dns-nodejs');\n\nconst {\n  withTimeoutOption\n} = require('../utils');\n\nfunction fqdnFixups(domain) {\n  // Allow resolution of .eth names via .eth.link\n  // More context at the go-ipfs counterpart: https://github.com/ipfs/go-ipfs/pull/6448\n  if (domain.endsWith('.eth')) {\n    domain = domain.replace(/.eth$/, '.eth.link');\n  }\n\n  return domain;\n}\n\nmodule.exports = () => {\n  return withTimeoutOption(async (domain, opts) => {\n    // eslint-disable-line require-await\n    opts = opts || {};\n\n    if (typeof domain !== 'string') {\n      throw new Error('Invalid arguments, domain must be a string');\n    }\n\n    domain = fqdnFixups(domain);\n    return dns(domain, opts);\n  });\n};","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/ipfs/src/core/components/dns.js"],"names":["dns","require","withTimeoutOption","fqdnFixups","domain","endsWith","replace","module","exports","opts","Error"],"mappings":"AAAA,a,CAEA;;AACA,MAAMA,GAAG,GAAGC,OAAO,CAAC,uBAAD,CAAnB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAwBD,OAAO,CAAC,UAAD,CAArC;;AAEA,SAASE,UAAT,CAAqBC,MAArB,EAA6B;AAC3B;AACA;AACA,MAAIA,MAAM,CAACC,QAAP,CAAgB,MAAhB,CAAJ,EAA6B;AAC3BD,IAAAA,MAAM,GAAGA,MAAM,CAACE,OAAP,CAAe,OAAf,EAAwB,WAAxB,CAAT;AACD;;AACD,SAAOF,MAAP;AACD;;AAEDG,MAAM,CAACC,OAAP,GAAiB,MAAM;AACrB,SAAON,iBAAiB,CAAC,OAAOE,MAAP,EAAeK,IAAf,KAAwB;AAAE;AACjDA,IAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;;AAEA,QAAI,OAAOL,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,YAAM,IAAIM,KAAJ,CAAU,4CAAV,CAAN;AACD;;AAEDN,IAAAA,MAAM,GAAGD,UAAU,CAACC,MAAD,CAAnB;AAEA,WAAOJ,GAAG,CAACI,MAAD,EAASK,IAAT,CAAV;AACD,GAVuB,CAAxB;AAWD,CAZD","sourcesContent":["'use strict'\n\n// dns-nodejs gets replaced by dns-browser when webpacked/browserified\nconst dns = require('../runtime/dns-nodejs')\nconst { withTimeoutOption } = require('../utils')\n\nfunction fqdnFixups (domain) {\n  // Allow resolution of .eth names via .eth.link\n  // More context at the go-ipfs counterpart: https://github.com/ipfs/go-ipfs/pull/6448\n  if (domain.endsWith('.eth')) {\n    domain = domain.replace(/.eth$/, '.eth.link')\n  }\n  return domain\n}\n\nmodule.exports = () => {\n  return withTimeoutOption(async (domain, opts) => { // eslint-disable-line require-await\n    opts = opts || {}\n\n    if (typeof domain !== 'string') {\n      throw new Error('Invalid arguments, domain must be a string')\n    }\n\n    domain = fqdnFixups(domain)\n\n    return dns(domain, opts)\n  })\n}\n"]},"metadata":{},"sourceType":"script"}