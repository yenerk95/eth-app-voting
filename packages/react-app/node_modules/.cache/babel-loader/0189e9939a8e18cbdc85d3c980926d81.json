{"ast":null,"code":"'use strict';\n\nconst isIPFS = require('is-ipfs'); // resolves the given path by parsing out protocol-specific entries\n// (e.g. /ipns/<node-key>) and then going through the /ipfs/ entries and returning the final node\n\n\nexports.resolvePath = ({\n  ipns,\n  dag\n}, name) => {\n  // ipns path\n  if (isIPFS.ipnsPath(name)) {\n    return ipns.resolve(name);\n  } // ipfs path\n\n\n  return dag.get(name.substring('/ipfs/'.length));\n};","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/ipfs/src/core/components/name/utils.js"],"names":["isIPFS","require","exports","resolvePath","ipns","dag","name","ipnsPath","resolve","get","substring","length"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAtB,C,CAEA;AACA;;;AACAC,OAAO,CAACC,WAAR,GAAsB,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,EAAgBC,IAAhB,KAAyB;AAC7C;AACA,MAAIN,MAAM,CAACO,QAAP,CAAgBD,IAAhB,CAAJ,EAA2B;AACzB,WAAOF,IAAI,CAACI,OAAL,CAAaF,IAAb,CAAP;AACD,GAJ4C,CAM7C;;;AACA,SAAOD,GAAG,CAACI,GAAJ,CAAQH,IAAI,CAACI,SAAL,CAAe,SAASC,MAAxB,CAAR,CAAP;AACD,CARD","sourcesContent":["'use strict'\n\nconst isIPFS = require('is-ipfs')\n\n// resolves the given path by parsing out protocol-specific entries\n// (e.g. /ipns/<node-key>) and then going through the /ipfs/ entries and returning the final node\nexports.resolvePath = ({ ipns, dag }, name) => {\n  // ipns path\n  if (isIPFS.ipnsPath(name)) {\n    return ipns.resolve(name)\n  }\n\n  // ipfs path\n  return dag.get(name.substring('/ipfs/'.length))\n}\n"]},"metadata":{},"sourceType":"script"}