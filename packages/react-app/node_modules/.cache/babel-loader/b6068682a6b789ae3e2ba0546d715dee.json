{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _require = require('ipld-dag-pb'),\n    DAGNode = _require.DAGNode;\n\nvar _require2 = require('../../../utils'),\n    withTimeoutOption = _require2.withTimeoutOption;\n\nmodule.exports = function (_ref) {\n  var ipld = _ref.ipld,\n      gcLock = _ref.gcLock,\n      preload = _ref.preload;\n\n  var get = require('../get')({\n    ipld: ipld,\n    preload: preload\n  });\n\n  var put = require('../put')({\n    ipld: ipld,\n    gcLock: gcLock,\n    preload: preload\n  });\n\n  return withTimeoutOption( /*#__PURE__*/function () {\n    var _setData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(multihash, data, options) {\n      var node;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return get(multihash, options);\n\n            case 2:\n              node = _context.sent;\n              return _context.abrupt(\"return\", put(new DAGNode(data, node.Links), options));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function setData(_x, _x2, _x3) {\n      return _setData.apply(this, arguments);\n    }\n\n    return setData;\n  }());\n};","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/ipfs/src/core/components/object/patch/set-data.js"],"names":["require","DAGNode","withTimeoutOption","module","exports","ipld","gcLock","preload","get","put","multihash","data","options","node","Links","setData"],"mappings":"AAAA;;;;;;eAEoBA,OAAO,CAAC,aAAD,C;IAAnBC,O,YAAAA,O;;gBACsBD,OAAO,CAAC,gBAAD,C;IAA7BE,iB,aAAAA,iB;;AAERC,MAAM,CAACC,OAAP,GAAiB,gBAA+B;AAAA,MAA5BC,IAA4B,QAA5BA,IAA4B;AAAA,MAAtBC,MAAsB,QAAtBA,MAAsB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAC9C,MAAMC,GAAG,GAAGR,OAAO,CAAC,QAAD,CAAP,CAAkB;AAAEK,IAAAA,IAAI,EAAJA,IAAF;AAAQE,IAAAA,OAAO,EAAPA;AAAR,GAAlB,CAAZ;;AACA,MAAME,GAAG,GAAGT,OAAO,CAAC,QAAD,CAAP,CAAkB;AAAEK,IAAAA,IAAI,EAAJA,IAAF;AAAQC,IAAAA,MAAM,EAANA,MAAR;AAAgBC,IAAAA,OAAO,EAAPA;AAAhB,GAAlB,CAAZ;;AAEA,SAAOL,iBAAiB;AAAA,4EAAC,iBAAwBQ,SAAxB,EAAmCC,IAAnC,EAAyCC,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACJJ,GAAG,CAACE,SAAD,EAAYE,OAAZ,CADC;;AAAA;AACjBC,cAAAA,IADiB;AAAA,+CAEhBJ,GAAG,CAAC,IAAIR,OAAJ,CAAYU,IAAZ,EAAkBE,IAAI,CAACC,KAAvB,CAAD,EAAgCF,OAAhC,CAFa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA,aAAgBG,OAAhB;AAAA;AAAA;;AAAA,WAAgBA,OAAhB;AAAA,MAAxB;AAID,CARD","sourcesContent":["'use strict'\n\nconst { DAGNode } = require('ipld-dag-pb')\nconst { withTimeoutOption } = require('../../../utils')\n\nmodule.exports = ({ ipld, gcLock, preload }) => {\n  const get = require('../get')({ ipld, preload })\n  const put = require('../put')({ ipld, gcLock, preload })\n\n  return withTimeoutOption(async function setData (multihash, data, options) {\n    const node = await get(multihash, options)\n    return put(new DAGNode(data, node.Links), options)\n  })\n}\n"]},"metadata":{},"sourceType":"script"}