{"ast":null,"code":"'use strict';\n\nconst {\n  parseArgs\n} = require('./utils');\n\nconst {\n  withTimeoutOption\n} = require('../../utils');\n\nmodule.exports = ({\n  ipld,\n  preload\n}) => {\n  return withTimeoutOption(async function* resolve(cid, path, options) {\n    // eslint-disable-line require-await\n    [cid, path, options] = parseArgs(cid, path, options);\n\n    if (options.preload !== false) {\n      preload(cid);\n    }\n\n    yield* ipld.resolve(cid, path, {\n      signal: options.signal\n    });\n  });\n};","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/ipfs/src/core/components/dag/resolve.js"],"names":["parseArgs","require","withTimeoutOption","module","exports","ipld","preload","resolve","cid","path","options","signal"],"mappings":"AAAA;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAgBC,OAAO,CAAC,SAAD,CAA7B;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAwBD,OAAO,CAAC,aAAD,CAArC;;AAEAE,MAAM,CAACC,OAAP,GAAiB,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AACtC,SAAOJ,iBAAiB,CAAC,gBAAiBK,OAAjB,CAA0BC,GAA1B,EAA+BC,IAA/B,EAAqCC,OAArC,EAA8C;AAAE;AACvE,KAACF,GAAD,EAAMC,IAAN,EAAYC,OAAZ,IAAuBV,SAAS,CAACQ,GAAD,EAAMC,IAAN,EAAYC,OAAZ,CAAhC;;AAEA,QAAIA,OAAO,CAACJ,OAAR,KAAoB,KAAxB,EAA+B;AAC7BA,MAAAA,OAAO,CAACE,GAAD,CAAP;AACD;;AAED,WAAQH,IAAI,CAACE,OAAL,CAAaC,GAAb,EAAkBC,IAAlB,EAAwB;AAAEE,MAAAA,MAAM,EAAED,OAAO,CAACC;AAAlB,KAAxB,CAAR;AACD,GARuB,CAAxB;AASD,CAVD","sourcesContent":["'use strict'\n\nconst { parseArgs } = require('./utils')\nconst { withTimeoutOption } = require('../../utils')\n\nmodule.exports = ({ ipld, preload }) => {\n  return withTimeoutOption(async function * resolve (cid, path, options) { // eslint-disable-line require-await\n    [cid, path, options] = parseArgs(cid, path, options)\n\n    if (options.preload !== false) {\n      preload(cid)\n    }\n\n    yield * ipld.resolve(cid, path, { signal: options.signal })\n  })\n}\n"]},"metadata":{},"sourceType":"script"}