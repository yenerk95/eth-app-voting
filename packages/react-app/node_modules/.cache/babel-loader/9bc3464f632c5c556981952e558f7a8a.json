{"ast":null,"code":"'use strict';\n\nvar varint = require('varint');\n\nvar isBuffer = require('is-buffer');\n\nmodule.exports = function (buf) {\n  if (!isBuffer(buf)) {\n    throw new Error('arg needs to be a buffer');\n  }\n\n  var result = [];\n\n  while (buf.length > 0) {\n    var num = varint.decode(buf);\n    result.push(num);\n    buf = buf.slice(varint.decode.bytes);\n  }\n\n  return result;\n};","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/varint-decoder/src/index.js"],"names":["varint","require","isBuffer","module","exports","buf","Error","result","length","num","decode","push","slice","bytes"],"mappings":"AAAA;;AAEA,IAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,WAAD,CAAxB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,UAACC,GAAD,EAAS;AACxB,MAAI,CAACH,QAAQ,CAACG,GAAD,CAAb,EAAoB;AAClB,UAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;AACD;;AAED,MAAMC,MAAM,GAAG,EAAf;;AAEA,SAAOF,GAAG,CAACG,MAAJ,GAAa,CAApB,EAAuB;AACrB,QAAMC,GAAG,GAAGT,MAAM,CAACU,MAAP,CAAcL,GAAd,CAAZ;AACAE,IAAAA,MAAM,CAACI,IAAP,CAAYF,GAAZ;AACAJ,IAAAA,GAAG,GAAGA,GAAG,CAACO,KAAJ,CAAUZ,MAAM,CAACU,MAAP,CAAcG,KAAxB,CAAN;AACD;;AAED,SAAON,MAAP;AACD,CAdD","sourcesContent":["'use strict'\n\nconst varint = require('varint')\nconst isBuffer = require('is-buffer')\n\nmodule.exports = (buf) => {\n  if (!isBuffer(buf)) {\n    throw new Error('arg needs to be a buffer')\n  }\n\n  const result = []\n\n  while (buf.length > 0) {\n    const num = varint.decode(buf)\n    result.push(num)\n    buf = buf.slice(varint.decode.bytes)\n  }\n\n  return result\n}\n"]},"metadata":{},"sourceType":"script"}