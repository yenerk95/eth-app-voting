{"ast":null,"code":"'use strict';\n\nconst CID = require('cids');\n\nconst errCode = require('err-code');\n\nconst {\n  withTimeoutOption\n} = require('../../utils');\n\nmodule.exports = ({\n  bitswap\n}) => {\n  return withTimeoutOption(async function unwant(keys, options) {\n    // eslint-disable-line require-await\n    if (!Array.isArray(keys)) {\n      keys = [keys];\n    }\n\n    try {\n      keys = keys.map(key => new CID(key));\n    } catch (err) {\n      throw errCode(err, 'ERR_INVALID_CID');\n    }\n\n    return bitswap.unwant(keys, options);\n  });\n};","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/ipfs/src/core/components/bitswap/unwant.js"],"names":["CID","require","errCode","withTimeoutOption","module","exports","bitswap","unwant","keys","options","Array","isArray","map","key","err"],"mappings":"AAAA;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,MAAD,CAAnB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,UAAD,CAAvB;;AACA,MAAM;AAAEE,EAAAA;AAAF,IAAwBF,OAAO,CAAC,aAAD,CAArC;;AAEAG,MAAM,CAACC,OAAP,GAAiB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAChC,SAAOH,iBAAiB,CAAC,eAAeI,MAAf,CAAuBC,IAAvB,EAA6BC,OAA7B,EAAsC;AAAE;AAC/D,QAAI,CAACC,KAAK,CAACC,OAAN,CAAcH,IAAd,CAAL,EAA0B;AACxBA,MAAAA,IAAI,GAAG,CAACA,IAAD,CAAP;AACD;;AAED,QAAI;AACFA,MAAAA,IAAI,GAAGA,IAAI,CAACI,GAAL,CAAUC,GAAD,IAAS,IAAIb,GAAJ,CAAQa,GAAR,CAAlB,CAAP;AACD,KAFD,CAEE,OAAOC,GAAP,EAAY;AACZ,YAAMZ,OAAO,CAACY,GAAD,EAAM,iBAAN,CAAb;AACD;;AAED,WAAOR,OAAO,CAACC,MAAR,CAAeC,IAAf,EAAqBC,OAArB,CAAP;AACD,GAZuB,CAAxB;AAaD,CAdD","sourcesContent":["'use strict'\n\nconst CID = require('cids')\nconst errCode = require('err-code')\nconst { withTimeoutOption } = require('../../utils')\n\nmodule.exports = ({ bitswap }) => {\n  return withTimeoutOption(async function unwant (keys, options) { // eslint-disable-line require-await\n    if (!Array.isArray(keys)) {\n      keys = [keys]\n    }\n\n    try {\n      keys = keys.map((key) => new CID(key))\n    } catch (err) {\n      throw errCode(err, 'ERR_INVALID_CID')\n    }\n\n    return bitswap.unwant(keys, options)\n  })\n}\n"]},"metadata":{},"sourceType":"script"}