{"ast":null,"code":"'use strict'; //based off rsvp https://github.com/tildeio/rsvp.js\n//license https://github.com/tildeio/rsvp.js/blob/master/LICENSE\n//https://github.com/tildeio/rsvp.js/blob/master/lib/rsvp/asap.js\n\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nexports.test = function () {\n  return Mutation;\n};\n\nexports.install = function (handle) {\n  var called = 0;\n  var observer = new Mutation(handle);\n  var element = global.document.createTextNode('');\n  observer.observe(element, {\n    characterData: true\n  });\n  return function () {\n    element.data = called = ++called % 2;\n  };\n};","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/immediate/lib/mutation.js"],"names":["Mutation","global","MutationObserver","WebKitMutationObserver","exports","test","install","handle","called","observer","element","document","createTextNode","observe","characterData","data"],"mappings":"AAAA,a,CACA;AACA;AACA;;AAEA,IAAIA,QAAQ,GAAGC,MAAM,CAACC,gBAAP,IAA2BD,MAAM,CAACE,sBAAjD;;AAEAC,OAAO,CAACC,IAAR,GAAe,YAAY;AACzB,SAAOL,QAAP;AACD,CAFD;;AAIAI,OAAO,CAACE,OAAR,GAAkB,UAAUC,MAAV,EAAkB;AAClC,MAAIC,MAAM,GAAG,CAAb;AACA,MAAIC,QAAQ,GAAG,IAAIT,QAAJ,CAAaO,MAAb,CAAf;AACA,MAAIG,OAAO,GAAGT,MAAM,CAACU,QAAP,CAAgBC,cAAhB,CAA+B,EAA/B,CAAd;AACAH,EAAAA,QAAQ,CAACI,OAAT,CAAiBH,OAAjB,EAA0B;AACxBI,IAAAA,aAAa,EAAE;AADS,GAA1B;AAGA,SAAO,YAAY;AACjBJ,IAAAA,OAAO,CAACK,IAAR,GAAgBP,MAAM,GAAG,EAAEA,MAAF,GAAW,CAApC;AACD,GAFD;AAGD,CAVD","sourcesContent":["'use strict';\n//based off rsvp https://github.com/tildeio/rsvp.js\n//license https://github.com/tildeio/rsvp.js/blob/master/LICENSE\n//https://github.com/tildeio/rsvp.js/blob/master/lib/rsvp/asap.js\n\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nexports.test = function () {\n  return Mutation;\n};\n\nexports.install = function (handle) {\n  var called = 0;\n  var observer = new Mutation(handle);\n  var element = global.document.createTextNode('');\n  observer.observe(element, {\n    characterData: true\n  });\n  return function () {\n    element.data = (called = ++called % 2);\n  };\n};"]},"metadata":{},"sourceType":"script"}