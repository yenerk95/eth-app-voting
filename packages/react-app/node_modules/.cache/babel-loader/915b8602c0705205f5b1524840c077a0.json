{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _require = require('./utils'),\n    getPubsubRouting = _require.getPubsubRouting;\n\nvar _require2 = require('../../../utils'),\n    withTimeoutOption = _require2.withTimeoutOption;\n\nmodule.exports = function (_ref) {\n  var ipns = _ref.ipns,\n      constructorOptions = _ref.options;\n\n  /**\n   * Cancel a name subscription.\n   *\n   * @param {String} name subscription name.\n   * @param {function(Error)} [callback]\n   * @returns {Promise<{ canceled: boolean }>}\n   */\n  return withTimeoutOption( /*#__PURE__*/function () {\n    var _cancel = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(name, options) {\n      var pubsub;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // eslint-disable-line require-await\n              pubsub = getPubsubRouting(ipns, constructorOptions);\n              return _context.abrupt(\"return\", pubsub.cancel(name, options));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function cancel(_x, _x2) {\n      return _cancel.apply(this, arguments);\n    }\n\n    return cancel;\n  }());\n};","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/ipfs/src/core/components/name/pubsub/cancel.js"],"names":["require","getPubsubRouting","withTimeoutOption","module","exports","ipns","constructorOptions","options","name","pubsub","cancel"],"mappings":"AAAA;;;;;;eAE6BA,OAAO,CAAC,SAAD,C;IAA5BC,gB,YAAAA,gB;;gBACsBD,OAAO,CAAC,gBAAD,C;IAA7BE,iB,aAAAA,iB;;AAERC,MAAM,CAACC,OAAP,GAAiB,gBAA2C;AAAA,MAAxCC,IAAwC,QAAxCA,IAAwC;AAAA,MAAzBC,kBAAyB,QAAlCC,OAAkC;;AAC1D;;;;;;;AAOA,SAAOL,iBAAiB;AAAA,2EAAC,iBAAuBM,IAAvB,EAA6BD,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;AACzDE,cAAAA,MADiB,GACRR,gBAAgB,CAACI,IAAD,EAAOC,kBAAP,CADR;AAAA,+CAEhBG,MAAM,CAACC,MAAP,CAAcF,IAAd,EAAoBD,OAApB,CAFgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA,aAAgBG,MAAhB;AAAA;AAAA;;AAAA,WAAgBA,MAAhB;AAAA,MAAxB;AAID,CAZD","sourcesContent":["'use strict'\n\nconst { getPubsubRouting } = require('./utils')\nconst { withTimeoutOption } = require('../../../utils')\n\nmodule.exports = ({ ipns, options: constructorOptions }) => {\n  /**\n   * Cancel a name subscription.\n   *\n   * @param {String} name subscription name.\n   * @param {function(Error)} [callback]\n   * @returns {Promise<{ canceled: boolean }>}\n   */\n  return withTimeoutOption(async function cancel (name, options) { // eslint-disable-line require-await\n    const pubsub = getPubsubRouting(ipns, constructorOptions)\n    return pubsub.cancel(name, options)\n  })\n}\n"]},"metadata":{},"sourceType":"script"}