{"ast":null,"code":"'use strict';\n\nconst exporter = require('ipfs-unixfs-exporter');\n\nconst {\n  normalizeCidPath,\n  withTimeoutOption\n} = require('../utils');\n\nmodule.exports = function ({\n  ipld,\n  preload\n}) {\n  return withTimeoutOption(async function* cat(ipfsPath, options) {\n    options = options || {};\n    ipfsPath = normalizeCidPath(ipfsPath);\n\n    if (options.preload !== false) {\n      const pathComponents = ipfsPath.split('/');\n      preload(pathComponents[0]);\n    }\n\n    const file = await exporter(ipfsPath, ipld, options); // File may not have unixfs prop if small & imported with rawLeaves true\n\n    if (file.unixfs && file.unixfs.type.includes('dir')) {\n      throw new Error('this dag node is a directory');\n    }\n\n    if (!file.content) {\n      throw new Error('this dag node has no content');\n    }\n\n    yield* file.content(options);\n  });\n};","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/ipfs/src/core/components/cat.js"],"names":["exporter","require","normalizeCidPath","withTimeoutOption","module","exports","ipld","preload","cat","ipfsPath","options","pathComponents","split","file","unixfs","type","includes","Error","content"],"mappings":"AAAA;;AAEA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,sBAAD,CAAxB;;AACA,MAAM;AAAEC,EAAAA,gBAAF;AAAoBC,EAAAA;AAApB,IAA0CF,OAAO,CAAC,UAAD,CAAvD;;AAEAG,MAAM,CAACC,OAAP,GAAiB,UAAU;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAV,EAA6B;AAC5C,SAAOJ,iBAAiB,CAAC,gBAAiBK,GAAjB,CAAsBC,QAAtB,EAAgCC,OAAhC,EAAyC;AAChEA,IAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AAEAD,IAAAA,QAAQ,GAAGP,gBAAgB,CAACO,QAAD,CAA3B;;AAEA,QAAIC,OAAO,CAACH,OAAR,KAAoB,KAAxB,EAA+B;AAC7B,YAAMI,cAAc,GAAGF,QAAQ,CAACG,KAAT,CAAe,GAAf,CAAvB;AACAL,MAAAA,OAAO,CAACI,cAAc,CAAC,CAAD,CAAf,CAAP;AACD;;AAED,UAAME,IAAI,GAAG,MAAMb,QAAQ,CAACS,QAAD,EAAWH,IAAX,EAAiBI,OAAjB,CAA3B,CAVgE,CAYhE;;AACA,QAAIG,IAAI,CAACC,MAAL,IAAeD,IAAI,CAACC,MAAL,CAAYC,IAAZ,CAAiBC,QAAjB,CAA0B,KAA1B,CAAnB,EAAqD;AACnD,YAAM,IAAIC,KAAJ,CAAU,8BAAV,CAAN;AACD;;AAED,QAAI,CAACJ,IAAI,CAACK,OAAV,EAAmB;AACjB,YAAM,IAAID,KAAJ,CAAU,8BAAV,CAAN;AACD;;AAED,WAAQJ,IAAI,CAACK,OAAL,CAAaR,OAAb,CAAR;AACD,GAtBuB,CAAxB;AAuBD,CAxBD","sourcesContent":["'use strict'\n\nconst exporter = require('ipfs-unixfs-exporter')\nconst { normalizeCidPath, withTimeoutOption } = require('../utils')\n\nmodule.exports = function ({ ipld, preload }) {\n  return withTimeoutOption(async function * cat (ipfsPath, options) {\n    options = options || {}\n\n    ipfsPath = normalizeCidPath(ipfsPath)\n\n    if (options.preload !== false) {\n      const pathComponents = ipfsPath.split('/')\n      preload(pathComponents[0])\n    }\n\n    const file = await exporter(ipfsPath, ipld, options)\n\n    // File may not have unixfs prop if small & imported with rawLeaves true\n    if (file.unixfs && file.unixfs.type.includes('dir')) {\n      throw new Error('this dag node is a directory')\n    }\n\n    if (!file.content) {\n      throw new Error('this dag node has no content')\n    }\n\n    yield * file.content(options)\n  })\n}\n"]},"metadata":{},"sourceType":"script"}