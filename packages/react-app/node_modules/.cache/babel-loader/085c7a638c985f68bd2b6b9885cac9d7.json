{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar UnixFS = require('ipfs-unixfs');\n\nvar persist = require('../utils/persist');\n\nvar _require = require('ipld-dag-pb'),\n    DAGNode = _require.DAGNode;\n\nvar dirBuilder = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(item, block, options) {\n    var unixfs, buffer, cid, path;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            unixfs = new UnixFS({\n              type: 'directory',\n              mtime: item.mtime,\n              mode: item.mode\n            });\n            buffer = new DAGNode(unixfs.marshal()).serialize();\n            _context.next = 4;\n            return persist(buffer, block, options);\n\n          case 4:\n            cid = _context.sent;\n            path = item.path;\n            return _context.abrupt(\"return\", {\n              cid: cid,\n              path: path,\n              unixfs: unixfs,\n              size: buffer.length\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function dirBuilder(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports = dirBuilder;","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/ipfs-unixfs-importer/src/dag-builder/dir.js"],"names":["UnixFS","require","persist","DAGNode","dirBuilder","item","block","options","unixfs","type","mtime","mode","buffer","marshal","serialize","cid","path","size","length","module","exports"],"mappings":"AAAA;;;;;;AAEA,IAAMA,MAAM,GAAGC,OAAO,CAAC,aAAD,CAAtB;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,kBAAD,CAAvB;;eAGIA,OAAO,CAAC,aAAD,C;IADTE,O,YAAAA,O;;AAGF,IAAMC,UAAU;AAAA,sEAAG,iBAAOC,IAAP,EAAaC,KAAb,EAAoBC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AACXC,YAAAA,MADW,GACF,IAAIR,MAAJ,CAAW;AACxBS,cAAAA,IAAI,EAAE,WADkB;AAExBC,cAAAA,KAAK,EAAEL,IAAI,CAACK,KAFY;AAGxBC,cAAAA,IAAI,EAAEN,IAAI,CAACM;AAHa,aAAX,CADE;AAOXC,YAAAA,MAPW,GAOF,IAAIT,OAAJ,CAAYK,MAAM,CAACK,OAAP,EAAZ,EAA8BC,SAA9B,EAPE;AAAA;AAAA,mBAQCZ,OAAO,CAACU,MAAD,EAASN,KAAT,EAAgBC,OAAhB,CARR;;AAAA;AAQXQ,YAAAA,GARW;AASXC,YAAAA,IATW,GASJX,IAAI,CAACW,IATD;AAAA,6CAWV;AACLD,cAAAA,GAAG,EAAHA,GADK;AAELC,cAAAA,IAAI,EAAJA,IAFK;AAGLR,cAAAA,MAAM,EAANA,MAHK;AAILS,cAAAA,IAAI,EAAEL,MAAM,CAACM;AAJR,aAXU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVd,UAAU;AAAA;AAAA;AAAA,GAAhB;;AAmBAe,MAAM,CAACC,OAAP,GAAiBhB,UAAjB","sourcesContent":["'use strict'\n\nconst UnixFS = require('ipfs-unixfs')\nconst persist = require('../utils/persist')\nconst {\n  DAGNode\n} = require('ipld-dag-pb')\n\nconst dirBuilder = async (item, block, options) => {\n  const unixfs = new UnixFS({\n    type: 'directory',\n    mtime: item.mtime,\n    mode: item.mode\n  })\n\n  const buffer = new DAGNode(unixfs.marshal()).serialize()\n  const cid = await persist(buffer, block, options)\n  const path = item.path\n\n  return {\n    cid,\n    path,\n    unixfs,\n    size: buffer.length\n  }\n}\n\nmodule.exports = dirBuilder\n"]},"metadata":{},"sourceType":"script"}