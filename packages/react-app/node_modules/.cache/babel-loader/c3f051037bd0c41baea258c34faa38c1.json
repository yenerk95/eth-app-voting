{"ast":null,"code":"'use strict';\n\nconst {\n  withTimeoutOption\n} = require('../../utils');\n\nmodule.exports = ({\n  libp2p\n}) => {\n  return withTimeoutOption(async function addrs(options) {\n    // eslint-disable-line require-await\n    const peers = [];\n\n    for (const [peerId, peer] of libp2p.peerStore.peers.entries(options)) {\n      peers.push({\n        id: peerId,\n        addrs: peer.addresses.map(mi => mi.multiaddr)\n      });\n    }\n\n    return peers;\n  });\n};","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/ipfs/src/core/components/swarm/addrs.js"],"names":["withTimeoutOption","require","module","exports","libp2p","addrs","options","peers","peerId","peer","peerStore","entries","push","id","addresses","map","mi","multiaddr"],"mappings":"AAAA;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAwBC,OAAO,CAAC,aAAD,CAArC;;AAEAC,MAAM,CAACC,OAAP,GAAiB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAC/B,SAAOJ,iBAAiB,CAAC,eAAeK,KAAf,CAAsBC,OAAtB,EAA+B;AAAE;AACxD,UAAMC,KAAK,GAAG,EAAd;;AACA,SAAK,MAAM,CAACC,MAAD,EAASC,IAAT,CAAX,IAA6BL,MAAM,CAACM,SAAP,CAAiBH,KAAjB,CAAuBI,OAAvB,CAA+BL,OAA/B,CAA7B,EAAsE;AACpEC,MAAAA,KAAK,CAACK,IAAN,CAAW;AACTC,QAAAA,EAAE,EAAEL,MADK;AAETH,QAAAA,KAAK,EAAEI,IAAI,CAACK,SAAL,CAAeC,GAAf,CAAoBC,EAAD,IAAQA,EAAE,CAACC,SAA9B;AAFE,OAAX;AAID;;AACD,WAAOV,KAAP;AACD,GATuB,CAAxB;AAUD,CAXD","sourcesContent":["'use strict'\n\nconst { withTimeoutOption } = require('../../utils')\n\nmodule.exports = ({ libp2p }) => {\n  return withTimeoutOption(async function addrs (options) { // eslint-disable-line require-await\n    const peers = []\n    for (const [peerId, peer] of libp2p.peerStore.peers.entries(options)) {\n      peers.push({\n        id: peerId,\n        addrs: peer.addresses.map((mi) => mi.multiaddr)\n      })\n    }\n    return peers\n  })\n}\n"]},"metadata":{},"sourceType":"script"}