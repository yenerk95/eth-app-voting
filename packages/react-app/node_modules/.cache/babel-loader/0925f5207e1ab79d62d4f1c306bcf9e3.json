{"ast":null,"code":"const Fifo = require('fast-fifo');\n\nconst defer = require('p-defer');\n\nmodule.exports = class PFifo {\n  constructor() {\n    this._buffer = new Fifo();\n    this._waitingConsumers = new Fifo();\n  }\n\n  push(chunk) {\n    const {\n      promise,\n      resolve\n    } = defer();\n\n    this._buffer.push({\n      chunk,\n      resolve\n    });\n\n    this._consume();\n\n    return promise;\n  }\n\n  _consume() {\n    while (!this._waitingConsumers.isEmpty() && !this._buffer.isEmpty()) {\n      const nextConsumer = this._waitingConsumers.shift();\n\n      const nextChunk = this._buffer.shift();\n\n      nextConsumer.resolve(nextChunk.chunk);\n      nextChunk.resolve();\n    }\n  }\n\n  shift() {\n    const {\n      promise,\n      resolve\n    } = defer();\n\n    this._waitingConsumers.push({\n      resolve\n    });\n\n    this._consume();\n\n    return promise;\n  }\n\n  isEmpty() {\n    return this._buffer.isEmpty();\n  }\n\n};","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/p-fifo/index.js"],"names":["Fifo","require","defer","module","exports","PFifo","constructor","_buffer","_waitingConsumers","push","chunk","promise","resolve","_consume","isEmpty","nextConsumer","shift","nextChunk"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,WAAD,CAApB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,SAAD,CAArB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,MAAMC,KAAN,CAAY;AAC3BC,EAAAA,WAAW,GAAI;AACb,SAAKC,OAAL,GAAe,IAAIP,IAAJ,EAAf;AACA,SAAKQ,iBAAL,GAAyB,IAAIR,IAAJ,EAAzB;AACD;;AAEDS,EAAAA,IAAI,CAAEC,KAAF,EAAS;AACX,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAAuBV,KAAK,EAAlC;;AACA,SAAKK,OAAL,CAAaE,IAAb,CAAkB;AAAEC,MAAAA,KAAF;AAASE,MAAAA;AAAT,KAAlB;;AACA,SAAKC,QAAL;;AACA,WAAOF,OAAP;AACD;;AAEDE,EAAAA,QAAQ,GAAI;AACV,WAAO,CAAC,KAAKL,iBAAL,CAAuBM,OAAvB,EAAD,IAAqC,CAAC,KAAKP,OAAL,CAAaO,OAAb,EAA7C,EAAqE;AACnE,YAAMC,YAAY,GAAG,KAAKP,iBAAL,CAAuBQ,KAAvB,EAArB;;AACA,YAAMC,SAAS,GAAG,KAAKV,OAAL,CAAaS,KAAb,EAAlB;;AACAD,MAAAA,YAAY,CAACH,OAAb,CAAqBK,SAAS,CAACP,KAA/B;AACAO,MAAAA,SAAS,CAACL,OAAV;AACD;AACF;;AAEDI,EAAAA,KAAK,GAAI;AACP,UAAM;AAAEL,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAAuBV,KAAK,EAAlC;;AACA,SAAKM,iBAAL,CAAuBC,IAAvB,CAA4B;AAAEG,MAAAA;AAAF,KAA5B;;AACA,SAAKC,QAAL;;AACA,WAAOF,OAAP;AACD;;AAEDG,EAAAA,OAAO,GAAI;AACT,WAAO,KAAKP,OAAL,CAAaO,OAAb,EAAP;AACD;;AA/B0B,CAA7B","sourcesContent":["const Fifo = require('fast-fifo')\nconst defer = require('p-defer')\n\nmodule.exports = class PFifo {\n  constructor () {\n    this._buffer = new Fifo()\n    this._waitingConsumers = new Fifo()\n  }\n\n  push (chunk) {\n    const { promise, resolve } = defer()\n    this._buffer.push({ chunk, resolve })\n    this._consume()\n    return promise\n  }\n\n  _consume () {\n    while (!this._waitingConsumers.isEmpty() && !this._buffer.isEmpty()) {\n      const nextConsumer = this._waitingConsumers.shift()\n      const nextChunk = this._buffer.shift()\n      nextConsumer.resolve(nextChunk.chunk)\n      nextChunk.resolve()\n    }\n  }\n\n  shift () {\n    const { promise, resolve } = defer()\n    this._waitingConsumers.push({ resolve })\n    this._consume()\n    return promise\n  }\n\n  isEmpty () {\n    return this._buffer.isEmpty()\n  }\n}\n"]},"metadata":{},"sourceType":"script"}