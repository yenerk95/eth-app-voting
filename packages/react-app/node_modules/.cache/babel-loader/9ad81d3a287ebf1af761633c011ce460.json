{"ast":null,"code":"const toDuplex = require('./duplex');\n\nmodule.exports = transform => async function* (source) {\n  const duplex = toDuplex(transform); // In a transform the sink and source are connected, an error in the sink\n  // will be thrown in the source also. Catch the sink error to avoid unhandled\n  // rejections and yield from the source.\n\n  duplex.sink(source).catch(_ => {});\n  yield* duplex.source;\n};","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/stream-to-it/transform.js"],"names":["toDuplex","require","module","exports","transform","source","duplex","sink","catch","_"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,SAAS,IAAI,iBAAkBC,MAAlB,EAA0B;AACtD,QAAMC,MAAM,GAAGN,QAAQ,CAACI,SAAD,CAAvB,CADsD,CAEtD;AACA;AACA;;AACAE,EAAAA,MAAM,CAACC,IAAP,CAAYF,MAAZ,EAAoBG,KAApB,CAA0BC,CAAC,IAAI,CAAE,CAAjC;AACA,SAAQH,MAAM,CAACD,MAAf;AACD,CAPD","sourcesContent":["const toDuplex = require('./duplex')\n\nmodule.exports = transform => async function * (source) {\n  const duplex = toDuplex(transform)\n  // In a transform the sink and source are connected, an error in the sink\n  // will be thrown in the source also. Catch the sink error to avoid unhandled\n  // rejections and yield from the source.\n  duplex.sink(source).catch(_ => {})\n  yield * duplex.source\n}\n"]},"metadata":{},"sourceType":"script"}