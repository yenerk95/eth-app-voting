{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar log = require('debug')('ipfs:components:start');\n\nvar Bitswap = require('ipfs-bitswap');\n\nvar multiaddr = require('multiaddr');\n\nvar get = require('dlv');\n\nvar defer = require('p-defer');\n\nvar errCode = require('err-code');\n\nvar IPNS = require('../ipns');\n\nvar routingConfig = require('../ipns/routing/config');\n\nvar _require = require('../errors'),\n    AlreadyInitializedError = _require.AlreadyInitializedError,\n    NotEnabledError = _require.NotEnabledError;\n\nvar Components = require('./');\n\nvar createMfsPreload = require('../mfs-preload');\n\nvar _require2 = require('../utils'),\n    withTimeoutOption = _require2.withTimeoutOption;\n\nvar WEBSOCKET_STAR_PROTO_CODE = 479;\n\nmodule.exports = function (_ref) {\n  var apiManager = _ref.apiManager,\n      constructorOptions = _ref.options,\n      blockService = _ref.blockService,\n      gcLock = _ref.gcLock,\n      initOptions = _ref.initOptions,\n      ipld = _ref.ipld,\n      keychain = _ref.keychain,\n      peerId = _ref.peerId,\n      pinManager = _ref.pinManager,\n      preload = _ref.preload,\n      print = _ref.print,\n      repo = _ref.repo;\n  return withTimeoutOption( /*#__PURE__*/function () {\n    var _start = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var startPromise, _apiManager$update, cancel, config, addrs, libp2p, ipnsRouting, ipns, bitswap, dag, pin, block, files, mfsPreload, api;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              startPromise = defer();\n              startPromise.promise.catch(function (err) {\n                return log(err);\n              });\n              _apiManager$update = apiManager.update({\n                start: function start() {\n                  return startPromise.promise;\n                }\n              }), cancel = _apiManager$update.cancel;\n              _context.prev = 3;\n\n              if (!repo.closed) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.next = 7;\n              return repo.open();\n\n            case 7:\n              _context.next = 9;\n              return repo.config.getAll();\n\n            case 9:\n              config = _context.sent;\n              addrs = [];\n\n              if (config.Addresses && config.Addresses.Swarm) {\n                config.Addresses.Swarm.forEach(function (addr) {\n                  var ma = multiaddr(addr); // Temporary error for users migrating using websocket-star multiaddrs for listenning on libp2p\n                  // websocket-star support was removed from ipfs and libp2p\n\n                  if (ma.protoCodes().includes(WEBSOCKET_STAR_PROTO_CODE)) {\n                    throw errCode(new Error('websocket-star swarm addresses are not supported. See https://github.com/ipfs/js-ipfs/issues/2779'), 'ERR_WEBSOCKET_STAR_SWARM_ADDR_NOT_SUPPORTED');\n                  } // multiaddrs that go via a signalling server or other intermediary (e.g. stardust,\n                  // webrtc-star) can have the intermediary's peer ID in the address, so append our\n                  // peer ID to the end of it\n\n\n                  var maId = ma.getPeerId();\n\n                  if (maId && maId !== peerId.toB58String()) {\n                    ma = ma.encapsulate(\"/p2p/\".concat(peerId.toB58String()));\n                  }\n\n                  addrs.push(ma);\n                });\n              }\n\n              libp2p = Components.libp2p({\n                options: constructorOptions,\n                repo: repo,\n                peerId: peerId,\n                multiaddrs: addrs,\n                config: config\n              });\n              _context.t0 = libp2p.keychain;\n\n              if (!_context.t0) {\n                _context.next = 17;\n                break;\n              }\n\n              _context.next = 17;\n              return libp2p.loadKeychain();\n\n            case 17:\n              _context.next = 19;\n              return libp2p.start();\n\n            case 19:\n              libp2p.transportManager.getAddrs().forEach(function (ma) {\n                return print(\"Swarm listening on \".concat(ma, \"/p2p/\").concat(peerId.toB58String()));\n              });\n              ipnsRouting = routingConfig({\n                libp2p: libp2p,\n                repo: repo,\n                peerId: peerId,\n                options: constructorOptions\n              });\n              ipns = new IPNS(ipnsRouting, repo.datastore, peerId, keychain, {\n                pass: initOptions.pass\n              });\n              bitswap = new Bitswap(libp2p, repo.blocks, {\n                statsEnabled: true\n              });\n              _context.next = 25;\n              return bitswap.start();\n\n            case 25:\n              blockService.setExchange(bitswap);\n              dag = {\n                get: Components.dag.get({\n                  ipld: ipld,\n                  preload: preload\n                }),\n                resolve: Components.dag.resolve({\n                  ipld: ipld,\n                  preload: preload\n                }),\n                tree: Components.dag.tree({\n                  ipld: ipld,\n                  preload: preload\n                })\n              };\n              pin = {\n                add: Components.pin.add({\n                  pinManager: pinManager,\n                  gcLock: gcLock,\n                  dag: dag\n                }),\n                ls: Components.pin.ls({\n                  pinManager: pinManager,\n                  dag: dag\n                }),\n                rm: Components.pin.rm({\n                  pinManager: pinManager,\n                  gcLock: gcLock,\n                  dag: dag\n                })\n              }; // FIXME: resolve this circular dependency\n\n              dag.put = Components.dag.put({\n                ipld: ipld,\n                pin: pin,\n                gcLock: gcLock,\n                preload: preload\n              });\n              block = {\n                get: Components.block.get({\n                  blockService: blockService,\n                  preload: preload\n                }),\n                put: Components.block.put({\n                  blockService: blockService,\n                  pin: pin,\n                  gcLock: gcLock,\n                  preload: preload\n                }),\n                rm: Components.block.rm({\n                  blockService: blockService,\n                  gcLock: gcLock,\n                  pinManager: pinManager\n                }),\n                stat: Components.block.stat({\n                  blockService: blockService,\n                  preload: preload\n                })\n              };\n              files = Components.files({\n                ipld: ipld,\n                block: block,\n                blockService: blockService,\n                repo: repo,\n                preload: preload,\n                options: constructorOptions\n              });\n              mfsPreload = createMfsPreload({\n                files: files,\n                preload: preload,\n                options: constructorOptions.preload\n              });\n              _context.next = 34;\n              return Promise.all([ipns.republisher.start(), preload.start(), mfsPreload.start()]);\n\n            case 34:\n              api = createApi({\n                apiManager: apiManager,\n                bitswap: bitswap,\n                block: block,\n                blockService: blockService,\n                config: config,\n                constructorOptions: constructorOptions,\n                dag: dag,\n                files: files,\n                gcLock: gcLock,\n                initOptions: initOptions,\n                ipld: ipld,\n                ipns: ipns,\n                keychain: keychain,\n                libp2p: libp2p,\n                mfsPreload: mfsPreload,\n                peerId: peerId,\n                pin: pin,\n                pinManager: pinManager,\n                preload: preload,\n                print: print,\n                repo: repo\n              });\n              apiManager.update(api, function () {\n                return undefined;\n              });\n              _context.next = 43;\n              break;\n\n            case 38:\n              _context.prev = 38;\n              _context.t1 = _context[\"catch\"](3);\n              cancel();\n              startPromise.reject(_context.t1);\n              throw _context.t1;\n\n            case 43:\n              startPromise.resolve(apiManager.api);\n              return _context.abrupt(\"return\", apiManager.api);\n\n            case 45:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 38]]);\n    }));\n\n    function start() {\n      return _start.apply(this, arguments);\n    }\n\n    return start;\n  }());\n};\n\nfunction createApi(_ref2) {\n  var apiManager = _ref2.apiManager,\n      bitswap = _ref2.bitswap,\n      block = _ref2.block,\n      blockService = _ref2.blockService,\n      config = _ref2.config,\n      constructorOptions = _ref2.constructorOptions,\n      dag = _ref2.dag,\n      files = _ref2.files,\n      gcLock = _ref2.gcLock,\n      initOptions = _ref2.initOptions,\n      ipld = _ref2.ipld,\n      ipns = _ref2.ipns,\n      keychain = _ref2.keychain,\n      libp2p = _ref2.libp2p,\n      mfsPreload = _ref2.mfsPreload,\n      peerId = _ref2.peerId,\n      pin = _ref2.pin,\n      pinManager = _ref2.pinManager,\n      preload = _ref2.preload,\n      print = _ref2.print,\n      repo = _ref2.repo;\n  var object = {\n    data: Components.object.data({\n      ipld: ipld,\n      preload: preload\n    }),\n    get: Components.object.get({\n      ipld: ipld,\n      preload: preload\n    }),\n    links: Components.object.links({\n      dag: dag\n    }),\n    new: Components.object.new({\n      ipld: ipld,\n      preload: preload\n    }),\n    patch: {\n      addLink: Components.object.patch.addLink({\n        ipld: ipld,\n        gcLock: gcLock,\n        preload: preload\n      }),\n      appendData: Components.object.patch.appendData({\n        ipld: ipld,\n        gcLock: gcLock,\n        preload: preload\n      }),\n      rmLink: Components.object.patch.rmLink({\n        ipld: ipld,\n        gcLock: gcLock,\n        preload: preload\n      }),\n      setData: Components.object.patch.setData({\n        ipld: ipld,\n        gcLock: gcLock,\n        preload: preload\n      })\n    },\n    put: Components.object.put({\n      ipld: ipld,\n      gcLock: gcLock,\n      preload: preload\n    }),\n    stat: Components.object.stat({\n      ipld: ipld,\n      preload: preload\n    })\n  };\n  var add = Components.add({\n    block: block,\n    preload: preload,\n    pin: pin,\n    gcLock: gcLock,\n    options: constructorOptions\n  });\n  var isOnline = Components.isOnline({\n    libp2p: libp2p\n  });\n\n  var dhtNotEnabled = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              throw new NotEnabledError('dht not enabled');\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function dhtNotEnabled() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var dht = get(libp2p, '_config.dht.enabled', false) ? Components.dht({\n    libp2p: libp2p,\n    repo: repo\n  }) : {\n    get: dhtNotEnabled,\n    put: dhtNotEnabled,\n    findProvs: dhtNotEnabled,\n    findPeer: dhtNotEnabled,\n    provide: dhtNotEnabled,\n    query: dhtNotEnabled\n  };\n  var dns = Components.dns();\n  var name = {\n    pubsub: {\n      cancel: Components.name.pubsub.cancel({\n        ipns: ipns,\n        options: constructorOptions\n      }),\n      state: Components.name.pubsub.state({\n        ipns: ipns,\n        options: constructorOptions\n      }),\n      subs: Components.name.pubsub.subs({\n        ipns: ipns,\n        options: constructorOptions\n      })\n    },\n    publish: Components.name.publish({\n      ipns: ipns,\n      dag: dag,\n      peerId: peerId,\n      isOnline: isOnline,\n      keychain: keychain,\n      options: constructorOptions\n    }),\n    resolve: Components.name.resolve({\n      dns: dns,\n      ipns: ipns,\n      peerId: peerId,\n      isOnline: isOnline,\n      options: constructorOptions\n    })\n  };\n  var resolve = Components.resolve({\n    name: name,\n    ipld: ipld\n  });\n  var refs = Components.refs({\n    ipld: ipld,\n    resolve: resolve,\n    preload: preload\n  });\n  refs.local = Components.refs.local({\n    repo: repo\n  });\n\n  var pubsubNotEnabled = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              throw new NotEnabledError('pubsub not enabled');\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function pubsubNotEnabled() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var pubsub = get(constructorOptions, 'config.Pubsub.Enabled', get(config, 'Pubsub.Enabled', true)) ? Components.pubsub({\n    libp2p: libp2p\n  }) : {\n    subscribe: pubsubNotEnabled,\n    unsubscribe: pubsubNotEnabled,\n    publish: pubsubNotEnabled,\n    ls: pubsubNotEnabled,\n    peers: pubsubNotEnabled\n  };\n  var api = {\n    add: add,\n    bitswap: {\n      stat: Components.bitswap.stat({\n        bitswap: bitswap\n      }),\n      unwant: Components.bitswap.unwant({\n        bitswap: bitswap\n      }),\n      wantlist: Components.bitswap.wantlist({\n        bitswap: bitswap\n      })\n    },\n    block: block,\n    bootstrap: {\n      add: Components.bootstrap.add({\n        repo: repo\n      }),\n      list: Components.bootstrap.list({\n        repo: repo\n      }),\n      rm: Components.bootstrap.rm({\n        repo: repo\n      })\n    },\n    cat: Components.cat({\n      ipld: ipld,\n      preload: preload\n    }),\n    config: Components.config({\n      repo: repo\n    }),\n    dag: dag,\n    dht: dht,\n    dns: dns,\n    files: files,\n    get: Components.get({\n      ipld: ipld,\n      preload: preload\n    }),\n    id: Components.id({\n      peerId: peerId,\n      libp2p: libp2p\n    }),\n    init: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                throw new AlreadyInitializedError();\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function init() {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }(),\n    // eslint-disable-line require-await\n    isOnline: isOnline,\n    key: {\n      export: Components.key.export({\n        keychain: keychain\n      }),\n      gen: Components.key.gen({\n        keychain: keychain\n      }),\n      import: Components.key.import({\n        keychain: keychain\n      }),\n      info: Components.key.info({\n        keychain: keychain\n      }),\n      list: Components.key.list({\n        keychain: keychain\n      }),\n      rename: Components.key.rename({\n        keychain: keychain\n      }),\n      rm: Components.key.rm({\n        keychain: keychain\n      })\n    },\n    libp2p: libp2p,\n    ls: Components.ls({\n      ipld: ipld,\n      preload: preload\n    }),\n    name: name,\n    object: object,\n    pin: pin,\n    ping: Components.ping({\n      libp2p: libp2p\n    }),\n    pubsub: pubsub,\n    refs: refs,\n    repo: {\n      gc: Components.repo.gc({\n        gcLock: gcLock,\n        pin: pin,\n        pinManager: pinManager,\n        refs: refs,\n        repo: repo\n      }),\n      stat: Components.repo.stat({\n        repo: repo\n      }),\n      version: Components.repo.version({\n        repo: repo\n      })\n    },\n    resolve: resolve,\n    start: function start() {\n      return apiManager.api;\n    },\n    stats: {\n      bitswap: Components.bitswap.stat({\n        bitswap: bitswap\n      }),\n      bw: libp2p.metrics ? Components.stats.bw({\n        libp2p: libp2p\n      }) : /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                throw new NotEnabledError('libp2p metrics not enabled');\n\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      })),\n      repo: Components.repo.stat({\n        repo: repo\n      })\n    },\n    stop: Components.stop({\n      apiManager: apiManager,\n      bitswap: bitswap,\n      options: constructorOptions,\n      blockService: blockService,\n      gcLock: gcLock,\n      initOptions: initOptions,\n      ipld: ipld,\n      ipns: ipns,\n      keychain: keychain,\n      libp2p: libp2p,\n      mfsPreload: mfsPreload,\n      peerId: peerId,\n      preload: preload,\n      print: print,\n      repo: repo\n    }),\n    swarm: {\n      addrs: Components.swarm.addrs({\n        libp2p: libp2p\n      }),\n      connect: Components.swarm.connect({\n        libp2p: libp2p\n      }),\n      disconnect: Components.swarm.disconnect({\n        libp2p: libp2p\n      }),\n      localAddrs: Components.swarm.localAddrs({\n        multiaddrs: libp2p.multiaddrs\n      }),\n      peers: Components.swarm.peers({\n        libp2p: libp2p\n      })\n    },\n    version: Components.version({\n      repo: repo\n    })\n  };\n  return api;\n}","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/ipfs/src/core/components/start.js"],"names":["log","require","Bitswap","multiaddr","get","defer","errCode","IPNS","routingConfig","AlreadyInitializedError","NotEnabledError","Components","createMfsPreload","withTimeoutOption","WEBSOCKET_STAR_PROTO_CODE","module","exports","apiManager","constructorOptions","options","blockService","gcLock","initOptions","ipld","keychain","peerId","pinManager","preload","print","repo","startPromise","promise","catch","err","update","start","cancel","closed","open","config","getAll","addrs","Addresses","Swarm","forEach","addr","ma","protoCodes","includes","Error","maId","getPeerId","toB58String","encapsulate","push","libp2p","multiaddrs","loadKeychain","transportManager","getAddrs","ipnsRouting","ipns","datastore","pass","bitswap","blocks","statsEnabled","setExchange","dag","resolve","tree","pin","add","ls","rm","put","block","stat","files","mfsPreload","Promise","all","republisher","api","createApi","undefined","reject","object","data","links","new","patch","addLink","appendData","rmLink","setData","isOnline","dhtNotEnabled","dht","findProvs","findPeer","provide","query","dns","name","pubsub","state","subs","publish","refs","local","pubsubNotEnabled","subscribe","unsubscribe","peers","unwant","wantlist","bootstrap","list","cat","id","init","key","export","gen","import","info","rename","ping","gc","version","stats","bw","metrics","stop","swarm","connect","disconnect","localAddrs"],"mappings":"AAAA;;;;;;AAEA,IAAMA,GAAG,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiB,uBAAjB,CAAZ;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,cAAD,CAAvB;;AACA,IAAME,SAAS,GAAGF,OAAO,CAAC,WAAD,CAAzB;;AACA,IAAMG,GAAG,GAAGH,OAAO,CAAC,KAAD,CAAnB;;AACA,IAAMI,KAAK,GAAGJ,OAAO,CAAC,SAAD,CAArB;;AACA,IAAMK,OAAO,GAAGL,OAAO,CAAC,UAAD,CAAvB;;AACA,IAAMM,IAAI,GAAGN,OAAO,CAAC,SAAD,CAApB;;AACA,IAAMO,aAAa,GAAGP,OAAO,CAAC,wBAAD,CAA7B;;eACqDA,OAAO,CAAC,WAAD,C;IAApDQ,uB,YAAAA,uB;IAAyBC,e,YAAAA,e;;AACjC,IAAMC,UAAU,GAAGV,OAAO,CAAC,IAAD,CAA1B;;AACA,IAAMW,gBAAgB,GAAGX,OAAO,CAAC,gBAAD,CAAhC;;gBAC8BA,OAAO,CAAC,UAAD,C;IAA7BY,iB,aAAAA,iB;;AAER,IAAMC,yBAAyB,GAAG,GAAlC;;AAEAC,MAAM,CAACC,OAAP,GAAiB;AAAA,MACfC,UADe,QACfA,UADe;AAAA,MAENC,kBAFM,QAEfC,OAFe;AAAA,MAGfC,YAHe,QAGfA,YAHe;AAAA,MAIfC,MAJe,QAIfA,MAJe;AAAA,MAKfC,WALe,QAKfA,WALe;AAAA,MAMfC,IANe,QAMfA,IANe;AAAA,MAOfC,QAPe,QAOfA,QAPe;AAAA,MAQfC,MARe,QAQfA,MARe;AAAA,MASfC,UATe,QASfA,UATe;AAAA,MAUfC,OAVe,QAUfA,OAVe;AAAA,MAWfC,KAXe,QAWfA,KAXe;AAAA,MAYfC,IAZe,QAYfA,IAZe;AAAA,SAaXhB,iBAAiB;AAAA,0EAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAChBiB,cAAAA,YADgB,GACDzB,KAAK,EADJ;AAEtByB,cAAAA,YAAY,CAACC,OAAb,CAAqBC,KAArB,CAA2B,UAACC,GAAD;AAAA,uBAASjC,GAAG,CAACiC,GAAD,CAAZ;AAAA,eAA3B;AAFsB,mCAIHhB,UAAU,CAACiB,MAAX,CAAkB;AAAEC,gBAAAA,KAAK,EAAE;AAAA,yBAAML,YAAY,CAACC,OAAnB;AAAA;AAAT,eAAlB,CAJG,EAIdK,MAJc,sBAIdA,MAJc;AAAA;;AAAA,mBAQhBP,IAAI,CAACQ,MARW;AAAA;AAAA;AAAA;;AAAA;AAAA,qBASZR,IAAI,CAACS,IAAL,EATY;;AAAA;AAAA;AAAA,qBAYCT,IAAI,CAACU,MAAL,CAAYC,MAAZ,EAZD;;AAAA;AAYdD,cAAAA,MAZc;AAadE,cAAAA,KAbc,GAaN,EAbM;;AAepB,kBAAIF,MAAM,CAACG,SAAP,IAAoBH,MAAM,CAACG,SAAP,CAAiBC,KAAzC,EAAgD;AAC9CJ,gBAAAA,MAAM,CAACG,SAAP,CAAiBC,KAAjB,CAAuBC,OAAvB,CAA+B,UAAAC,IAAI,EAAI;AACrC,sBAAIC,EAAE,GAAG3C,SAAS,CAAC0C,IAAD,CAAlB,CADqC,CAGrC;AACA;;AACA,sBAAIC,EAAE,CAACC,UAAH,GAAgBC,QAAhB,CAAyBlC,yBAAzB,CAAJ,EAAyD;AACvD,0BAAMR,OAAO,CAAC,IAAI2C,KAAJ,CAAU,mGAAV,CAAD,EAAiH,6CAAjH,CAAb;AACD,mBAPoC,CASrC;AACA;AACA;;;AACA,sBAAMC,IAAI,GAAGJ,EAAE,CAACK,SAAH,EAAb;;AACA,sBAAID,IAAI,IAAIA,IAAI,KAAKzB,MAAM,CAAC2B,WAAP,EAArB,EAA2C;AACzCN,oBAAAA,EAAE,GAAGA,EAAE,CAACO,WAAH,gBAAuB5B,MAAM,CAAC2B,WAAP,EAAvB,EAAL;AACD;;AAEDX,kBAAAA,KAAK,CAACa,IAAN,CAAWR,EAAX;AACD,iBAlBD;AAmBD;;AAEKS,cAAAA,MArCc,GAqCL5C,UAAU,CAAC4C,MAAX,CAAkB;AAC/BpC,gBAAAA,OAAO,EAAED,kBADsB;AAE/BW,gBAAAA,IAAI,EAAJA,IAF+B;AAG/BJ,gBAAAA,MAAM,EAAEA,MAHuB;AAI/B+B,gBAAAA,UAAU,EAAEf,KAJmB;AAK/BF,gBAAAA,MAAM,EAANA;AAL+B,eAAlB,CArCK;AAAA,4BA6CpBgB,MAAM,CAAC/B,QA7Ca;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,qBA6CK+B,MAAM,CAACE,YAAP,EA7CL;;AAAA;AAAA;AAAA,qBA+CdF,MAAM,CAACpB,KAAP,EA/Cc;;AAAA;AAiDpBoB,cAAAA,MAAM,CAACG,gBAAP,CAAwBC,QAAxB,GAAmCf,OAAnC,CAA2C,UAAAE,EAAE;AAAA,uBAAIlB,KAAK,8BAAuBkB,EAAvB,kBAAiCrB,MAAM,CAAC2B,WAAP,EAAjC,EAAT;AAAA,eAA7C;AAEMQ,cAAAA,WAnDc,GAmDApD,aAAa,CAAC;AAAE+C,gBAAAA,MAAM,EAANA,MAAF;AAAU1B,gBAAAA,IAAI,EAAJA,IAAV;AAAgBJ,gBAAAA,MAAM,EAANA,MAAhB;AAAwBN,gBAAAA,OAAO,EAAED;AAAjC,eAAD,CAnDb;AAoDd2C,cAAAA,IApDc,GAoDP,IAAItD,IAAJ,CAASqD,WAAT,EAAsB/B,IAAI,CAACiC,SAA3B,EAAsCrC,MAAtC,EAA8CD,QAA9C,EAAwD;AAAEuC,gBAAAA,IAAI,EAAEzC,WAAW,CAACyC;AAApB,eAAxD,CApDO;AAqDdC,cAAAA,OArDc,GAqDJ,IAAI9D,OAAJ,CAAYqD,MAAZ,EAAoB1B,IAAI,CAACoC,MAAzB,EAAiC;AAAEC,gBAAAA,YAAY,EAAE;AAAhB,eAAjC,CArDI;AAAA;AAAA,qBAuDdF,OAAO,CAAC7B,KAAR,EAvDc;;AAAA;AAyDpBf,cAAAA,YAAY,CAAC+C,WAAb,CAAyBH,OAAzB;AAEMI,cAAAA,GA3Dc,GA2DR;AACVhE,gBAAAA,GAAG,EAAEO,UAAU,CAACyD,GAAX,CAAehE,GAAf,CAAmB;AAAEmB,kBAAAA,IAAI,EAAJA,IAAF;AAAQI,kBAAAA,OAAO,EAAPA;AAAR,iBAAnB,CADK;AAEV0C,gBAAAA,OAAO,EAAE1D,UAAU,CAACyD,GAAX,CAAeC,OAAf,CAAuB;AAAE9C,kBAAAA,IAAI,EAAJA,IAAF;AAAQI,kBAAAA,OAAO,EAAPA;AAAR,iBAAvB,CAFC;AAGV2C,gBAAAA,IAAI,EAAE3D,UAAU,CAACyD,GAAX,CAAeE,IAAf,CAAoB;AAAE/C,kBAAAA,IAAI,EAAJA,IAAF;AAAQI,kBAAAA,OAAO,EAAPA;AAAR,iBAApB;AAHI,eA3DQ;AAiEd4C,cAAAA,GAjEc,GAiER;AACVC,gBAAAA,GAAG,EAAE7D,UAAU,CAAC4D,GAAX,CAAeC,GAAf,CAAmB;AAAE9C,kBAAAA,UAAU,EAAVA,UAAF;AAAcL,kBAAAA,MAAM,EAANA,MAAd;AAAsB+C,kBAAAA,GAAG,EAAHA;AAAtB,iBAAnB,CADK;AAEVK,gBAAAA,EAAE,EAAE9D,UAAU,CAAC4D,GAAX,CAAeE,EAAf,CAAkB;AAAE/C,kBAAAA,UAAU,EAAVA,UAAF;AAAc0C,kBAAAA,GAAG,EAAHA;AAAd,iBAAlB,CAFM;AAGVM,gBAAAA,EAAE,EAAE/D,UAAU,CAAC4D,GAAX,CAAeG,EAAf,CAAkB;AAAEhD,kBAAAA,UAAU,EAAVA,UAAF;AAAcL,kBAAAA,MAAM,EAANA,MAAd;AAAsB+C,kBAAAA,GAAG,EAAHA;AAAtB,iBAAlB;AAHM,eAjEQ,EAuEpB;;AACAA,cAAAA,GAAG,CAACO,GAAJ,GAAUhE,UAAU,CAACyD,GAAX,CAAeO,GAAf,CAAmB;AAAEpD,gBAAAA,IAAI,EAAJA,IAAF;AAAQgD,gBAAAA,GAAG,EAAHA,GAAR;AAAalD,gBAAAA,MAAM,EAANA,MAAb;AAAqBM,gBAAAA,OAAO,EAAPA;AAArB,eAAnB,CAAV;AAEMiD,cAAAA,KA1Ec,GA0EN;AACZxE,gBAAAA,GAAG,EAAEO,UAAU,CAACiE,KAAX,CAAiBxE,GAAjB,CAAqB;AAAEgB,kBAAAA,YAAY,EAAZA,YAAF;AAAgBO,kBAAAA,OAAO,EAAPA;AAAhB,iBAArB,CADO;AAEZgD,gBAAAA,GAAG,EAAEhE,UAAU,CAACiE,KAAX,CAAiBD,GAAjB,CAAqB;AAAEvD,kBAAAA,YAAY,EAAZA,YAAF;AAAgBmD,kBAAAA,GAAG,EAAHA,GAAhB;AAAqBlD,kBAAAA,MAAM,EAANA,MAArB;AAA6BM,kBAAAA,OAAO,EAAPA;AAA7B,iBAArB,CAFO;AAGZ+C,gBAAAA,EAAE,EAAE/D,UAAU,CAACiE,KAAX,CAAiBF,EAAjB,CAAoB;AAAEtD,kBAAAA,YAAY,EAAZA,YAAF;AAAgBC,kBAAAA,MAAM,EAANA,MAAhB;AAAwBK,kBAAAA,UAAU,EAAVA;AAAxB,iBAApB,CAHQ;AAIZmD,gBAAAA,IAAI,EAAElE,UAAU,CAACiE,KAAX,CAAiBC,IAAjB,CAAsB;AAAEzD,kBAAAA,YAAY,EAAZA,YAAF;AAAgBO,kBAAAA,OAAO,EAAPA;AAAhB,iBAAtB;AAJM,eA1EM;AAiFdmD,cAAAA,KAjFc,GAiFNnE,UAAU,CAACmE,KAAX,CAAiB;AAAEvD,gBAAAA,IAAI,EAAJA,IAAF;AAAQqD,gBAAAA,KAAK,EAALA,KAAR;AAAexD,gBAAAA,YAAY,EAAZA,YAAf;AAA6BS,gBAAAA,IAAI,EAAJA,IAA7B;AAAmCF,gBAAAA,OAAO,EAAPA,OAAnC;AAA4CR,gBAAAA,OAAO,EAAED;AAArD,eAAjB,CAjFM;AAkFd6D,cAAAA,UAlFc,GAkFDnE,gBAAgB,CAAC;AAAEkE,gBAAAA,KAAK,EAALA,KAAF;AAASnD,gBAAAA,OAAO,EAAPA,OAAT;AAAkBR,gBAAAA,OAAO,EAAED,kBAAkB,CAACS;AAA9C,eAAD,CAlFf;AAAA;AAAA,qBAoFdqD,OAAO,CAACC,GAAR,CAAY,CAChBpB,IAAI,CAACqB,WAAL,CAAiB/C,KAAjB,EADgB,EAEhBR,OAAO,CAACQ,KAAR,EAFgB,EAGhB4C,UAAU,CAAC5C,KAAX,EAHgB,CAAZ,CApFc;;AAAA;AA0FdgD,cAAAA,GA1Fc,GA0FRC,SAAS,CAAC;AACpBnE,gBAAAA,UAAU,EAAVA,UADoB;AAEpB+C,gBAAAA,OAAO,EAAPA,OAFoB;AAGpBY,gBAAAA,KAAK,EAALA,KAHoB;AAIpBxD,gBAAAA,YAAY,EAAZA,YAJoB;AAKpBmB,gBAAAA,MAAM,EAANA,MALoB;AAMpBrB,gBAAAA,kBAAkB,EAAlBA,kBANoB;AAOpBkD,gBAAAA,GAAG,EAAHA,GAPoB;AAQpBU,gBAAAA,KAAK,EAALA,KARoB;AASpBzD,gBAAAA,MAAM,EAANA,MAToB;AAUpBC,gBAAAA,WAAW,EAAXA,WAVoB;AAWpBC,gBAAAA,IAAI,EAAJA,IAXoB;AAYpBsC,gBAAAA,IAAI,EAAJA,IAZoB;AAapBrC,gBAAAA,QAAQ,EAARA,QAboB;AAcpB+B,gBAAAA,MAAM,EAANA,MAdoB;AAepBwB,gBAAAA,UAAU,EAAVA,UAfoB;AAgBpBtD,gBAAAA,MAAM,EAANA,MAhBoB;AAiBpB8C,gBAAAA,GAAG,EAAHA,GAjBoB;AAkBpB7C,gBAAAA,UAAU,EAAVA,UAlBoB;AAmBpBC,gBAAAA,OAAO,EAAPA,OAnBoB;AAoBpBC,gBAAAA,KAAK,EAALA,KApBoB;AAqBpBC,gBAAAA,IAAI,EAAJA;AArBoB,eAAD,CA1FD;AAkHpBZ,cAAAA,UAAU,CAACiB,MAAX,CAAkBiD,GAAlB,EAAuB;AAAA,uBAAME,SAAN;AAAA,eAAvB;AAlHoB;AAAA;;AAAA;AAAA;AAAA;AAoHpBjD,cAAAA,MAAM;AACNN,cAAAA,YAAY,CAACwD,MAAb;AArHoB;;AAAA;AAyHtBxD,cAAAA,YAAY,CAACuC,OAAb,CAAqBpD,UAAU,CAACkE,GAAhC;AAzHsB,+CA0HflE,UAAU,CAACkE,GA1HI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA,aAAgBhD,KAAhB;AAAA;AAAA;;AAAA,WAAgBA,KAAhB;AAAA,MAbN;AAAA,CAAjB;;AA0IA,SAASiD,SAAT,QAsBG;AAAA,MArBDnE,UAqBC,SArBDA,UAqBC;AAAA,MApBD+C,OAoBC,SApBDA,OAoBC;AAAA,MAnBDY,KAmBC,SAnBDA,KAmBC;AAAA,MAlBDxD,YAkBC,SAlBDA,YAkBC;AAAA,MAjBDmB,MAiBC,SAjBDA,MAiBC;AAAA,MAhBDrB,kBAgBC,SAhBDA,kBAgBC;AAAA,MAfDkD,GAeC,SAfDA,GAeC;AAAA,MAdDU,KAcC,SAdDA,KAcC;AAAA,MAbDzD,MAaC,SAbDA,MAaC;AAAA,MAZDC,WAYC,SAZDA,WAYC;AAAA,MAXDC,IAWC,SAXDA,IAWC;AAAA,MAVDsC,IAUC,SAVDA,IAUC;AAAA,MATDrC,QASC,SATDA,QASC;AAAA,MARD+B,MAQC,SARDA,MAQC;AAAA,MAPDwB,UAOC,SAPDA,UAOC;AAAA,MANDtD,MAMC,SANDA,MAMC;AAAA,MALD8C,GAKC,SALDA,GAKC;AAAA,MAJD7C,UAIC,SAJDA,UAIC;AAAA,MAHDC,OAGC,SAHDA,OAGC;AAAA,MAFDC,KAEC,SAFDA,KAEC;AAAA,MADDC,IACC,SADDA,IACC;AACD,MAAM0D,MAAM,GAAG;AACbC,IAAAA,IAAI,EAAE7E,UAAU,CAAC4E,MAAX,CAAkBC,IAAlB,CAAuB;AAAEjE,MAAAA,IAAI,EAAJA,IAAF;AAAQI,MAAAA,OAAO,EAAPA;AAAR,KAAvB,CADO;AAEbvB,IAAAA,GAAG,EAAEO,UAAU,CAAC4E,MAAX,CAAkBnF,GAAlB,CAAsB;AAAEmB,MAAAA,IAAI,EAAJA,IAAF;AAAQI,MAAAA,OAAO,EAAPA;AAAR,KAAtB,CAFQ;AAGb8D,IAAAA,KAAK,EAAE9E,UAAU,CAAC4E,MAAX,CAAkBE,KAAlB,CAAwB;AAAErB,MAAAA,GAAG,EAAHA;AAAF,KAAxB,CAHM;AAIbsB,IAAAA,GAAG,EAAE/E,UAAU,CAAC4E,MAAX,CAAkBG,GAAlB,CAAsB;AAAEnE,MAAAA,IAAI,EAAJA,IAAF;AAAQI,MAAAA,OAAO,EAAPA;AAAR,KAAtB,CAJQ;AAKbgE,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEjF,UAAU,CAAC4E,MAAX,CAAkBI,KAAlB,CAAwBC,OAAxB,CAAgC;AAAErE,QAAAA,IAAI,EAAJA,IAAF;AAAQF,QAAAA,MAAM,EAANA,MAAR;AAAgBM,QAAAA,OAAO,EAAPA;AAAhB,OAAhC,CADJ;AAELkE,MAAAA,UAAU,EAAElF,UAAU,CAAC4E,MAAX,CAAkBI,KAAlB,CAAwBE,UAAxB,CAAmC;AAAEtE,QAAAA,IAAI,EAAJA,IAAF;AAAQF,QAAAA,MAAM,EAANA,MAAR;AAAgBM,QAAAA,OAAO,EAAPA;AAAhB,OAAnC,CAFP;AAGLmE,MAAAA,MAAM,EAAEnF,UAAU,CAAC4E,MAAX,CAAkBI,KAAlB,CAAwBG,MAAxB,CAA+B;AAAEvE,QAAAA,IAAI,EAAJA,IAAF;AAAQF,QAAAA,MAAM,EAANA,MAAR;AAAgBM,QAAAA,OAAO,EAAPA;AAAhB,OAA/B,CAHH;AAILoE,MAAAA,OAAO,EAAEpF,UAAU,CAAC4E,MAAX,CAAkBI,KAAlB,CAAwBI,OAAxB,CAAgC;AAAExE,QAAAA,IAAI,EAAJA,IAAF;AAAQF,QAAAA,MAAM,EAANA,MAAR;AAAgBM,QAAAA,OAAO,EAAPA;AAAhB,OAAhC;AAJJ,KALM;AAWbgD,IAAAA,GAAG,EAAEhE,UAAU,CAAC4E,MAAX,CAAkBZ,GAAlB,CAAsB;AAAEpD,MAAAA,IAAI,EAAJA,IAAF;AAAQF,MAAAA,MAAM,EAANA,MAAR;AAAgBM,MAAAA,OAAO,EAAPA;AAAhB,KAAtB,CAXQ;AAYbkD,IAAAA,IAAI,EAAElE,UAAU,CAAC4E,MAAX,CAAkBV,IAAlB,CAAuB;AAAEtD,MAAAA,IAAI,EAAJA,IAAF;AAAQI,MAAAA,OAAO,EAAPA;AAAR,KAAvB;AAZO,GAAf;AAeA,MAAM6C,GAAG,GAAG7D,UAAU,CAAC6D,GAAX,CAAe;AAAEI,IAAAA,KAAK,EAALA,KAAF;AAASjD,IAAAA,OAAO,EAAPA,OAAT;AAAkB4C,IAAAA,GAAG,EAAHA,GAAlB;AAAuBlD,IAAAA,MAAM,EAANA,MAAvB;AAA+BF,IAAAA,OAAO,EAAED;AAAxC,GAAf,CAAZ;AACA,MAAM8E,QAAQ,GAAGrF,UAAU,CAACqF,QAAX,CAAoB;AAAEzC,IAAAA,MAAM,EAANA;AAAF,GAApB,CAAjB;;AAEA,MAAM0C,aAAa;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA,oBACd,IAAIvF,eAAJ,CAAoB,iBAApB,CADc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAbuF,aAAa;AAAA;AAAA;AAAA,KAAnB;;AAIA,MAAMC,GAAG,GAAG9F,GAAG,CAACmD,MAAD,EAAS,qBAAT,EAAgC,KAAhC,CAAH,GAA4C5C,UAAU,CAACuF,GAAX,CAAe;AAAE3C,IAAAA,MAAM,EAANA,MAAF;AAAU1B,IAAAA,IAAI,EAAJA;AAAV,GAAf,CAA5C,GAA+E;AACzFzB,IAAAA,GAAG,EAAE6F,aADoF;AAEzFtB,IAAAA,GAAG,EAAEsB,aAFoF;AAGzFE,IAAAA,SAAS,EAAEF,aAH8E;AAIzFG,IAAAA,QAAQ,EAAEH,aAJ+E;AAKzFI,IAAAA,OAAO,EAAEJ,aALgF;AAMzFK,IAAAA,KAAK,EAAEL;AANkF,GAA3F;AASA,MAAMM,GAAG,GAAG5F,UAAU,CAAC4F,GAAX,EAAZ;AACA,MAAMC,IAAI,GAAG;AACXC,IAAAA,MAAM,EAAE;AACNrE,MAAAA,MAAM,EAAEzB,UAAU,CAAC6F,IAAX,CAAgBC,MAAhB,CAAuBrE,MAAvB,CAA8B;AAAEyB,QAAAA,IAAI,EAAJA,IAAF;AAAQ1C,QAAAA,OAAO,EAAED;AAAjB,OAA9B,CADF;AAENwF,MAAAA,KAAK,EAAE/F,UAAU,CAAC6F,IAAX,CAAgBC,MAAhB,CAAuBC,KAAvB,CAA6B;AAAE7C,QAAAA,IAAI,EAAJA,IAAF;AAAQ1C,QAAAA,OAAO,EAAED;AAAjB,OAA7B,CAFD;AAGNyF,MAAAA,IAAI,EAAEhG,UAAU,CAAC6F,IAAX,CAAgBC,MAAhB,CAAuBE,IAAvB,CAA4B;AAAE9C,QAAAA,IAAI,EAAJA,IAAF;AAAQ1C,QAAAA,OAAO,EAAED;AAAjB,OAA5B;AAHA,KADG;AAMX0F,IAAAA,OAAO,EAAEjG,UAAU,CAAC6F,IAAX,CAAgBI,OAAhB,CAAwB;AAAE/C,MAAAA,IAAI,EAAJA,IAAF;AAAQO,MAAAA,GAAG,EAAHA,GAAR;AAAa3C,MAAAA,MAAM,EAANA,MAAb;AAAqBuE,MAAAA,QAAQ,EAARA,QAArB;AAA+BxE,MAAAA,QAAQ,EAARA,QAA/B;AAAyCL,MAAAA,OAAO,EAAED;AAAlD,KAAxB,CANE;AAOXmD,IAAAA,OAAO,EAAE1D,UAAU,CAAC6F,IAAX,CAAgBnC,OAAhB,CAAwB;AAAEkC,MAAAA,GAAG,EAAHA,GAAF;AAAO1C,MAAAA,IAAI,EAAJA,IAAP;AAAapC,MAAAA,MAAM,EAANA,MAAb;AAAqBuE,MAAAA,QAAQ,EAARA,QAArB;AAA+B7E,MAAAA,OAAO,EAAED;AAAxC,KAAxB;AAPE,GAAb;AASA,MAAMmD,OAAO,GAAG1D,UAAU,CAAC0D,OAAX,CAAmB;AAAEmC,IAAAA,IAAI,EAAJA,IAAF;AAAQjF,IAAAA,IAAI,EAAJA;AAAR,GAAnB,CAAhB;AACA,MAAMsF,IAAI,GAAGlG,UAAU,CAACkG,IAAX,CAAgB;AAAEtF,IAAAA,IAAI,EAAJA,IAAF;AAAQ8C,IAAAA,OAAO,EAAPA,OAAR;AAAiB1C,IAAAA,OAAO,EAAPA;AAAjB,GAAhB,CAAb;AACAkF,EAAAA,IAAI,CAACC,KAAL,GAAanG,UAAU,CAACkG,IAAX,CAAgBC,KAAhB,CAAsB;AAAEjF,IAAAA,IAAI,EAAJA;AAAF,GAAtB,CAAb;;AAEA,MAAMkF,gBAAgB;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA,oBACjB,IAAIrG,eAAJ,CAAoB,oBAApB,CADiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAhBqG,gBAAgB;AAAA;AAAA;AAAA,KAAtB;;AAIA,MAAMN,MAAM,GAAGrG,GAAG,CAACc,kBAAD,EAAqB,uBAArB,EAA8Cd,GAAG,CAACmC,MAAD,EAAS,gBAAT,EAA2B,IAA3B,CAAjD,CAAH,GACX5B,UAAU,CAAC8F,MAAX,CAAkB;AAAElD,IAAAA,MAAM,EAANA;AAAF,GAAlB,CADW,GAEX;AACAyD,IAAAA,SAAS,EAAED,gBADX;AAEAE,IAAAA,WAAW,EAAEF,gBAFb;AAGAH,IAAAA,OAAO,EAAEG,gBAHT;AAIAtC,IAAAA,EAAE,EAAEsC,gBAJJ;AAKAG,IAAAA,KAAK,EAAEH;AALP,GAFJ;AAUA,MAAM5B,GAAG,GAAG;AACVX,IAAAA,GAAG,EAAHA,GADU;AAEVR,IAAAA,OAAO,EAAE;AACPa,MAAAA,IAAI,EAAElE,UAAU,CAACqD,OAAX,CAAmBa,IAAnB,CAAwB;AAAEb,QAAAA,OAAO,EAAPA;AAAF,OAAxB,CADC;AAEPmD,MAAAA,MAAM,EAAExG,UAAU,CAACqD,OAAX,CAAmBmD,MAAnB,CAA0B;AAAEnD,QAAAA,OAAO,EAAPA;AAAF,OAA1B,CAFD;AAGPoD,MAAAA,QAAQ,EAAEzG,UAAU,CAACqD,OAAX,CAAmBoD,QAAnB,CAA4B;AAAEpD,QAAAA,OAAO,EAAPA;AAAF,OAA5B;AAHH,KAFC;AAOVY,IAAAA,KAAK,EAALA,KAPU;AAQVyC,IAAAA,SAAS,EAAE;AACT7C,MAAAA,GAAG,EAAE7D,UAAU,CAAC0G,SAAX,CAAqB7C,GAArB,CAAyB;AAAE3C,QAAAA,IAAI,EAAJA;AAAF,OAAzB,CADI;AAETyF,MAAAA,IAAI,EAAE3G,UAAU,CAAC0G,SAAX,CAAqBC,IAArB,CAA0B;AAAEzF,QAAAA,IAAI,EAAJA;AAAF,OAA1B,CAFG;AAGT6C,MAAAA,EAAE,EAAE/D,UAAU,CAAC0G,SAAX,CAAqB3C,EAArB,CAAwB;AAAE7C,QAAAA,IAAI,EAAJA;AAAF,OAAxB;AAHK,KARD;AAaV0F,IAAAA,GAAG,EAAE5G,UAAU,CAAC4G,GAAX,CAAe;AAAEhG,MAAAA,IAAI,EAAJA,IAAF;AAAQI,MAAAA,OAAO,EAAPA;AAAR,KAAf,CAbK;AAcVY,IAAAA,MAAM,EAAE5B,UAAU,CAAC4B,MAAX,CAAkB;AAAEV,MAAAA,IAAI,EAAJA;AAAF,KAAlB,CAdE;AAeVuC,IAAAA,GAAG,EAAHA,GAfU;AAgBV8B,IAAAA,GAAG,EAAHA,GAhBU;AAiBVK,IAAAA,GAAG,EAAHA,GAjBU;AAkBVzB,IAAAA,KAAK,EAALA,KAlBU;AAmBV1E,IAAAA,GAAG,EAAEO,UAAU,CAACP,GAAX,CAAe;AAAEmB,MAAAA,IAAI,EAAJA,IAAF;AAAQI,MAAAA,OAAO,EAAPA;AAAR,KAAf,CAnBK;AAoBV6F,IAAAA,EAAE,EAAE7G,UAAU,CAAC6G,EAAX,CAAc;AAAE/F,MAAAA,MAAM,EAANA,MAAF;AAAU8B,MAAAA,MAAM,EAANA;AAAV,KAAd,CApBM;AAqBVkE,IAAAA,IAAI;AAAA,2EAAE;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAoB,IAAIhH,uBAAJ,EAApB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OArBM;AAqBiD;AAC3DuF,IAAAA,QAAQ,EAARA,QAtBU;AAuBV0B,IAAAA,GAAG,EAAE;AACHC,MAAAA,MAAM,EAAEhH,UAAU,CAAC+G,GAAX,CAAeC,MAAf,CAAsB;AAAEnG,QAAAA,QAAQ,EAARA;AAAF,OAAtB,CADL;AAEHoG,MAAAA,GAAG,EAAEjH,UAAU,CAAC+G,GAAX,CAAeE,GAAf,CAAmB;AAAEpG,QAAAA,QAAQ,EAARA;AAAF,OAAnB,CAFF;AAGHqG,MAAAA,MAAM,EAAElH,UAAU,CAAC+G,GAAX,CAAeG,MAAf,CAAsB;AAAErG,QAAAA,QAAQ,EAARA;AAAF,OAAtB,CAHL;AAIHsG,MAAAA,IAAI,EAAEnH,UAAU,CAAC+G,GAAX,CAAeI,IAAf,CAAoB;AAAEtG,QAAAA,QAAQ,EAARA;AAAF,OAApB,CAJH;AAKH8F,MAAAA,IAAI,EAAE3G,UAAU,CAAC+G,GAAX,CAAeJ,IAAf,CAAoB;AAAE9F,QAAAA,QAAQ,EAARA;AAAF,OAApB,CALH;AAMHuG,MAAAA,MAAM,EAAEpH,UAAU,CAAC+G,GAAX,CAAeK,MAAf,CAAsB;AAAEvG,QAAAA,QAAQ,EAARA;AAAF,OAAtB,CANL;AAOHkD,MAAAA,EAAE,EAAE/D,UAAU,CAAC+G,GAAX,CAAehD,EAAf,CAAkB;AAAElD,QAAAA,QAAQ,EAARA;AAAF,OAAlB;AAPD,KAvBK;AAgCV+B,IAAAA,MAAM,EAANA,MAhCU;AAiCVkB,IAAAA,EAAE,EAAE9D,UAAU,CAAC8D,EAAX,CAAc;AAAElD,MAAAA,IAAI,EAAJA,IAAF;AAAQI,MAAAA,OAAO,EAAPA;AAAR,KAAd,CAjCM;AAkCV6E,IAAAA,IAAI,EAAJA,IAlCU;AAmCVjB,IAAAA,MAAM,EAANA,MAnCU;AAoCVhB,IAAAA,GAAG,EAAHA,GApCU;AAqCVyD,IAAAA,IAAI,EAAErH,UAAU,CAACqH,IAAX,CAAgB;AAAEzE,MAAAA,MAAM,EAANA;AAAF,KAAhB,CArCI;AAsCVkD,IAAAA,MAAM,EAANA,MAtCU;AAuCVI,IAAAA,IAAI,EAAJA,IAvCU;AAwCVhF,IAAAA,IAAI,EAAE;AACJoG,MAAAA,EAAE,EAAEtH,UAAU,CAACkB,IAAX,CAAgBoG,EAAhB,CAAmB;AAAE5G,QAAAA,MAAM,EAANA,MAAF;AAAUkD,QAAAA,GAAG,EAAHA,GAAV;AAAe7C,QAAAA,UAAU,EAAVA,UAAf;AAA2BmF,QAAAA,IAAI,EAAJA,IAA3B;AAAiChF,QAAAA,IAAI,EAAJA;AAAjC,OAAnB,CADA;AAEJgD,MAAAA,IAAI,EAAElE,UAAU,CAACkB,IAAX,CAAgBgD,IAAhB,CAAqB;AAAEhD,QAAAA,IAAI,EAAJA;AAAF,OAArB,CAFF;AAGJqG,MAAAA,OAAO,EAAEvH,UAAU,CAACkB,IAAX,CAAgBqG,OAAhB,CAAwB;AAAErG,QAAAA,IAAI,EAAJA;AAAF,OAAxB;AAHL,KAxCI;AA6CVwC,IAAAA,OAAO,EAAPA,OA7CU;AA8CVlC,IAAAA,KAAK,EAAE;AAAA,aAAMlB,UAAU,CAACkE,GAAjB;AAAA,KA9CG;AA+CVgD,IAAAA,KAAK,EAAE;AACLnE,MAAAA,OAAO,EAAErD,UAAU,CAACqD,OAAX,CAAmBa,IAAnB,CAAwB;AAAEb,QAAAA,OAAO,EAAPA;AAAF,OAAxB,CADJ;AAELoE,MAAAA,EAAE,EAAE7E,MAAM,CAAC8E,OAAP,GACA1H,UAAU,CAACwH,KAAX,CAAiBC,EAAjB,CAAoB;AAAE7E,QAAAA,MAAM,EAANA;AAAF,OAApB,CADA,yEAEA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACM,IAAI7C,eAAJ,CAAoB,4BAApB,CADN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFA,EAFC;AAOLmB,MAAAA,IAAI,EAAElB,UAAU,CAACkB,IAAX,CAAgBgD,IAAhB,CAAqB;AAAEhD,QAAAA,IAAI,EAAJA;AAAF,OAArB;AAPD,KA/CG;AAwDVyG,IAAAA,IAAI,EAAE3H,UAAU,CAAC2H,IAAX,CAAgB;AACpBrH,MAAAA,UAAU,EAAVA,UADoB;AAEpB+C,MAAAA,OAAO,EAAPA,OAFoB;AAGpB7C,MAAAA,OAAO,EAAED,kBAHW;AAIpBE,MAAAA,YAAY,EAAZA,YAJoB;AAKpBC,MAAAA,MAAM,EAANA,MALoB;AAMpBC,MAAAA,WAAW,EAAXA,WANoB;AAOpBC,MAAAA,IAAI,EAAJA,IAPoB;AAQpBsC,MAAAA,IAAI,EAAJA,IARoB;AASpBrC,MAAAA,QAAQ,EAARA,QAToB;AAUpB+B,MAAAA,MAAM,EAANA,MAVoB;AAWpBwB,MAAAA,UAAU,EAAVA,UAXoB;AAYpBtD,MAAAA,MAAM,EAANA,MAZoB;AAapBE,MAAAA,OAAO,EAAPA,OAboB;AAcpBC,MAAAA,KAAK,EAALA,KAdoB;AAepBC,MAAAA,IAAI,EAAJA;AAfoB,KAAhB,CAxDI;AAyEV0G,IAAAA,KAAK,EAAE;AACL9F,MAAAA,KAAK,EAAE9B,UAAU,CAAC4H,KAAX,CAAiB9F,KAAjB,CAAuB;AAAEc,QAAAA,MAAM,EAANA;AAAF,OAAvB,CADF;AAELiF,MAAAA,OAAO,EAAE7H,UAAU,CAAC4H,KAAX,CAAiBC,OAAjB,CAAyB;AAAEjF,QAAAA,MAAM,EAANA;AAAF,OAAzB,CAFJ;AAGLkF,MAAAA,UAAU,EAAE9H,UAAU,CAAC4H,KAAX,CAAiBE,UAAjB,CAA4B;AAAElF,QAAAA,MAAM,EAANA;AAAF,OAA5B,CAHP;AAILmF,MAAAA,UAAU,EAAE/H,UAAU,CAAC4H,KAAX,CAAiBG,UAAjB,CAA4B;AAAElF,QAAAA,UAAU,EAAED,MAAM,CAACC;AAArB,OAA5B,CAJP;AAKL0D,MAAAA,KAAK,EAAEvG,UAAU,CAAC4H,KAAX,CAAiBrB,KAAjB,CAAuB;AAAE3D,QAAAA,MAAM,EAANA;AAAF,OAAvB;AALF,KAzEG;AAgFV2E,IAAAA,OAAO,EAAEvH,UAAU,CAACuH,OAAX,CAAmB;AAAErG,MAAAA,IAAI,EAAJA;AAAF,KAAnB;AAhFC,GAAZ;AAmFA,SAAOsD,GAAP;AACD","sourcesContent":["'use strict'\n\nconst log = require('debug')('ipfs:components:start')\nconst Bitswap = require('ipfs-bitswap')\nconst multiaddr = require('multiaddr')\nconst get = require('dlv')\nconst defer = require('p-defer')\nconst errCode = require('err-code')\nconst IPNS = require('../ipns')\nconst routingConfig = require('../ipns/routing/config')\nconst { AlreadyInitializedError, NotEnabledError } = require('../errors')\nconst Components = require('./')\nconst createMfsPreload = require('../mfs-preload')\nconst { withTimeoutOption } = require('../utils')\n\nconst WEBSOCKET_STAR_PROTO_CODE = 479\n\nmodule.exports = ({\n  apiManager,\n  options: constructorOptions,\n  blockService,\n  gcLock,\n  initOptions,\n  ipld,\n  keychain,\n  peerId,\n  pinManager,\n  preload,\n  print,\n  repo\n}) => withTimeoutOption(async function start () {\n  const startPromise = defer()\n  startPromise.promise.catch((err) => log(err))\n\n  const { cancel } = apiManager.update({ start: () => startPromise.promise })\n\n  try {\n    // The repo may be closed if previously stopped\n    if (repo.closed) {\n      await repo.open()\n    }\n\n    const config = await repo.config.getAll()\n    const addrs = []\n\n    if (config.Addresses && config.Addresses.Swarm) {\n      config.Addresses.Swarm.forEach(addr => {\n        let ma = multiaddr(addr)\n\n        // Temporary error for users migrating using websocket-star multiaddrs for listenning on libp2p\n        // websocket-star support was removed from ipfs and libp2p\n        if (ma.protoCodes().includes(WEBSOCKET_STAR_PROTO_CODE)) {\n          throw errCode(new Error('websocket-star swarm addresses are not supported. See https://github.com/ipfs/js-ipfs/issues/2779'), 'ERR_WEBSOCKET_STAR_SWARM_ADDR_NOT_SUPPORTED')\n        }\n\n        // multiaddrs that go via a signalling server or other intermediary (e.g. stardust,\n        // webrtc-star) can have the intermediary's peer ID in the address, so append our\n        // peer ID to the end of it\n        const maId = ma.getPeerId()\n        if (maId && maId !== peerId.toB58String()) {\n          ma = ma.encapsulate(`/p2p/${peerId.toB58String()}`)\n        }\n\n        addrs.push(ma)\n      })\n    }\n\n    const libp2p = Components.libp2p({\n      options: constructorOptions,\n      repo,\n      peerId: peerId,\n      multiaddrs: addrs,\n      config\n    })\n\n    libp2p.keychain && await libp2p.loadKeychain()\n\n    await libp2p.start()\n\n    libp2p.transportManager.getAddrs().forEach(ma => print(`Swarm listening on ${ma}/p2p/${peerId.toB58String()}`))\n\n    const ipnsRouting = routingConfig({ libp2p, repo, peerId, options: constructorOptions })\n    const ipns = new IPNS(ipnsRouting, repo.datastore, peerId, keychain, { pass: initOptions.pass })\n    const bitswap = new Bitswap(libp2p, repo.blocks, { statsEnabled: true })\n\n    await bitswap.start()\n\n    blockService.setExchange(bitswap)\n\n    const dag = {\n      get: Components.dag.get({ ipld, preload }),\n      resolve: Components.dag.resolve({ ipld, preload }),\n      tree: Components.dag.tree({ ipld, preload })\n    }\n\n    const pin = {\n      add: Components.pin.add({ pinManager, gcLock, dag }),\n      ls: Components.pin.ls({ pinManager, dag }),\n      rm: Components.pin.rm({ pinManager, gcLock, dag })\n    }\n\n    // FIXME: resolve this circular dependency\n    dag.put = Components.dag.put({ ipld, pin, gcLock, preload })\n\n    const block = {\n      get: Components.block.get({ blockService, preload }),\n      put: Components.block.put({ blockService, pin, gcLock, preload }),\n      rm: Components.block.rm({ blockService, gcLock, pinManager }),\n      stat: Components.block.stat({ blockService, preload })\n    }\n\n    const files = Components.files({ ipld, block, blockService, repo, preload, options: constructorOptions })\n    const mfsPreload = createMfsPreload({ files, preload, options: constructorOptions.preload })\n\n    await Promise.all([\n      ipns.republisher.start(),\n      preload.start(),\n      mfsPreload.start()\n    ])\n\n    const api = createApi({\n      apiManager,\n      bitswap,\n      block,\n      blockService,\n      config,\n      constructorOptions,\n      dag,\n      files,\n      gcLock,\n      initOptions,\n      ipld,\n      ipns,\n      keychain,\n      libp2p,\n      mfsPreload,\n      peerId,\n      pin,\n      pinManager,\n      preload,\n      print,\n      repo\n    })\n\n    apiManager.update(api, () => undefined)\n  } catch (err) {\n    cancel()\n    startPromise.reject(err)\n    throw err\n  }\n\n  startPromise.resolve(apiManager.api)\n  return apiManager.api\n})\n\nfunction createApi ({\n  apiManager,\n  bitswap,\n  block,\n  blockService,\n  config,\n  constructorOptions,\n  dag,\n  files,\n  gcLock,\n  initOptions,\n  ipld,\n  ipns,\n  keychain,\n  libp2p,\n  mfsPreload,\n  peerId,\n  pin,\n  pinManager,\n  preload,\n  print,\n  repo\n}) {\n  const object = {\n    data: Components.object.data({ ipld, preload }),\n    get: Components.object.get({ ipld, preload }),\n    links: Components.object.links({ dag }),\n    new: Components.object.new({ ipld, preload }),\n    patch: {\n      addLink: Components.object.patch.addLink({ ipld, gcLock, preload }),\n      appendData: Components.object.patch.appendData({ ipld, gcLock, preload }),\n      rmLink: Components.object.patch.rmLink({ ipld, gcLock, preload }),\n      setData: Components.object.patch.setData({ ipld, gcLock, preload })\n    },\n    put: Components.object.put({ ipld, gcLock, preload }),\n    stat: Components.object.stat({ ipld, preload })\n  }\n\n  const add = Components.add({ block, preload, pin, gcLock, options: constructorOptions })\n  const isOnline = Components.isOnline({ libp2p })\n\n  const dhtNotEnabled = async () => { // eslint-disable-line require-await\n    throw new NotEnabledError('dht not enabled')\n  }\n\n  const dht = get(libp2p, '_config.dht.enabled', false) ? Components.dht({ libp2p, repo }) : {\n    get: dhtNotEnabled,\n    put: dhtNotEnabled,\n    findProvs: dhtNotEnabled,\n    findPeer: dhtNotEnabled,\n    provide: dhtNotEnabled,\n    query: dhtNotEnabled\n  }\n\n  const dns = Components.dns()\n  const name = {\n    pubsub: {\n      cancel: Components.name.pubsub.cancel({ ipns, options: constructorOptions }),\n      state: Components.name.pubsub.state({ ipns, options: constructorOptions }),\n      subs: Components.name.pubsub.subs({ ipns, options: constructorOptions })\n    },\n    publish: Components.name.publish({ ipns, dag, peerId, isOnline, keychain, options: constructorOptions }),\n    resolve: Components.name.resolve({ dns, ipns, peerId, isOnline, options: constructorOptions })\n  }\n  const resolve = Components.resolve({ name, ipld })\n  const refs = Components.refs({ ipld, resolve, preload })\n  refs.local = Components.refs.local({ repo })\n\n  const pubsubNotEnabled = async () => { // eslint-disable-line require-await\n    throw new NotEnabledError('pubsub not enabled')\n  }\n\n  const pubsub = get(constructorOptions, 'config.Pubsub.Enabled', get(config, 'Pubsub.Enabled', true))\n    ? Components.pubsub({ libp2p })\n    : {\n      subscribe: pubsubNotEnabled,\n      unsubscribe: pubsubNotEnabled,\n      publish: pubsubNotEnabled,\n      ls: pubsubNotEnabled,\n      peers: pubsubNotEnabled\n    }\n\n  const api = {\n    add,\n    bitswap: {\n      stat: Components.bitswap.stat({ bitswap }),\n      unwant: Components.bitswap.unwant({ bitswap }),\n      wantlist: Components.bitswap.wantlist({ bitswap })\n    },\n    block,\n    bootstrap: {\n      add: Components.bootstrap.add({ repo }),\n      list: Components.bootstrap.list({ repo }),\n      rm: Components.bootstrap.rm({ repo })\n    },\n    cat: Components.cat({ ipld, preload }),\n    config: Components.config({ repo }),\n    dag,\n    dht,\n    dns,\n    files,\n    get: Components.get({ ipld, preload }),\n    id: Components.id({ peerId, libp2p }),\n    init: async () => { throw new AlreadyInitializedError() }, // eslint-disable-line require-await\n    isOnline,\n    key: {\n      export: Components.key.export({ keychain }),\n      gen: Components.key.gen({ keychain }),\n      import: Components.key.import({ keychain }),\n      info: Components.key.info({ keychain }),\n      list: Components.key.list({ keychain }),\n      rename: Components.key.rename({ keychain }),\n      rm: Components.key.rm({ keychain })\n    },\n    libp2p,\n    ls: Components.ls({ ipld, preload }),\n    name,\n    object,\n    pin,\n    ping: Components.ping({ libp2p }),\n    pubsub,\n    refs,\n    repo: {\n      gc: Components.repo.gc({ gcLock, pin, pinManager, refs, repo }),\n      stat: Components.repo.stat({ repo }),\n      version: Components.repo.version({ repo })\n    },\n    resolve,\n    start: () => apiManager.api,\n    stats: {\n      bitswap: Components.bitswap.stat({ bitswap }),\n      bw: libp2p.metrics\n        ? Components.stats.bw({ libp2p })\n        : async () => { // eslint-disable-line require-await\n          throw new NotEnabledError('libp2p metrics not enabled')\n        },\n      repo: Components.repo.stat({ repo })\n    },\n    stop: Components.stop({\n      apiManager,\n      bitswap,\n      options: constructorOptions,\n      blockService,\n      gcLock,\n      initOptions,\n      ipld,\n      ipns,\n      keychain,\n      libp2p,\n      mfsPreload,\n      peerId,\n      preload,\n      print,\n      repo\n    }),\n    swarm: {\n      addrs: Components.swarm.addrs({ libp2p }),\n      connect: Components.swarm.connect({ libp2p }),\n      disconnect: Components.swarm.disconnect({ libp2p }),\n      localAddrs: Components.swarm.localAddrs({ multiaddrs: libp2p.multiaddrs }),\n      peers: Components.swarm.peers({ libp2p })\n    },\n    version: Components.version({ repo })\n  }\n\n  return api\n}\n"]},"metadata":{},"sourceType":"script"}