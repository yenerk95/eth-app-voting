{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar Wantlist = require('../types/wantlist');\n\nvar Ledger = /*#__PURE__*/function () {\n  function Ledger(peerId) {\n    _classCallCheck(this, Ledger);\n\n    this.partner = peerId;\n    this.wantlist = new Wantlist();\n    this.exchangeCount = 0;\n    this.sentToPeer = new Map();\n    this.accounting = {\n      bytesSent: 0,\n      bytesRecv: 0\n    };\n  }\n\n  _createClass(Ledger, [{\n    key: \"sentBytes\",\n    value: function sentBytes(n) {\n      this.exchangeCount++;\n      this.lastExchange = new Date().getTime();\n      this.accounting.bytesSent += n;\n    }\n  }, {\n    key: \"receivedBytes\",\n    value: function receivedBytes(n) {\n      this.exchangeCount++;\n      this.lastExchange = new Date().getTime();\n      this.accounting.bytesRecv += n;\n    }\n  }, {\n    key: \"wants\",\n    value: function wants(cid, priority, wantType) {\n      this.wantlist.add(cid, priority, wantType);\n    }\n  }, {\n    key: \"cancelWant\",\n    value: function cancelWant(cid) {\n      this.wantlist.remove(cid);\n    }\n  }, {\n    key: \"wantlistContains\",\n    value: function wantlistContains(cid) {\n      return this.wantlist.contains(cid);\n    }\n  }, {\n    key: \"debtRatio\",\n    value: function debtRatio() {\n      return this.accounting.bytesSent / (this.accounting.bytesRecv + 1); // +1 is to prevent division by zero\n    }\n  }]);\n\n  return Ledger;\n}();\n\nmodule.exports = Ledger;","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/ipfs-bitswap/src/decision-engine/ledger.js"],"names":["Wantlist","require","Ledger","peerId","partner","wantlist","exchangeCount","sentToPeer","Map","accounting","bytesSent","bytesRecv","n","lastExchange","Date","getTime","cid","priority","wantType","add","remove","contains","module","exports"],"mappings":"AAAA;;;;;;AAEA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,mBAAD,CAAxB;;IAEMC,M;AACJ,kBAAaC,MAAb,EAAqB;AAAA;;AACnB,SAAKC,OAAL,GAAeD,MAAf;AACA,SAAKE,QAAL,GAAgB,IAAIL,QAAJ,EAAhB;AAEA,SAAKM,aAAL,GAAqB,CAArB;AACA,SAAKC,UAAL,GAAkB,IAAIC,GAAJ,EAAlB;AAEA,SAAKC,UAAL,GAAkB;AAChBC,MAAAA,SAAS,EAAE,CADK;AAEhBC,MAAAA,SAAS,EAAE;AAFK,KAAlB;AAID;;;;8BAEUC,C,EAAG;AACZ,WAAKN,aAAL;AACA,WAAKO,YAAL,GAAqB,IAAIC,IAAJ,EAAD,CAAaC,OAAb,EAApB;AACA,WAAKN,UAAL,CAAgBC,SAAhB,IAA6BE,CAA7B;AACD;;;kCAEcA,C,EAAG;AAChB,WAAKN,aAAL;AACA,WAAKO,YAAL,GAAqB,IAAIC,IAAJ,EAAD,CAAaC,OAAb,EAApB;AACA,WAAKN,UAAL,CAAgBE,SAAhB,IAA6BC,CAA7B;AACD;;;0BAEMI,G,EAAKC,Q,EAAUC,Q,EAAU;AAC9B,WAAKb,QAAL,CAAcc,GAAd,CAAkBH,GAAlB,EAAuBC,QAAvB,EAAiCC,QAAjC;AACD;;;+BAEWF,G,EAAK;AACf,WAAKX,QAAL,CAAce,MAAd,CAAqBJ,GAArB;AACD;;;qCAEiBA,G,EAAK;AACrB,aAAO,KAAKX,QAAL,CAAcgB,QAAd,CAAuBL,GAAvB,CAAP;AACD;;;gCAEY;AACX,aAAQ,KAAKP,UAAL,CAAgBC,SAAhB,IAA6B,KAAKD,UAAL,CAAgBE,SAAhB,GAA4B,CAAzD,CAAR,CADW,CAC0D;AACtE;;;;;;AAGHW,MAAM,CAACC,OAAP,GAAiBrB,MAAjB","sourcesContent":["'use strict'\n\nconst Wantlist = require('../types/wantlist')\n\nclass Ledger {\n  constructor (peerId) {\n    this.partner = peerId\n    this.wantlist = new Wantlist()\n\n    this.exchangeCount = 0\n    this.sentToPeer = new Map()\n\n    this.accounting = {\n      bytesSent: 0,\n      bytesRecv: 0\n    }\n  }\n\n  sentBytes (n) {\n    this.exchangeCount++\n    this.lastExchange = (new Date()).getTime()\n    this.accounting.bytesSent += n\n  }\n\n  receivedBytes (n) {\n    this.exchangeCount++\n    this.lastExchange = (new Date()).getTime()\n    this.accounting.bytesRecv += n\n  }\n\n  wants (cid, priority, wantType) {\n    this.wantlist.add(cid, priority, wantType)\n  }\n\n  cancelWant (cid) {\n    this.wantlist.remove(cid)\n  }\n\n  wantlistContains (cid) {\n    return this.wantlist.contains(cid)\n  }\n\n  debtRatio () {\n    return (this.accounting.bytesSent / (this.accounting.bytesRecv + 1)) // +1 is to prevent division by zero\n  }\n}\n\nmodule.exports = Ledger\n"]},"metadata":{},"sourceType":"script"}