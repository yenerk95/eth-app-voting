{"ast":null,"code":"'use strict';\n\nconst UnixFS = require('ipfs-unixfs');\n\nconst {\n  DAGNode\n} = require('ipld-dag-pb');\n\nconst mc = require('multicodec');\n\nconst mh = require('multihashing-async').multihash;\n\nconst createNode = async (context, type, options) => {\n  const hashAlg = mh.names[options.hashAlg];\n  const metadata = new UnixFS({\n    type,\n    mode: options.mode,\n    mtime: options.mtime\n  });\n  const node = new DAGNode(metadata.marshal());\n  const cid = await context.ipld.put(node, mc.DAG_PB, {\n    cidVersion: options.cidVersion,\n    hashAlg,\n    onlyHash: !options.flush\n  });\n  return {\n    cid,\n    node\n  };\n};\n\nmodule.exports = createNode;","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/ipfs/src/core/components/files/utils/create-node.js"],"names":["UnixFS","require","DAGNode","mc","mh","multihash","createNode","context","type","options","hashAlg","names","metadata","mode","mtime","node","marshal","cid","ipld","put","DAG_PB","cidVersion","onlyHash","flush","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,aAAD,CAAtB;;AACA,MAAM;AACJC,EAAAA;AADI,IAEFD,OAAO,CAAC,aAAD,CAFX;;AAGA,MAAME,EAAE,GAAGF,OAAO,CAAC,YAAD,CAAlB;;AACA,MAAMG,EAAE,GAAGH,OAAO,CAAC,oBAAD,CAAP,CAA8BI,SAAzC;;AAEA,MAAMC,UAAU,GAAG,OAAOC,OAAP,EAAgBC,IAAhB,EAAsBC,OAAtB,KAAkC;AACnD,QAAMC,OAAO,GAAGN,EAAE,CAACO,KAAH,CAASF,OAAO,CAACC,OAAjB,CAAhB;AACA,QAAME,QAAQ,GAAG,IAAIZ,MAAJ,CAAW;AAC1BQ,IAAAA,IAD0B;AAE1BK,IAAAA,IAAI,EAAEJ,OAAO,CAACI,IAFY;AAG1BC,IAAAA,KAAK,EAAEL,OAAO,CAACK;AAHW,GAAX,CAAjB;AAMA,QAAMC,IAAI,GAAG,IAAIb,OAAJ,CAAYU,QAAQ,CAACI,OAAT,EAAZ,CAAb;AACA,QAAMC,GAAG,GAAG,MAAMV,OAAO,CAACW,IAAR,CAAaC,GAAb,CAAiBJ,IAAjB,EAAuBZ,EAAE,CAACiB,MAA1B,EAAkC;AAClDC,IAAAA,UAAU,EAAEZ,OAAO,CAACY,UAD8B;AAElDX,IAAAA,OAFkD;AAGlDY,IAAAA,QAAQ,EAAE,CAACb,OAAO,CAACc;AAH+B,GAAlC,CAAlB;AAMA,SAAO;AACLN,IAAAA,GADK;AAELF,IAAAA;AAFK,GAAP;AAID,CAnBD;;AAqBAS,MAAM,CAACC,OAAP,GAAiBnB,UAAjB","sourcesContent":["'use strict'\n\nconst UnixFS = require('ipfs-unixfs')\nconst {\n  DAGNode\n} = require('ipld-dag-pb')\nconst mc = require('multicodec')\nconst mh = require('multihashing-async').multihash\n\nconst createNode = async (context, type, options) => {\n  const hashAlg = mh.names[options.hashAlg]\n  const metadata = new UnixFS({\n    type,\n    mode: options.mode,\n    mtime: options.mtime\n  })\n\n  const node = new DAGNode(metadata.marshal())\n  const cid = await context.ipld.put(node, mc.DAG_PB, {\n    cidVersion: options.cidVersion,\n    hashAlg,\n    onlyHash: !options.flush\n  })\n\n  return {\n    cid,\n    node\n  }\n}\n\nmodule.exports = createNode\n"]},"metadata":{},"sourceType":"script"}