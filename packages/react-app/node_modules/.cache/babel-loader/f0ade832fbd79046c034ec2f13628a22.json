{"ast":null,"code":"'use strict';\n\nvar _defineProperty = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _regeneratorRuntime = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar getIterator = require('get-iterator'); // a pair of streams where one drains from the other\n\n\nmodule.exports = function pair() {\n  var _source2;\n\n  var _source, _onSource;\n\n  var sink = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(source) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!_source) {\n                _context.next = 2;\n                break;\n              }\n\n              throw new Error('already piped');\n\n            case 2:\n              _source = getIterator(source);\n              if (_onSource) _onSource(_source);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function sink(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var source = (_source2 = {}, _defineProperty(_source2, Symbol.asyncIterator, function () {\n    return this;\n  }), _defineProperty(_source2, \"next\", function next() {\n    if (_source) return _source.next();\n    return new Promise(function (resolve) {\n      _onSource = function onSource(source) {\n        _onSource = null;\n        resolve(source.next());\n      };\n    });\n  }), _source2);\n  return {\n    sink: sink,\n    source: source\n  };\n};","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/it-pair/index.js"],"names":["getIterator","require","module","exports","pair","_source","onSource","sink","source","Error","Symbol","asyncIterator","next","Promise","resolve"],"mappings":"AAAA;;;;;;;;AAEA,IAAMA,WAAW,GAAGC,OAAO,CAAC,cAAD,CAA3B,C,CAEA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,SAASC,IAAT,GAAiB;AAAA;;AAChC,MAAIC,OAAJ,EAAaC,SAAb;;AAEA,MAAMC,IAAI;AAAA,wEAAG,iBAAMC,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA,mBACPH,OADO;AAAA;AAAA;AAAA;;AAAA,oBACQ,IAAII,KAAJ,CAAU,eAAV,CADR;;AAAA;AAEXJ,cAAAA,OAAO,GAAGL,WAAW,CAACQ,MAAD,CAArB;AACA,kBAAIF,SAAJ,EAAcA,SAAQ,CAACD,OAAD,CAAR;;AAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAJE,IAAI;AAAA;AAAA;AAAA,KAAV;;AAMA,MAAMC,MAAM,6CACTE,MAAM,CAACC,aADE,cACgB;AACxB,WAAO,IAAP;AACD,GAHS,qDAIF;AACN,QAAIN,OAAJ,EAAa,OAAOA,OAAO,CAACO,IAAR,EAAP;AACb,WAAO,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAC5BR,MAAAA,SAAQ,GAAG,kBAAAE,MAAM,EAAI;AACnBF,QAAAA,SAAQ,GAAG,IAAX;AACAQ,QAAAA,OAAO,CAACN,MAAM,CAACI,IAAP,EAAD,CAAP;AACD,OAHD;AAID,KALM,CAAP;AAMD,GAZS,YAAZ;AAeA,SAAO;AAAEL,IAAAA,IAAI,EAAJA,IAAF;AAAQC,IAAAA,MAAM,EAANA;AAAR,GAAP;AACD,CAzBD","sourcesContent":["'use strict'\n\nconst getIterator = require('get-iterator')\n\n// a pair of streams where one drains from the other\nmodule.exports = function pair () {\n  let _source, onSource\n\n  const sink = async source => {\n    if (_source) throw new Error('already piped')\n    _source = getIterator(source)\n    if (onSource) onSource(_source)\n  }\n\n  const source = {\n    [Symbol.asyncIterator] () {\n      return this\n    },\n    next () {\n      if (_source) return _source.next()\n      return new Promise(resolve => {\n        onSource = source => {\n          onSource = null\n          resolve(source.next())\n        }\n      })\n    }\n  }\n\n  return { sink, source }\n}\n"]},"metadata":{},"sourceType":"script"}