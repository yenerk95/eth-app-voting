{"ast":null,"code":"'use strict';\n\nconst ciphers = require('./ciphers');\n\nconst cipherMode = require('./cipher-mode');\n\nexports.create = async function (key, iv) {\n  // eslint-disable-line require-await\n  const mode = cipherMode(key);\n  const cipher = ciphers.createCipheriv(mode, key, iv);\n  const decipher = ciphers.createDecipheriv(mode, key, iv);\n  const res = {\n    async encrypt(data) {\n      // eslint-disable-line require-await\n      return cipher.update(data);\n    },\n\n    async decrypt(data) {\n      // eslint-disable-line require-await\n      return decipher.update(data);\n    }\n\n  };\n  return res;\n};","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/libp2p-crypto/src/aes/index.js"],"names":["ciphers","require","cipherMode","exports","create","key","iv","mode","cipher","createCipheriv","decipher","createDecipheriv","res","encrypt","data","update","decrypt"],"mappings":"AAAA;;AAEA,MAAMA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAAvB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,eAAD,CAA1B;;AAEAE,OAAO,CAACC,MAAR,GAAiB,gBAAgBC,GAAhB,EAAqBC,EAArB,EAAyB;AAAE;AAC1C,QAAMC,IAAI,GAAGL,UAAU,CAACG,GAAD,CAAvB;AACA,QAAMG,MAAM,GAAGR,OAAO,CAACS,cAAR,CAAuBF,IAAvB,EAA6BF,GAA7B,EAAkCC,EAAlC,CAAf;AACA,QAAMI,QAAQ,GAAGV,OAAO,CAACW,gBAAR,CAAyBJ,IAAzB,EAA+BF,GAA/B,EAAoCC,EAApC,CAAjB;AAEA,QAAMM,GAAG,GAAG;AACV,UAAMC,OAAN,CAAeC,IAAf,EAAqB;AAAE;AACrB,aAAON,MAAM,CAACO,MAAP,CAAcD,IAAd,CAAP;AACD,KAHS;;AAKV,UAAME,OAAN,CAAeF,IAAf,EAAqB;AAAE;AACrB,aAAOJ,QAAQ,CAACK,MAAT,CAAgBD,IAAhB,CAAP;AACD;;AAPS,GAAZ;AAUA,SAAOF,GAAP;AACD,CAhBD","sourcesContent":["'use strict'\n\nconst ciphers = require('./ciphers')\nconst cipherMode = require('./cipher-mode')\n\nexports.create = async function (key, iv) { // eslint-disable-line require-await\n  const mode = cipherMode(key)\n  const cipher = ciphers.createCipheriv(mode, key, iv)\n  const decipher = ciphers.createDecipheriv(mode, key, iv)\n\n  const res = {\n    async encrypt (data) { // eslint-disable-line require-await\n      return cipher.update(data)\n    },\n\n    async decrypt (data) { // eslint-disable-line require-await\n      return decipher.update(data)\n    }\n  }\n\n  return res\n}\n"]},"metadata":{},"sourceType":"script"}