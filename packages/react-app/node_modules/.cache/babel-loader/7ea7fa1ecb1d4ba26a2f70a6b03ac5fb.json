{"ast":null,"code":"/* global indexedDB */\n'use strict';\n\nmodule.exports = Level;\n\nvar AbstractLevelDOWN = require('abstract-leveldown').AbstractLevelDOWN;\n\nvar inherits = require('inherits');\n\nvar Iterator = require('./iterator');\n\nvar mixedToBuffer = require('./util/mixed-to-buffer');\n\nvar setImmediate = require('./util/immediate');\n\nvar support = require('./util/support');\n\nvar DEFAULT_PREFIX = 'level-js-';\n\nfunction Level(location, opts) {\n  if (!(this instanceof Level)) return new Level(location, opts);\n  AbstractLevelDOWN.call(this);\n  opts = opts || {};\n\n  if (typeof location !== 'string') {\n    throw new Error('constructor requires a location string argument');\n  }\n\n  this.location = location;\n  this.prefix = opts.prefix == null ? DEFAULT_PREFIX : opts.prefix;\n  this.version = parseInt(opts.version || 1, 10);\n}\n\ninherits(Level, AbstractLevelDOWN); // Detect binary and array key support (IndexedDB Second Edition)\n\nLevel.binaryKeys = support.binaryKeys(indexedDB);\nLevel.arrayKeys = support.arrayKeys(indexedDB);\n\nLevel.prototype._open = function (options, callback) {\n  var req = indexedDB.open(this.prefix + this.location, this.version);\n  var self = this;\n\n  req.onerror = function () {\n    callback(req.error || new Error('unknown error'));\n  };\n\n  req.onsuccess = function () {\n    self.db = req.result;\n    callback();\n  };\n\n  req.onupgradeneeded = function (ev) {\n    var db = ev.target.result;\n\n    if (!db.objectStoreNames.contains(self.location)) {\n      db.createObjectStore(self.location);\n    }\n  };\n};\n\nLevel.prototype.store = function (mode) {\n  var transaction = this.db.transaction([this.location], mode);\n  return transaction.objectStore(this.location);\n};\n\nLevel.prototype.await = function (request, callback) {\n  var transaction = request.transaction; // Take advantage of the fact that a non-canceled request error aborts\n  // the transaction. I.e. no need to listen for \"request.onerror\".\n\n  transaction.onabort = function () {\n    callback(transaction.error || new Error('aborted by user'));\n  };\n\n  transaction.oncomplete = function () {\n    callback(null, request.result);\n  };\n};\n\nLevel.prototype._get = function (key, options, callback) {\n  var store = this.store('readonly');\n\n  try {\n    var req = store.get(key);\n  } catch (err) {\n    return setImmediate(function () {\n      callback(err);\n    });\n  }\n\n  this.await(req, function (err, value) {\n    if (err) return callback(err);\n\n    if (value === undefined) {\n      // 'NotFound' error, consistent with LevelDOWN API\n      return callback(new Error('NotFound'));\n    }\n\n    if (options.asBuffer) {\n      value = mixedToBuffer(value);\n    }\n\n    callback(null, value);\n  });\n};\n\nLevel.prototype._del = function (key, options, callback) {\n  var store = this.store('readwrite');\n\n  try {\n    var req = store.delete(key);\n  } catch (err) {\n    return setImmediate(function () {\n      callback(err);\n    });\n  }\n\n  this.await(req, callback);\n};\n\nLevel.prototype._put = function (key, value, options, callback) {\n  var store = this.store('readwrite');\n\n  try {\n    // Will throw a DataError or DataCloneError if the environment\n    // does not support serializing the key or value respectively.\n    var req = store.put(value, key);\n  } catch (err) {\n    return setImmediate(function () {\n      callback(err);\n    });\n  }\n\n  this.await(req, callback);\n}; // Valid key types in IndexedDB Second Edition:\n//\n// - Number, except NaN. Includes Infinity and -Infinity\n// - Date, except invalid (NaN)\n// - String\n// - ArrayBuffer or a view thereof (typed arrays). In level-js we also support\n//   Buffer (which is an Uint8Array) (and the primary binary type of Level).\n// - Array, except cyclical and empty (e.g. Array(10)). Elements must be valid\n//   types themselves.\n\n\nLevel.prototype._serializeKey = function (key) {\n  if (Buffer.isBuffer(key)) {\n    return Level.binaryKeys ? key : key.toString();\n  } else if (Array.isArray(key)) {\n    return Level.arrayKeys ? key.map(this._serializeKey, this) : String(key);\n  } else {\n    return key;\n  }\n};\n\nLevel.prototype._serializeValue = function (value) {\n  return value;\n};\n\nLevel.prototype._iterator = function (options) {\n  return new Iterator(this, this.location, options);\n};\n\nLevel.prototype._batch = function (operations, options, callback) {\n  if (operations.length === 0) return setImmediate(callback);\n  var store = this.store('readwrite');\n  var transaction = store.transaction;\n  var index = 0;\n  var error;\n\n  transaction.onabort = function () {\n    callback(error || transaction.error || new Error('aborted by user'));\n  };\n\n  transaction.oncomplete = function () {\n    callback();\n  }; // Wait for a request to complete before making the next, saving CPU.\n\n\n  function loop() {\n    var op = operations[index++];\n    var key = op.key;\n\n    try {\n      var req = op.type === 'del' ? store.delete(key) : store.put(op.value, key);\n    } catch (err) {\n      error = err;\n      transaction.abort();\n      return;\n    }\n\n    if (index < operations.length) {\n      req.onsuccess = loop;\n    }\n  }\n\n  loop();\n};\n\nLevel.prototype._close = function (callback) {\n  this.db.close();\n  setImmediate(callback);\n};\n\nLevel.destroy = function (location, prefix, callback) {\n  if (typeof prefix === 'function') {\n    callback = prefix;\n    prefix = DEFAULT_PREFIX;\n  }\n\n  var request = indexedDB.deleteDatabase(prefix + location);\n\n  request.onsuccess = function () {\n    callback();\n  };\n\n  request.onerror = function (err) {\n    callback(err);\n  };\n};","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/level-js/index.js"],"names":["module","exports","Level","AbstractLevelDOWN","require","inherits","Iterator","mixedToBuffer","setImmediate","support","DEFAULT_PREFIX","location","opts","call","Error","prefix","version","parseInt","binaryKeys","indexedDB","arrayKeys","prototype","_open","options","callback","req","open","self","onerror","error","onsuccess","db","result","onupgradeneeded","ev","target","objectStoreNames","contains","createObjectStore","store","mode","transaction","objectStore","await","request","onabort","oncomplete","_get","key","get","err","value","undefined","asBuffer","_del","delete","_put","put","_serializeKey","Buffer","isBuffer","toString","Array","isArray","map","String","_serializeValue","_iterator","_batch","operations","length","index","loop","op","type","abort","_close","close","destroy","deleteDatabase"],"mappings":"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","sourcesContent":["/* global indexedDB */\n\n'use strict'\n\nmodule.exports = Level\n\nvar AbstractLevelDOWN = require('abstract-leveldown').AbstractLevelDOWN\nvar inherits = require('inherits')\nvar Iterator = require('./iterator')\nvar mixedToBuffer = require('./util/mixed-to-buffer')\nvar setImmediate = require('./util/immediate')\nvar support = require('./util/support')\n\nvar DEFAULT_PREFIX = 'level-js-'\n\nfunction Level (location, opts) {\n  if (!(this instanceof Level)) return new Level(location, opts)\n  AbstractLevelDOWN.call(this)\n  opts = opts || {}\n\n  if (typeof location !== 'string') {\n    throw new Error('constructor requires a location string argument')\n  }\n\n  this.location = location\n  this.prefix = opts.prefix == null ? DEFAULT_PREFIX : opts.prefix\n  this.version = parseInt(opts.version || 1, 10)\n}\n\ninherits(Level, AbstractLevelDOWN)\n\n// Detect binary and array key support (IndexedDB Second Edition)\nLevel.binaryKeys = support.binaryKeys(indexedDB)\nLevel.arrayKeys = support.arrayKeys(indexedDB)\n\nLevel.prototype._open = function (options, callback) {\n  var req = indexedDB.open(this.prefix + this.location, this.version)\n  var self = this\n\n  req.onerror = function () {\n    callback(req.error || new Error('unknown error'))\n  }\n\n  req.onsuccess = function () {\n    self.db = req.result\n    callback()\n  }\n\n  req.onupgradeneeded = function (ev) {\n    var db = ev.target.result\n\n    if (!db.objectStoreNames.contains(self.location)) {\n      db.createObjectStore(self.location)\n    }\n  }\n}\n\nLevel.prototype.store = function (mode) {\n  var transaction = this.db.transaction([this.location], mode)\n  return transaction.objectStore(this.location)\n}\n\nLevel.prototype.await = function (request, callback) {\n  var transaction = request.transaction\n\n  // Take advantage of the fact that a non-canceled request error aborts\n  // the transaction. I.e. no need to listen for \"request.onerror\".\n  transaction.onabort = function () {\n    callback(transaction.error || new Error('aborted by user'))\n  }\n\n  transaction.oncomplete = function () {\n    callback(null, request.result)\n  }\n}\n\nLevel.prototype._get = function (key, options, callback) {\n  var store = this.store('readonly')\n\n  try {\n    var req = store.get(key)\n  } catch (err) {\n    return setImmediate(function () {\n      callback(err)\n    })\n  }\n\n  this.await(req, function (err, value) {\n    if (err) return callback(err)\n\n    if (value === undefined) {\n      // 'NotFound' error, consistent with LevelDOWN API\n      return callback(new Error('NotFound'))\n    }\n\n    if (options.asBuffer) {\n      value = mixedToBuffer(value)\n    }\n\n    callback(null, value)\n  })\n}\n\nLevel.prototype._del = function (key, options, callback) {\n  var store = this.store('readwrite')\n\n  try {\n    var req = store.delete(key)\n  } catch (err) {\n    return setImmediate(function () {\n      callback(err)\n    })\n  }\n\n  this.await(req, callback)\n}\n\nLevel.prototype._put = function (key, value, options, callback) {\n  var store = this.store('readwrite')\n\n  try {\n    // Will throw a DataError or DataCloneError if the environment\n    // does not support serializing the key or value respectively.\n    var req = store.put(value, key)\n  } catch (err) {\n    return setImmediate(function () {\n      callback(err)\n    })\n  }\n\n  this.await(req, callback)\n}\n\n// Valid key types in IndexedDB Second Edition:\n//\n// - Number, except NaN. Includes Infinity and -Infinity\n// - Date, except invalid (NaN)\n// - String\n// - ArrayBuffer or a view thereof (typed arrays). In level-js we also support\n//   Buffer (which is an Uint8Array) (and the primary binary type of Level).\n// - Array, except cyclical and empty (e.g. Array(10)). Elements must be valid\n//   types themselves.\nLevel.prototype._serializeKey = function (key) {\n  if (Buffer.isBuffer(key)) {\n    return Level.binaryKeys ? key : key.toString()\n  } else if (Array.isArray(key)) {\n    return Level.arrayKeys ? key.map(this._serializeKey, this) : String(key)\n  } else {\n    return key\n  }\n}\n\nLevel.prototype._serializeValue = function (value) {\n  return value\n}\n\nLevel.prototype._iterator = function (options) {\n  return new Iterator(this, this.location, options)\n}\n\nLevel.prototype._batch = function (operations, options, callback) {\n  if (operations.length === 0) return setImmediate(callback)\n\n  var store = this.store('readwrite')\n  var transaction = store.transaction\n  var index = 0\n  var error\n\n  transaction.onabort = function () {\n    callback(error || transaction.error || new Error('aborted by user'))\n  }\n\n  transaction.oncomplete = function () {\n    callback()\n  }\n\n  // Wait for a request to complete before making the next, saving CPU.\n  function loop () {\n    var op = operations[index++]\n    var key = op.key\n\n    try {\n      var req = op.type === 'del' ? store.delete(key) : store.put(op.value, key)\n    } catch (err) {\n      error = err\n      transaction.abort()\n      return\n    }\n\n    if (index < operations.length) {\n      req.onsuccess = loop\n    }\n  }\n\n  loop()\n}\n\nLevel.prototype._close = function (callback) {\n  this.db.close()\n  setImmediate(callback)\n}\n\nLevel.destroy = function (location, prefix, callback) {\n  if (typeof prefix === 'function') {\n    callback = prefix\n    prefix = DEFAULT_PREFIX\n  }\n  var request = indexedDB.deleteDatabase(prefix + location)\n  request.onsuccess = function () {\n    callback()\n  }\n  request.onerror = function (err) {\n    callback(err)\n  }\n}\n"]},"metadata":{},"sourceType":"script"}