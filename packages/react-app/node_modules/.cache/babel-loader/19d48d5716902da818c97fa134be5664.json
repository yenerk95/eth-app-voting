{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _awaitAsyncGenerator = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\n\nvar _wrapAsyncGenerator = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\n\nvar _asyncIterator = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncIterator\");\n\nvar exporter = require('ipfs-unixfs-exporter');\n\nvar errCode = require('err-code');\n\nvar _require = require('../utils'),\n    normalizeCidPath = _require.normalizeCidPath,\n    mapFile = _require.mapFile,\n    withTimeoutOption = _require.withTimeoutOption;\n\nmodule.exports = function (_ref) {\n  var ipld = _ref.ipld,\n      preload = _ref.preload;\n  return withTimeoutOption( /*#__PURE__*/function () {\n    var _get = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ipfsPath, options) {\n      var pathComponents, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _value, file;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = options || {};\n\n              if (!(options.preload !== false)) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.prev = 2;\n              pathComponents = normalizeCidPath(ipfsPath).split('/');\n              _context.next = 9;\n              break;\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](2);\n              throw errCode(_context.t0, 'ERR_INVALID_PATH');\n\n            case 9:\n              preload(pathComponents[0]);\n\n            case 10:\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _context.prev = 12;\n              _iterator = _asyncIterator(exporter.recursive(ipfsPath, ipld, options));\n\n            case 14:\n              _context.next = 16;\n              return _awaitAsyncGenerator(_iterator.next());\n\n            case 16:\n              _step = _context.sent;\n              _iteratorNormalCompletion = _step.done;\n              _context.next = 20;\n              return _awaitAsyncGenerator(_step.value);\n\n            case 20:\n              _value = _context.sent;\n\n              if (_iteratorNormalCompletion) {\n                _context.next = 28;\n                break;\n              }\n\n              file = _value;\n              _context.next = 25;\n              return mapFile(file, _objectSpread(_objectSpread({}, options), {}, {\n                includeContent: true\n              }));\n\n            case 25:\n              _iteratorNormalCompletion = true;\n              _context.next = 14;\n              break;\n\n            case 28:\n              _context.next = 34;\n              break;\n\n            case 30:\n              _context.prev = 30;\n              _context.t1 = _context[\"catch\"](12);\n              _didIteratorError = true;\n              _iteratorError = _context.t1;\n\n            case 34:\n              _context.prev = 34;\n              _context.prev = 35;\n\n              if (!(!_iteratorNormalCompletion && _iterator.return != null)) {\n                _context.next = 39;\n                break;\n              }\n\n              _context.next = 39;\n              return _awaitAsyncGenerator(_iterator.return());\n\n            case 39:\n              _context.prev = 39;\n\n              if (!_didIteratorError) {\n                _context.next = 42;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 42:\n              return _context.finish(39);\n\n            case 43:\n              return _context.finish(34);\n\n            case 44:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 6], [12, 30, 34, 44], [35,, 39, 43]]);\n    }));\n\n    function get(_x, _x2) {\n      return _get.apply(this, arguments);\n    }\n\n    return get;\n  }());\n};","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/ipfs/src/core/components/get.js"],"names":["exporter","require","errCode","normalizeCidPath","mapFile","withTimeoutOption","module","exports","ipld","preload","ipfsPath","options","pathComponents","split","recursive","file","includeContent","get"],"mappings":"AAAA;;;;;;;;;;;;AAEA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,sBAAD,CAAxB;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,UAAD,CAAvB;;eACyDA,OAAO,CAAC,UAAD,C;IAAxDE,gB,YAAAA,gB;IAAkBC,O,YAAAA,O;IAASC,iB,YAAAA,iB;;AAEnCC,MAAM,CAACC,OAAP,GAAiB,gBAA6B;AAAA,MAAjBC,IAAiB,QAAjBA,IAAiB;AAAA,MAAXC,OAAW,QAAXA,OAAW;AAC5C,SAAOJ,iBAAiB;AAAA,0EAAC,iBAAsBK,QAAtB,EAAgCC,OAAhC;AAAA;;AAAA;AAAA;AAAA;AAAA;AACvBA,cAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;;AADuB,oBAGnBA,OAAO,CAACF,OAAR,KAAoB,KAHD;AAAA;AAAA;AAAA;;AAAA;AAOnBG,cAAAA,cAAc,GAAGT,gBAAgB,CAACO,QAAD,CAAhB,CAA2BG,KAA3B,CAAiC,GAAjC,CAAjB;AAPmB;AAAA;;AAAA;AAAA;AAAA;AAAA,oBASbX,OAAO,cAAM,kBAAN,CATM;;AAAA;AAYrBO,cAAAA,OAAO,CAACG,cAAc,CAAC,CAAD,CAAf,CAAP;;AAZqB;AAAA;AAAA;AAAA;AAAA,yCAeEZ,QAAQ,CAACc,SAAT,CAAmBJ,QAAnB,EAA6BF,IAA7B,EAAmCG,OAAnC,CAfF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAeNI,cAAAA,IAfM;AAAA;AAgBrB,qBAAMX,OAAO,CAACW,IAAD,kCACRJ,OADQ;AAEXK,gBAAAA,cAAc,EAAE;AAFL,iBAAb;;AAhBqB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA,aAAkBC,GAAlB;AAAA;AAAA;;AAAA,WAAkBA,GAAlB;AAAA,MAAxB;AAsBD,CAvBD","sourcesContent":["'use strict'\n\nconst exporter = require('ipfs-unixfs-exporter')\nconst errCode = require('err-code')\nconst { normalizeCidPath, mapFile, withTimeoutOption } = require('../utils')\n\nmodule.exports = function ({ ipld, preload }) {\n  return withTimeoutOption(async function * get (ipfsPath, options) {\n    options = options || {}\n\n    if (options.preload !== false) {\n      let pathComponents\n\n      try {\n        pathComponents = normalizeCidPath(ipfsPath).split('/')\n      } catch (err) {\n        throw errCode(err, 'ERR_INVALID_PATH')\n      }\n\n      preload(pathComponents[0])\n    }\n\n    for await (const file of exporter.recursive(ipfsPath, ipld, options)) {\n      yield mapFile(file, {\n        ...options,\n        includeContent: true\n      })\n    }\n  })\n}\n"]},"metadata":{},"sourceType":"script"}