{"ast":null,"code":"/* @flow */\n'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _inherits = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _classCallCheck = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar Key = require('interface-datastore').Key;\n\nvar readme = require('./shard-readme'); // eslint-disable-next-line\n\n/*:: import type {Datastore, Callback} from 'interface-datastore'\n\nexport interface ShardV1 {\n  name: string;\n  param: number;\n  fun(string): string;\n  toString(): string;\n}\n*/\n\n\nvar PREFIX = exports.PREFIX = '/repo/flatfs/shard/';\nvar SHARDING_FN = exports.SHARDING_FN = 'SHARDING';\nexports.README_FN = '_README';\n\nvar Shard = /*#__PURE__*/function () {\n  /* :: name: string */\n\n  /* :: param: number */\n\n  /* :: _padding: string */\n  function Shard(param\n  /* : number */\n  ) {\n    _classCallCheck(this, Shard);\n\n    this.param = param;\n  }\n\n  _createClass(Shard, [{\n    key: \"fun\",\n    value: function fun(str\n    /* : string */\n    )\n    /* : string */\n    {\n      throw new Error('implement me');\n    }\n  }, {\n    key: \"toString\",\n    value: function toString()\n    /* : string */\n    {\n      return \"\".concat(PREFIX, \"v1/\").concat(this.name, \"/\").concat(this.param);\n    }\n  }]);\n\n  return Shard;\n}();\n\nvar Prefix = /*#__PURE__*/function (_Shard) {\n  _inherits(Prefix, _Shard);\n\n  var _super = _createSuper(Prefix);\n\n  function Prefix(prefixLen\n  /* : number */\n  ) {\n    var _this;\n\n    _classCallCheck(this, Prefix);\n\n    _this = _super.call(this, prefixLen);\n    _this._padding = ''.padStart(prefixLen, '_');\n    _this.name = 'prefix';\n    return _this;\n  }\n\n  _createClass(Prefix, [{\n    key: \"fun\",\n    value: function fun(noslash\n    /* : string */\n    )\n    /* : string */\n    {\n      return (noslash + this._padding).slice(0, this.param);\n    }\n  }]);\n\n  return Prefix;\n}(Shard);\n\nvar Suffix = /*#__PURE__*/function (_Shard2) {\n  _inherits(Suffix, _Shard2);\n\n  var _super2 = _createSuper(Suffix);\n\n  function Suffix(suffixLen\n  /* : number */\n  ) {\n    var _this2;\n\n    _classCallCheck(this, Suffix);\n\n    _this2 = _super2.call(this, suffixLen);\n    _this2._padding = ''.padStart(suffixLen, '_');\n    _this2.name = 'suffix';\n    return _this2;\n  }\n\n  _createClass(Suffix, [{\n    key: \"fun\",\n    value: function fun(noslash\n    /* : string */\n    )\n    /* : string */\n    {\n      var s = this._padding + noslash;\n      return s.slice(s.length - this.param);\n    }\n  }]);\n\n  return Suffix;\n}(Shard);\n\nvar NextToLast = /*#__PURE__*/function (_Shard3) {\n  _inherits(NextToLast, _Shard3);\n\n  var _super3 = _createSuper(NextToLast);\n\n  function NextToLast(suffixLen\n  /* : number */\n  ) {\n    var _this3;\n\n    _classCallCheck(this, NextToLast);\n\n    _this3 = _super3.call(this, suffixLen);\n    _this3._padding = ''.padStart(suffixLen + 1, '_');\n    _this3.name = 'next-to-last';\n    return _this3;\n  }\n\n  _createClass(NextToLast, [{\n    key: \"fun\",\n    value: function fun(noslash\n    /* : string */\n    )\n    /* : string */\n    {\n      var s = this._padding + noslash;\n      var offset = s.length - this.param - 1;\n      return s.slice(offset, offset + this.param);\n    }\n  }]);\n\n  return NextToLast;\n}(Shard);\n/**\n * Convert a given string to the matching sharding function.\n *\n * @param {string} str\n * @returns {ShardV1}\n */\n\n\nfunction parseShardFun(str\n/* : string */\n) {\n  str = str.trim();\n\n  if (str.length === 0) {\n    throw new Error('empty shard string');\n  }\n\n  if (!str.startsWith(PREFIX)) {\n    throw new Error(\"invalid or no path prefix: \".concat(str));\n  }\n\n  var parts = str.slice(PREFIX.length).split('/');\n  var version = parts[0];\n\n  if (version !== 'v1') {\n    throw new Error(\"expect 'v1' version, got '\".concat(version, \"'\"));\n  }\n\n  var name = parts[1];\n\n  if (!parts[2]) {\n    throw new Error('missing param');\n  }\n\n  var param = parseInt(parts[2], 10);\n\n  switch (name) {\n    case 'prefix':\n      return new Prefix(param);\n\n    case 'suffix':\n      return new Suffix(param);\n\n    case 'next-to-last':\n      return new NextToLast(param);\n\n    default:\n      throw new Error(\"unkown sharding function: \".concat(name));\n  }\n}\n\nexports.readShardFun = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(path\n  /* : string */\n  , store) {\n    var key, get, res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            key = new Key(path).child(new Key(SHARDING_FN));\n            get = typeof store.getRaw === 'function' ? store.getRaw.bind(store) : store.get.bind(store);\n            _context.next = 4;\n            return get(key);\n\n          case 4:\n            res = _context.sent;\n            return _context.abrupt(\"return\", parseShardFun((res || '').toString().trim()));\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.readme = readme;\nexports.parseShardFun = parseShardFun;\nexports.Prefix = Prefix;\nexports.Suffix = Suffix;\nexports.NextToLast = NextToLast;","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/datastore-core/src/shard.js"],"names":["Key","require","readme","PREFIX","exports","SHARDING_FN","README_FN","Shard","param","str","Error","name","Prefix","prefixLen","_padding","padStart","noslash","slice","Suffix","suffixLen","s","length","NextToLast","offset","parseShardFun","trim","startsWith","parts","split","version","parseInt","readShardFun","path","store","key","child","get","getRaw","bind","res","toString"],"mappings":"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","sourcesContent":["/* @flow */\n'use strict'\n\nconst Key = require('interface-datastore').Key\n\nconst readme = require('./shard-readme')\n\n// eslint-disable-next-line\n/*:: import type {Datastore, Callback} from 'interface-datastore'\n\nexport interface ShardV1 {\n  name: string;\n  param: number;\n  fun(string): string;\n  toString(): string;\n}\n*/\n\nconst PREFIX = exports.PREFIX = '/repo/flatfs/shard/'\nconst SHARDING_FN = exports.SHARDING_FN = 'SHARDING'\nexports.README_FN = '_README'\n\nclass Shard {\n  /* :: name: string */\n  /* :: param: number */\n  /* :: _padding: string */\n\n  constructor (param /* : number */) {\n    this.param = param\n  }\n\n  fun (str /* : string */) /* : string */ {\n    throw new Error('implement me')\n  }\n\n  toString () /* : string */ {\n    return `${PREFIX}v1/${this.name}/${this.param}`\n  }\n}\n\nclass Prefix extends Shard {\n  constructor (prefixLen /* : number */) {\n    super(prefixLen)\n    this._padding = ''.padStart(prefixLen, '_')\n    this.name = 'prefix'\n  }\n\n  fun (noslash /* : string */) /* : string */ {\n    return (noslash + this._padding).slice(0, this.param)\n  }\n}\n\nclass Suffix extends Shard {\n  constructor (suffixLen /* : number */) {\n    super(suffixLen)\n    this._padding = ''.padStart(suffixLen, '_')\n    this.name = 'suffix'\n  }\n\n  fun (noslash /* : string */) /* : string */ {\n    const s = this._padding + noslash\n    return s.slice(s.length - this.param)\n  }\n}\n\nclass NextToLast extends Shard {\n  constructor (suffixLen /* : number */) {\n    super(suffixLen)\n    this._padding = ''.padStart(suffixLen + 1, '_')\n    this.name = 'next-to-last'\n  }\n\n  fun (noslash /* : string */) /* : string */ {\n    const s = this._padding + noslash\n    const offset = s.length - this.param - 1\n    return s.slice(offset, offset + this.param)\n  }\n}\n\n/**\n * Convert a given string to the matching sharding function.\n *\n * @param {string} str\n * @returns {ShardV1}\n */\nfunction parseShardFun (str /* : string */) {\n  str = str.trim()\n\n  if (str.length === 0) {\n    throw new Error('empty shard string')\n  }\n\n  if (!str.startsWith(PREFIX)) {\n    throw new Error(`invalid or no path prefix: ${str}`)\n  }\n\n  const parts = str.slice(PREFIX.length).split('/')\n  const version = parts[0]\n\n  if (version !== 'v1') {\n    throw new Error(`expect 'v1' version, got '${version}'`)\n  }\n\n  const name = parts[1]\n\n  if (!parts[2]) {\n    throw new Error('missing param')\n  }\n\n  const param = parseInt(parts[2], 10)\n\n  switch (name) {\n    case 'prefix':\n      return new Prefix(param)\n    case 'suffix':\n      return new Suffix(param)\n    case 'next-to-last':\n      return new NextToLast(param)\n    default:\n      throw new Error(`unkown sharding function: ${name}`)\n  }\n}\n\nexports.readShardFun = async (path /* : string */, store) /* : Promise<ShardV1> */ => {\n  const key = new Key(path).child(new Key(SHARDING_FN))\n  const get = typeof store.getRaw === 'function' ? store.getRaw.bind(store) : store.get.bind(store)\n  const res = await get(key)\n  return parseShardFun((res || '').toString().trim())\n}\n\nexports.readme = readme\nexports.parseShardFun = parseShardFun\nexports.Prefix = Prefix\nexports.Suffix = Suffix\nexports.NextToLast = NextToLast\n"]},"metadata":{},"sourceType":"script"}