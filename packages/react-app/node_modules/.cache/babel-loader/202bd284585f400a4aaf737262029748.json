{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _regeneratorRuntime = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _wrapAsyncGenerator = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\n\nvar _awaitAsyncGenerator = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\n\nvar _asyncIterator = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncIterator\");\n\nvar _asyncGeneratorDelegate = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncGeneratorDelegate\");\n\nvar Reader = require('it-reader');\n\nvar Writer = require('it-pushable');\n\nvar defer = require('p-defer'); // Convert a duplex stream into a reader and writer and rest stream\n\n\nmodule.exports = function (stream) {\n  var writer = Writer(); // Write bytes on demand to the sink\n\n  var reader = Reader(stream.source); // Read bytes on demand from the source\n  // Waits for a source to be passed to the rest stream's sink\n\n  var sourcePromise = defer();\n  var sinkPromise = stream.sink(_wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var source;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.delegateYield(_asyncGeneratorDelegate(_asyncIterator(writer), _awaitAsyncGenerator), \"t0\", 1);\n\n          case 1:\n            _context.next = 3;\n            return _awaitAsyncGenerator(sourcePromise.promise);\n\n          case 3:\n            source = _context.sent;\n            return _context.delegateYield(_asyncGeneratorDelegate(_asyncIterator(source), _awaitAsyncGenerator), \"t1\", 5);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }))());\n  var rest = {\n    sink: function sink(source) {\n      sourcePromise.resolve(source);\n      return sinkPromise;\n    },\n    source: reader\n  };\n  return {\n    reader: reader,\n    writer: writer,\n    stream: rest,\n    rest: function rest() {\n      return writer.end();\n    },\n    write: writer.push,\n    read: function () {\n      var _read = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return reader.next();\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent.value);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function read() {\n        return _read.apply(this, arguments);\n      }\n\n      return read;\n    }()\n  };\n};","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/it-handshake/src/index.js"],"names":["Reader","require","Writer","defer","module","exports","stream","writer","reader","source","sourcePromise","sinkPromise","sink","promise","rest","resolve","end","write","push","read","next","value"],"mappings":"AAAA;;;;;;;;;;;;;;AAEA,IAAMA,MAAM,GAAGC,OAAO,CAAC,WAAD,CAAtB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,aAAD,CAAtB;;AACA,IAAME,KAAK,GAAGF,OAAO,CAAC,SAAD,CAArB,C,CAEA;;;AACAG,MAAM,CAACC,OAAP,GAAiB,UAAAC,MAAM,EAAI;AACzB,MAAMC,MAAM,GAAGL,MAAM,EAArB,CADyB,CACD;;AACxB,MAAMM,MAAM,GAAGR,MAAM,CAACM,MAAM,CAACG,MAAR,CAArB,CAFyB,CAEY;AAErC;;AACA,MAAMC,aAAa,GAAGP,KAAK,EAA3B;AAEA,MAAMQ,WAAW,GAAGL,MAAM,CAACM,IAAP,CAAY,2DAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAC/B,iFAAQL,MAAR;;AAD+B;AAAA;AAAA,wCAEVG,aAAa,CAACG,OAFJ;;AAAA;AAEzBJ,YAAAA,MAFyB;AAG/B,iFAAQA,MAAR;;AAH+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,IAAZ,CAApB;AAMA,MAAMK,IAAI,GAAG;AACXF,IAAAA,IAAI,EAAE,cAAAH,MAAM,EAAI;AACdC,MAAAA,aAAa,CAACK,OAAd,CAAsBN,MAAtB;AACA,aAAOE,WAAP;AACD,KAJU;AAKXF,IAAAA,MAAM,EAAED;AALG,GAAb;AAQA,SAAO;AACLA,IAAAA,MAAM,EAANA,MADK;AAELD,IAAAA,MAAM,EAANA,MAFK;AAGLD,IAAAA,MAAM,EAAEQ,IAHH;AAILA,IAAAA,IAAI,EAAE;AAAA,aAAMP,MAAM,CAACS,GAAP,EAAN;AAAA,KAJD;AAKLC,IAAAA,KAAK,EAAEV,MAAM,CAACW,IALT;AAMLC,IAAAA,IAAI;AAAA,2EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACUX,MAAM,CAACY,IAAP,EADV;;AAAA;AAAA,iEACyBC,KADzB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AANC,GAAP;AAUD,CA/BD","sourcesContent":["'use strict'\n\nconst Reader = require('it-reader')\nconst Writer = require('it-pushable')\nconst defer = require('p-defer')\n\n// Convert a duplex stream into a reader and writer and rest stream\nmodule.exports = stream => {\n  const writer = Writer() // Write bytes on demand to the sink\n  const reader = Reader(stream.source) // Read bytes on demand from the source\n\n  // Waits for a source to be passed to the rest stream's sink\n  const sourcePromise = defer()\n\n  const sinkPromise = stream.sink((async function * () {\n    yield * writer\n    const source = await sourcePromise.promise\n    yield * source\n  })())\n\n  const rest = {\n    sink: source => {\n      sourcePromise.resolve(source)\n      return sinkPromise\n    },\n    source: reader\n  }\n\n  return {\n    reader,\n    writer,\n    stream: rest,\n    rest: () => writer.end(),\n    write: writer.push,\n    read: async () => {\n      return (await reader.next()).value\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}