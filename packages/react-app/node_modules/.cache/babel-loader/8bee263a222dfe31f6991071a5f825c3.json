{"ast":null,"code":"'use strict';\n\nvar _toConsumableArray = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nrequire('node-forge/lib/rsa');\n\nvar forge = require('node-forge/lib/forge');\n\nvar _require = require('../util'),\n    base64urlToBigInteger = _require.base64urlToBigInteger;\n\nfunction convert(key, types) {\n  return types.map(function (t) {\n    return base64urlToBigInteger(key[t]);\n  });\n}\n\nfunction jwk2priv(key) {\n  var _forge$pki;\n\n  return (_forge$pki = forge.pki).setRsaPrivateKey.apply(_forge$pki, _toConsumableArray(convert(key, ['n', 'e', 'd', 'p', 'q', 'dp', 'dq', 'qi'])));\n}\n\nfunction jwk2pub(key) {\n  var _forge$pki2;\n\n  return (_forge$pki2 = forge.pki).setRsaPublicKey.apply(_forge$pki2, _toConsumableArray(convert(key, ['n', 'e'])));\n}\n\nmodule.exports = {\n  jwk2pub: jwk2pub,\n  jwk2priv: jwk2priv\n};","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/libp2p-crypto/src/keys/jwk2pem.js"],"names":["require","forge","base64urlToBigInteger","convert","key","types","map","t","jwk2priv","pki","setRsaPrivateKey","jwk2pub","setRsaPublicKey","module","exports"],"mappings":"AAAA;;;;AAEAA,OAAO,CAAC,oBAAD,CAAP;;AACA,IAAMC,KAAK,GAAGD,OAAO,CAAC,sBAAD,CAArB;;eACkCA,OAAO,CAAC,SAAD,C;IAAjCE,qB,YAAAA,qB;;AAER,SAASC,OAAT,CAAkBC,GAAlB,EAAuBC,KAAvB,EAA8B;AAC5B,SAAOA,KAAK,CAACC,GAAN,CAAU,UAAAC,CAAC;AAAA,WAAIL,qBAAqB,CAACE,GAAG,CAACG,CAAD,CAAJ,CAAzB;AAAA,GAAX,CAAP;AACD;;AAED,SAASC,QAAT,CAAmBJ,GAAnB,EAAwB;AAAA;;AACtB,SAAO,cAAAH,KAAK,CAACQ,GAAN,EAAUC,gBAAV,sCAA8BP,OAAO,CAACC,GAAD,EAAM,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,IAA1B,EAAgC,IAAhC,EAAsC,IAAtC,CAAN,CAArC,EAAP;AACD;;AAED,SAASO,OAAT,CAAkBP,GAAlB,EAAuB;AAAA;;AACrB,SAAO,eAAAH,KAAK,CAACQ,GAAN,EAAUG,eAAV,uCAA6BT,OAAO,CAACC,GAAD,EAAM,CAAC,GAAD,EAAM,GAAN,CAAN,CAApC,EAAP;AACD;;AAEDS,MAAM,CAACC,OAAP,GAAiB;AACfH,EAAAA,OAAO,EAAPA,OADe;AAEfH,EAAAA,QAAQ,EAARA;AAFe,CAAjB","sourcesContent":["'use strict'\n\nrequire('node-forge/lib/rsa')\nconst forge = require('node-forge/lib/forge')\nconst { base64urlToBigInteger } = require('../util')\n\nfunction convert (key, types) {\n  return types.map(t => base64urlToBigInteger(key[t]))\n}\n\nfunction jwk2priv (key) {\n  return forge.pki.setRsaPrivateKey(...convert(key, ['n', 'e', 'd', 'p', 'q', 'dp', 'dq', 'qi']))\n}\n\nfunction jwk2pub (key) {\n  return forge.pki.setRsaPublicKey(...convert(key, ['n', 'e']))\n}\n\nmodule.exports = {\n  jwk2pub,\n  jwk2priv\n}\n"]},"metadata":{},"sourceType":"script"}