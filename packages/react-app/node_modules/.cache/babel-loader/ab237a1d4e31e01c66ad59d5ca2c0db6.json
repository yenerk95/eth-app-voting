{"ast":null,"code":"var _jsxFileName = \"/Users/yenerkaraca/Documents/GitHub/eth-app/packages/react-app/src/App.js\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { ethers } from \"ethers\";\nimport IPFS from \"ipfs\";\nimport logo from \"./ethereumLogo.png\";\nimport { addresses, abis } from \"@project/contracts\";\nimport \"./App.css\";\nconst ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\nlet node;\nconst defaultProvider = new ethers.providers.Web3Provider(window.ethereum);\nconst ipfsContract = new ethers.Contract(addresses.ipfs, abis.ipfs, defaultProvider);\nvar storageContract;\nconsole.log(addresses.ipfs);\n\nasync function initIpfs() {\n  node = await IPFS.create();\n  const version = await node.version();\n  console.log(\"IPFS Node Version:\", version.version);\n}\n\nasync function readCurrentUserFile() {\n  const result = await ipfsContract.userFiles(defaultProvider.getSigner().getAddress());\n  console.log({\n    result\n  });\n  const accounts = await window.ethereum.request({\n    method: 'eth_requestAccounts'\n  });\n  const account = accounts[0]; //metamask current account\n\n  return result;\n}\n\nasync function getaccount() {\n  const accounts = await window.ethereum.request({\n    method: 'eth_requestAccounts'\n  });\n  Object.values(accounts);\n  const account = JSON.stringify(accounts[0]);\n  console.log(\"FUNC\");\n  console.log({\n    account\n  });\n  return account;\n}\n\nfunction App() {\n  const [ipfsHash, setIpfsHash] = useState(\"\");\n  useEffect(() => {\n    initIpfs();\n    window.ethereum.enable();\n  }, []);\n  useEffect(() => {\n    async function readFile() {\n      const file = await readCurrentUserFile();\n      if (file !== ZERO_ADDRESS) setIpfsHash(file);\n    }\n\n    readFile();\n  }, []);\n  const [accountHash, setAccountHash] = useState(\"\");\n  useEffect(() => {\n    window.ethereum.enable();\n  }, []);\n  useEffect(() => {\n    async function readFile() {\n      const file1 = await getaccount();\n      if (file1 !== ZERO_ADDRESS) setAccountHash(file1);\n    }\n\n    checkbuyer();\n    readFile();\n  }, []);\n\n  async function setFile(hash) {\n    const ipfsWithSigner = ipfsContract.connect(defaultProvider.getSigner());\n    const tx = await ipfsWithSigner.setFile(hash);\n    console.log({\n      tx\n    });\n    setIpfsHash(hash);\n    ipfsWithSigner.store(hash);\n  }\n\n  function SetContract() {\n    storageContract = new ethers.Contract(itemInput2, abis.storage, defaultProvider);\n    console.log(itemInput2);\n    console.log(abis.storage);\n    console.log(storageContract);\n\n    try {\n      if (itemInput2 == \"\") throw \"Empty! Enter Smart Contract Hash.\";\n      if (isNaN(itemInput2)) throw \"Not a number! Enter Smart Contract Hash.\";\n    } catch (err) {\n      console.log(err);\n      document.getElementById(\"text-box\").innerHTML = err;\n    }\n\n    return storageContract;\n  }\n\n  async function Buyer() {\n    try {\n      const storageWithSigner = storageContract.connect(defaultProvider.getSigner());\n      await storageWithSigner.buyerUpload(ipfsHash, itemInput);\n    } catch (err) {\n      console.log(err.message);\n      document.getElementById(\"text-box\").innerHTML = err.message;\n    }\n  }\n\n  async function Seller() {\n    try {\n      const storageWithSigner = storageContract.connect(defaultProvider.getSigner());\n      await storageWithSigner.sellerUpload(ipfsHash);\n    } catch (err) {\n      console.log(err.message);\n      document.getElementById(\"text-box\").innerHTML = err.message;\n    }\n  }\n\n  async function Extend() {\n    try {\n      const storageWithSigner = storageContract.connect(defaultProvider.getSigner());\n      await storageWithSigner.ExtendTime(itemInput1);\n    } catch (err) {\n      console.log(err.message);\n      document.getElementById(\"text-box\").innerHTML = err.message;\n    }\n  }\n\n  async function status() {\n    var status_array = [\"ON\", \"BUYER_UPLOADED\", \"SELLER_UPLOADED\", \"DOC_OK\", \"DOC_DEFECT\", \"DOC_REJECTED\"];\n\n    try {\n      const storageWithSigner = storageContract.connect(defaultProvider.getSigner());\n      var statust = await storageWithSigner.getStatus();\n      document.getElementById(\"text-box1\").innerHTML = status_array[statust];\n      return;\n    } catch (err) {\n      console.log(err.message);\n      document.getElementById(\"text-box\").innerHTML = err.message;\n    }\n  }\n\n  async function time() {\n    var time_array = [\"ON_TIME\", \"OUT_OF_TIME\"];\n\n    try {\n      const storageWithSigner = storageContract.connect(defaultProvider.getSigner());\n      var timet = await storageWithSigner.getTimeStatus();\n      document.getElementById(\"text-box2\").innerHTML = time_array[timet];\n      return;\n    } catch (err) {\n      console.log(err.message);\n      document.getElementById(\"text-box\").innerHTML = err.message;\n    }\n  }\n\n  async function checkbuyer() {\n    try {\n      const storageWithSigner = storageContract.connect(defaultProvider.getSigner());\n      var buyert = await storageWithSigner.getBuyer();\n      return buyert == accountHash;\n    } catch (err) {}\n  }\n\n  async function checkseller() {\n    try {\n      const storageWithSigner = storageContract.connect(defaultProvider.getSigner());\n      var sellert = await storageWithSigner.getSeller();\n      return sellert == accountHash;\n    } catch (err) {\n      console.log(err.message);\n      document.getElementById(\"text-box\").innerHTML = err.message;\n    }\n  }\n\n  async function getContractFile() {\n    try {\n      const storageWithSigner = storageContract.connect(defaultProvider.getSigner());\n      var contractfile = await storageWithSigner.See_Doc_Hash(itemInput3);\n      document.getElementById(\"myAnchor\").innerHTML = \"See Contract File\";\n      document.getElementById(\"myAnchor\").href = `https://ipfs.io/ipfs/${contractfile}`;\n      document.getElementById(\"myAnchor\").target = \"_blank\";\n    } catch (err) {\n      console.log(err.message);\n      document.getElementById(\"text-box\").innerHTML = err.message;\n    }\n  }\n\n  console.log(ipfsHash);\n  const uploadFile = useCallback(async file => {\n    const files = [{\n      path: file.name + file.path,\n      content: file\n    }];\n\n    for await (const result of node.add(files)) {\n      await setFile(result.cid.string);\n    }\n  }, []);\n  const onDrop = useCallback(acceptedFiles => {\n    uploadFile(acceptedFiles[0]);\n  }, [uploadFile]);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    multiple: false,\n    onDrop\n  });\n  const [itemInput, setItemInput] = useState(\"\");\n  console.log(itemInput);\n  const [itemInput1, setItemInput1] = useState(\"\");\n  console.log(itemInput1);\n  const [itemInput2, setItemInput2] = useState(\"\");\n  console.log(itemInput2);\n  const [itemInput3, setItemInput3] = useState(\"\");\n  console.log(itemInput3);\n\n  if (1) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"text-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 7\n      }\n    }, \"Smart Contract: \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Contract Hash\",\n      value: itemInput2,\n      onChange: e => setItemInput2(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: SetContract,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }\n    }, \"Set\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 7\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"button\", {\n      onClick: status,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 13\n      }\n    }, \"See Current Status\"), \" \", /*#__PURE__*/React.createElement(\"button\", {\n      onClick: time,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 66\n      }\n    }, \"See Current Time\"), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"text-box1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"text-box2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps(), {\n      style: {\n        cursor: \"pointer\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"react-logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 11\n      }\n    })), isDragActive ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 13\n      }\n    }, \"Drop the files here ...\") : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 13\n      }\n    }, \"Drag 'n' drop some files here to upload to IPFS (or click the logo)\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }\n    }, ipfsHash !== \"\" ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 13\n      }\n    }, \"Current IPFS Hash: \", /*#__PURE__*/React.createElement(\"mark\", {\n      className: \"mark-red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 35\n      }\n    }, \"\\\"\", ipfsHash, \"\\\"\")) : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }\n    }, \"Current User Hash:\", /*#__PURE__*/React.createElement(\"mark\", {\n      className: \"mark-yellow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 32\n      }\n    }, accountHash)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }\n    }, ipfsHash !== \"\" ? /*#__PURE__*/React.createElement(\"a\", {\n      href: `https://ipfs.io/ipfs/${ipfsHash}`,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 13\n      }\n    }, \"See current user file\") : \"No user file set yet\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }\n    }, \"Buyer Sets Time and Uploads to The Smart Contract: \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Time\",\n      value: itemInput,\n      onChange: e => setItemInput(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 61\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: Buyer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 10\n      }\n    }, \"Buyer Upload\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }\n    }, \"Buyer Extends Time:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Time\",\n      value: itemInput1,\n      onChange: e => setItemInput1(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: Extend,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }\n    }, \"Buyer Extend\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 10\n      }\n    }, \"Seller Uploads to The Smart Contract: \", /*#__PURE__*/React.createElement(\"button\", {\n      onClick: Seller,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 53\n      }\n    }, \"Seller Upload\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 10\n      }\n    }, \"Smart Contract Files: \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Hash\",\n      value: itemInput3,\n      onChange: e => setItemInput3(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: getContractFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }\n    }, \"See Contract Files\")), /*#__PURE__*/React.createElement(\"a\", {\n      id: \"myAnchor\",\n      href: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 10\n      }\n    }, checkbuyer() ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 13\n      }\n    }, \"Current IPFS Hash:\") : \"\")));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 21\n      }\n    }, \"no\");\n  }\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/packages/react-app/src/App.js"],"names":["React","useCallback","useEffect","useState","useDropzone","ethers","IPFS","logo","addresses","abis","ZERO_ADDRESS","node","defaultProvider","providers","Web3Provider","window","ethereum","ipfsContract","Contract","ipfs","storageContract","console","log","initIpfs","create","version","readCurrentUserFile","result","userFiles","getSigner","getAddress","accounts","request","method","account","getaccount","Object","values","JSON","stringify","App","ipfsHash","setIpfsHash","enable","readFile","file","accountHash","setAccountHash","file1","checkbuyer","setFile","hash","ipfsWithSigner","connect","tx","store","SetContract","itemInput2","storage","isNaN","err","document","getElementById","innerHTML","Buyer","storageWithSigner","buyerUpload","itemInput","message","Seller","sellerUpload","Extend","ExtendTime","itemInput1","status","status_array","statust","getStatus","time","time_array","timet","getTimeStatus","buyert","getBuyer","checkseller","sellert","getSeller","getContractFile","contractfile","See_Doc_Hash","itemInput3","href","target","uploadFile","files","path","name","content","add","cid","string","onDrop","acceptedFiles","getRootProps","getInputProps","isDragActive","multiple","setItemInput","setItemInput1","setItemInput2","setItemInput3","e","value","cursor"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { ethers } from \"ethers\";\nimport IPFS from \"ipfs\";\n\nimport logo from \"./ethereumLogo.png\";\nimport { addresses, abis } from \"@project/contracts\";\n\nimport \"./App.css\";\n\nconst ZERO_ADDRESS =\n  \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n\nlet node;\n\nconst defaultProvider = new ethers.providers.Web3Provider(window.ethereum);\nconst ipfsContract = new ethers.Contract(\n  addresses.ipfs,\n  abis.ipfs,\n  defaultProvider\n);\nvar storageContract;\nconsole.log( addresses.ipfs);\n\nasync function initIpfs() {\n  node = await IPFS.create();\n  const version = await node.version();\n  console.log(\"IPFS Node Version:\", version.version);\n}\n\nasync function readCurrentUserFile() {\n  const result = await ipfsContract.userFiles(\n    defaultProvider.getSigner().getAddress()\n    \n  \n  );\n  console.log({ result });\n \n  const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n  const account = accounts[0];//metamask current account\n\n  \n  return result;\n}\nasync function getaccount(){\n  const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n  Object.values(accounts);\n  const account =JSON.stringify(accounts[0]);\n  console.log(\"FUNC\");\n\n  console.log({ account });\n\nreturn account\n}\n\n\nfunction App() {\n  const [ipfsHash, setIpfsHash] = useState(\"\");\n  useEffect(() => {\n    initIpfs();\n    window.ethereum.enable();\n  }, []);\n\n  useEffect(() => {\n    async function readFile() {\n      const file = await readCurrentUserFile();\n\n      if (file !== ZERO_ADDRESS) setIpfsHash(file);\n    }\n    readFile();\n  }, []);\n\n\n  const [accountHash, setAccountHash] = useState(\"\");\n  useEffect(() => {\n    window.ethereum.enable();\n  }, []);\n\n  useEffect(() => {\n    async function readFile() {\n      const file1 = await getaccount();\n\n      if (file1 !== ZERO_ADDRESS) setAccountHash(file1);\n    }\n    checkbuyer();\n    readFile();\n  }, []);\n\n\n  async function setFile(hash) {\n    const ipfsWithSigner = ipfsContract.connect(defaultProvider.getSigner());\n    const tx = await ipfsWithSigner.setFile(hash);\n    console.log({ tx });\n\n    setIpfsHash(hash);\n    \n    ipfsWithSigner.store(hash);\n\n  \n  }\n\n   function SetContract() {\n    storageContract = new ethers.Contract(itemInput2, abis.storage, defaultProvider);\n    console.log(itemInput2);\n    console.log(abis.storage);\n    console.log(storageContract);\n\n      \n    try {\n      if(itemInput2== \"\") throw \"Empty! Enter Smart Contract Hash.\";\n      if(isNaN(itemInput2)) throw \"Not a number! Enter Smart Contract Hash.\";\n      \n    }\n    catch(err) {\n      console.log(err);\n      document.getElementById(\"text-box\").innerHTML = err\n    }\n     \n    return storageContract;\n  \n  }\n\n\n  async function Buyer() {\n\n  \n    try {\n      const storageWithSigner = storageContract.connect(defaultProvider.getSigner());\n      await storageWithSigner.buyerUpload(ipfsHash,itemInput);\n      \n    }\n    catch(err) {\n      console.log(err.message);\n      document.getElementById(\"text-box\").innerHTML = err.message\n    }\n    \n  \n  }\n\n\n  async function Seller() {\n\n\n    \n    try {\n      const storageWithSigner = storageContract.connect(defaultProvider.getSigner());\n      await storageWithSigner.sellerUpload(ipfsHash);\n      \n    }\n    catch(err) {\n      console.log(err.message);\n      document.getElementById(\"text-box\").innerHTML = err.message\n    }\n    \n  \n  }\n\n  async function Extend() {\n\n\n\n    try {\n      const storageWithSigner = storageContract.connect(defaultProvider.getSigner());\n      await storageWithSigner.ExtendTime(itemInput1);\n      \n    }\n    catch(err) {\n      console.log(err.message);\n      document.getElementById(\"text-box\").innerHTML = err.message\n    }\n    \n  \n  }\n\n\n  async function status() {\n\n    var status_array=[\"ON\", \"BUYER_UPLOADED\", \"SELLER_UPLOADED\", \"DOC_OK\", \"DOC_DEFECT\", \"DOC_REJECTED\"];\n\n\n    try {\n      const storageWithSigner = storageContract.connect(defaultProvider.getSigner());\n\n      var statust = await storageWithSigner.getStatus();\n\n      document.getElementById(\"text-box1\").innerHTML = status_array[statust]\n      return \n      \n    }\n    catch(err) {\n      console.log(err.message);\n      document.getElementById(\"text-box\").innerHTML = err.message\n    }\n    \n    \n  \n  }\n\n\n  async function time() {\n\n    var time_array=[\"ON_TIME\", \"OUT_OF_TIME\"];\n\n\n    try {\n      const storageWithSigner = storageContract.connect(defaultProvider.getSigner());\n\n      var timet = await storageWithSigner.getTimeStatus();\n\n      document.getElementById(\"text-box2\").innerHTML = time_array[timet]\n      return \n      \n    }\n    catch(err) {\n      console.log(err.message);\n      document.getElementById(\"text-box\").innerHTML = err.message\n    }\n    \n    \n  \n  }\n\n\n  async function checkbuyer() {\n\n\n    try {\n      const storageWithSigner = storageContract.connect(defaultProvider.getSigner());\n\n      var buyert = await storageWithSigner.getBuyer();\n\n      return (buyert==accountHash)\n      \n    }\n    catch(err) {\n    }\n    \n    \n  \n  }\n\n  async function checkseller() {\n\n\n    try {\n      const storageWithSigner = storageContract.connect(defaultProvider.getSigner());\n\n      var sellert = await storageWithSigner.getSeller();\n\n      return (sellert==accountHash)\n      \n    }\n    catch(err) {\n      console.log(err.message);\n      document.getElementById(\"text-box\").innerHTML = err.message\n    }\n    \n    \n  \n  }\n  \n\n  async function getContractFile() {\n\n    \n    try {\n      const storageWithSigner = storageContract.connect(defaultProvider.getSigner());\n\n      var contractfile = await storageWithSigner.See_Doc_Hash(itemInput3);\n      document.getElementById(\"myAnchor\").innerHTML =\"See Contract File\";\n      document.getElementById(\"myAnchor\").href = `https://ipfs.io/ipfs/${contractfile}`;\n      document.getElementById(\"myAnchor\").target = \"_blank\";\n      \n    }\n    catch(err) {\n      console.log(err.message);\n      document.getElementById(\"text-box\").innerHTML = err.message\n    }\n\n       \n  \n  }\n  \n  console.log(ipfsHash);\n  \n\n  const uploadFile = useCallback(async (file) => {\n    const files = [\n      {\n        path: file.name + file.path,\n        content: file,\n      },\n    ];\n\n    for await (const result of node.add(files)) {\n      await setFile(result.cid.string);\n    }\n  }, []);\n\n  const onDrop = useCallback(\n    (acceptedFiles) => {\n      uploadFile(acceptedFiles[0]);\n    },\n    [uploadFile]\n  );\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    multiple: false,\n    onDrop,\n  });\n\n  const [itemInput, setItemInput] = useState(\"\");\n  console.log(itemInput);\n  const [itemInput1, setItemInput1] = useState(\"\");\n  console.log(itemInput1);\n  const [itemInput2, setItemInput2] = useState(\"\");\n  console.log(itemInput2);\n  const [itemInput3, setItemInput3] = useState(\"\");\n  console.log(itemInput3);\n\n  \n\nif(1){\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <div id=\"text-box\"></div>\n      <div>\n          Smart Contract: <input type=\"text\" placeholder=\"Contract Hash\" value={itemInput2} onChange={e => setItemInput2(e.target.value)}/>\n        <button onClick={SetContract}>Set</button>\n      </div>\n      <div> <button onClick={status}>See Current Status</button> <button onClick={time}>See Current Time</button> </div>\n      \n      <div id=\"text-box1\"></div>\n      \n      <div id=\"text-box2\"></div>\n\n        <div {...getRootProps()} style={{ cursor: \"pointer\" }}>\n          <img src={logo} className=\"App-logo\" alt=\"react-logo\" />\n          <input {...getInputProps()} />\n          {isDragActive ? (\n            <p>Drop the files here ...</p>\n          ) : (\n            <p>\n              Drag 'n' drop some files here to upload to IPFS (or click the\n              logo)\n            </p>\n          )}\n        </div>\n        \n        <div>\n          {ipfsHash !== \"\" ? (   \n            <p>Current IPFS Hash: <mark className=\"mark-red\">\"{ipfsHash}\"</mark></p>\n            ) : (\n              \"\"\n            )}\n        \n        </div>  \n        <div>Current User Hash:<mark className=\"mark-yellow\">{accountHash}</mark></div>\n   \n        <div>\n          {ipfsHash !== \"\" ? (\n            <a\n            \n              href={`https://ipfs.io/ipfs/${ipfsHash}`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              See current user file \n            </a>\n          ) : (\n            \"No user file set yet\"\n          )}\n\n        </div>\n        <div>\n         Buyer Sets Time and Uploads to The Smart Contract: <input type=\"text\" placeholder=\"Enter Time\" value={itemInput} onChange={e => setItemInput(e.target.value)}/>\n         <button onClick={Buyer}>Buyer Upload</button>\n        </div>\n        <div></div>\n      \n\n        <div>\n        Buyer Extends Time:\n        <input type=\"text\" placeholder=\"Enter Time\" value={itemInput1} onChange={e => setItemInput1(e.target.value)}\n       \n        />\n        <button onClick={Extend}>Buyer Extend</button>\n       </div>\n         <div>Seller Uploads to The Smart Contract: <button onClick={Seller}>Seller Upload</button>\n         </div>\n         <div>\n          Smart Contract Files: <input type=\"text\" placeholder=\"Enter Hash\" value={itemInput3} onChange={e => setItemInput3(e.target.value)}/>\n        <button onClick={getContractFile}>See Contract Files</button>\n         </div>\n         <a id=\"myAnchor\" href=\"\"></a>\n\n         <div>\n          {checkbuyer() ? (   \n            <p>Current IPFS Hash:</p>\n            ) : (\n              \"\"\n            )}\n        \n        </div>  \n\n\n      </header>\n\n    </div>\n  );\n          } else{\n            return (<div>no</div>\n\n            );\n          }        \n  \n}\n\nexport default App;\n\n\n"]},"metadata":{},"sourceType":"module"}