{"ast":null,"code":"var _jsxFileName = \"/Users/yenerkaraca/Documents/GitHub/eth-app/packages/react-app/src/App.js\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { ethers } from \"ethers\";\nimport IPFS from \"ipfs\";\nimport logo from \"./ethereumLogo.png\";\nimport { addresses, abis } from \"@project/contracts\";\nimport \"./App.css\";\n/* Store the original log functions. */\n\nconsole._log = console.log;\nconsole._info = console.info;\nconsole._warn = console.warn;\nconsole._error = console.error;\nconsole._debug = console.debug;\n/* Declare our console history variable. */\n\nconsole.history = [];\n/* Redirect all calls to the collector. */\n\nconsole.log = function () {\n  return console._intercept('log', arguments);\n};\n\nconsole.info = function () {\n  return console._intercept('info', arguments);\n};\n\nconsole.warn = function () {\n  return console._intercept('warn', arguments);\n};\n\nconsole.error = function () {\n  return console._intercept('error', arguments);\n};\n\nconsole.debug = function () {\n  return console._intercept('debug', arguments);\n};\n/* Give the developer the ability to intercept the message before letting\n   console-history access it. */\n\n\nconsole._intercept = function (type, args) {\n  // Your own code can go here, but the preferred method is to override this\n  // function in your own script, and add the line below to the end or\n  // begin of your own 'console._intercept' function.\n  // REMEMBER: Use only underscore console commands inside _intercept!\n  console._collect(type, args);\n};\n/* Define the main log catcher. */\n\n\nconsole._collect = function (type, args) {\n  // WARNING: When debugging this function, DO NOT call a modified console.log\n  // function, all hell will break loose.\n  // Instead use the original console._log functions.\n  // All the arguments passed to any function, even when not defined\n  // inside the function declaration, are stored and locally available in\n  // the variable called 'arguments'.\n  //\n  // The arguments of the original console.log functions are collected above,\n  // and passed to this function as a variable 'args', since 'arguments' is\n  // reserved for the current function.\n  // Collect the timestamp of the console log.\n  var time = new Date().toUTCString(); // Make sure the 'type' parameter is set. If no type is set, we fall\n  // back to the default log type.\n\n  if (!type) type = 'log'; // To ensure we behave like the original console log functions, we do not\n  // output anything if no arguments are provided.\n\n  if (!args || args.length === 0) return; // Act normal, and just pass all original arguments to\n  // the origial console function :)\n\n  console['_' + type].apply(console, args); // Get stack trace information. By throwing an error, we get access to\n  // a stack trace. We then go up in the trace tree and filter out\n  // irrelevant information.\n\n  var stack = false;\n\n  try {\n    throw Error('');\n  } catch (error) {\n    // The lines containing 'console-history.js' are not relevant to us.\n    var stackParts = error.stack.split('\\n');\n    stack = [];\n\n    for (var i = 0; i < stackParts.length; i++) {\n      if (stackParts[i].indexOf('console-history.js') > -1 || stackParts[i].indexOf('console-history.min.js') > -1 || stackParts[i] === 'Error') {\n        continue;\n      }\n\n      stack.push(stackParts[i].trim());\n    }\n  } // Add the log to our history.\n\n\n  console.history.push({\n    type: type,\n    timestamp: time,\n    arguments: args,\n    stack: stack\n  });\n};\n\nconst ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\nlet node;\nconst defaultProvider = new ethers.providers.Web3Provider(window.ethereum);\nconst ipfsContract = new ethers.Contract(addresses.ipfs, abis.ipfs, defaultProvider);\nvar storageContract;\nconsole.log(addresses.ipfs);\n\nasync function initIpfs() {\n  node = await IPFS.create();\n  const version = await node.version();\n  console.log(\"IPFS Node Version:\", version.version);\n}\n\nasync function readCurrentUserFile() {\n  const result = await ipfsContract.userFiles(defaultProvider.getSigner().getAddress());\n  console.log({\n    result\n  });\n  const accounts = await window.ethereum.request({\n    method: 'eth_requestAccounts'\n  });\n  const account = accounts[0]; //metamask current account\n\n  return result;\n}\n\nasync function getaccount() {\n  const accounts = await window.ethereum.request({\n    method: 'eth_requestAccounts'\n  });\n  Object.values(accounts);\n  const account = JSON.stringify(accounts[0]);\n  console.log(\"FUNC\");\n  console.log({\n    account\n  });\n  return account;\n}\n\nfunction App() {\n  const [ipfsHash, setIpfsHash] = useState(\"\");\n  useEffect(() => {\n    initIpfs();\n    window.ethereum.enable();\n  }, []);\n  useEffect(() => {\n    async function readFile() {\n      const file = await readCurrentUserFile();\n      if (file !== ZERO_ADDRESS) setIpfsHash(file);\n    }\n\n    readFile();\n  }, []);\n  const [accountHash, setAccountHash] = useState(\"\");\n  useEffect(() => {\n    window.ethereum.enable();\n  }, []);\n  useEffect(() => {\n    async function readFile() {\n      const file1 = await getaccount();\n      if (file1 !== ZERO_ADDRESS) setAccountHash(file1);\n    }\n\n    readFile();\n  }, []);\n\n  async function setFile(hash) {\n    const ipfsWithSigner = ipfsContract.connect(defaultProvider.getSigner());\n    const tx = await ipfsWithSigner.setFile(hash);\n    console.log({\n      tx\n    });\n    setIpfsHash(hash);\n    ipfsWithSigner.store(hash);\n  }\n\n  function SetContract() {\n    storageContract = new ethers.Contract(itemInput2, abis.storage, defaultProvider);\n    console.log(itemInput2);\n    console.log(abis.storage);\n    console.log(storageContract);\n    return storageContract;\n  }\n\n  async function Buyer() {\n    console.log(storageContract);\n    const storageWithSigner = storageContract.connect(defaultProvider.getSigner());\n    const tx1 = await storageWithSigner.buyerUpload(ipfsHash);\n  }\n\n  async function Seller() {\n    console.log(storageContract);\n    const storageWithSigner = storageContract.connect(defaultProvider.getSigner());\n    const tx2 = await storageWithSigner.sellerUpload(ipfsHash);\n  }\n\n  async function Set() {\n    console.log(storageContract);\n    const storageWithSigner = storageContract.connect(defaultProvider.getSigner());\n    const tx3 = await storageWithSigner.SetEndTime(itemInput);\n  }\n\n  async function Extend() {\n    console.log(storageContract);\n    const storageWithSigner = storageContract.connect(defaultProvider.getSigner());\n\n    try {\n      await storageWithSigner.ExtendTime(itemInput1);\n    } catch (err) {\n      console.log(err.message);\n      document.getElementById(\"text-box\").innerHTML = err.message;\n    }\n  }\n\n  console.log(ipfsHash);\n  const uploadFile = useCallback(async file => {\n    const files = [{\n      path: file.name + file.path,\n      content: file\n    }];\n\n    for await (const result of node.add(files)) {\n      await setFile(result.cid.string);\n    }\n  }, []);\n  const onDrop = useCallback(acceptedFiles => {\n    uploadFile(acceptedFiles[0]);\n  }, [uploadFile]);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    multiple: false,\n    onDrop\n  });\n  const [itemInput, setItemInput] = useState(\"\");\n  console.log(itemInput);\n  const [itemInput1, setItemInput1] = useState(\"\");\n  console.log(itemInput1);\n  const [itemInput2, setItemInput2] = useState(\"\");\n  console.log(itemInput2);\n\n  function pusher() {\n    document.getElementById(\"text-box\").innerHTML = ipfsHash;\n    console.log(console.history);\n    console.error(\"boom\");\n  }\n\n  console.log(console._error);\n  console.log(console.history);\n  console.log(\"EROEROROROEROER\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }\n  }, \"Smart Contract:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Contract Hash\",\n    value: itemInput2,\n    onChange: e => setItemInput2(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: SetContract,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 11\n    }\n  }, \"Fintech Set\")), /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps(), {\n    style: {\n      cursor: \"pointer\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    className: \"App-logo\",\n    alt: \"react-logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 11\n    }\n  })), isDragActive ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 13\n    }\n  }, \"Drop the files here ...\") : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 13\n    }\n  }, \"Drag 'n' drop some files here to upload to IPFS (or click the logo)\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 9\n    }\n  }, ipfsHash !== \"\" ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 13\n    }\n  }, \"IPFS Hash: \", /*#__PURE__*/React.createElement(\"mark\", {\n    className: \"mark-red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 27\n    }\n  }, \"\\\"\", ipfsHash, \"\\\"\")) : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 9\n    }\n  }, \"User Hash:\", /*#__PURE__*/React.createElement(\"mark\", {\n    className: \"mark-yellow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 24\n    }\n  }, accountHash)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 9\n    }\n  }, ipfsHash !== \"\" ? /*#__PURE__*/React.createElement(\"a\", {\n    href: `https://ipfs.io/ipfs/${ipfsHash}`,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 13\n    }\n  }, \"See current user file\") : \"No user file set yet\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 9\n    }\n  }, \"Buyer Can Set and Extend Time\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 9\n    }\n  }, \"Set End Time:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter an item\",\n    value: itemInput,\n    onChange: e => setItemInput(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: Set,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 11\n    }\n  }, \"Buyer Set\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 10\n    }\n  }, \"Extend Time:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter an item\",\n    value: itemInput1,\n    onChange: e => setItemInput1(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: Extend,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 11\n    }\n  }, \"Buyer Extend\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 10\n    }\n  }, \"Buyer Clicks to Upload to Smart Contract:   \", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: Buyer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 59\n    }\n  }, \"Buyer Upload\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 10\n    }\n  }, \"Seller Clicks to Upload to Smart Contract:   \", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: Seller,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 60\n    }\n  }, \"Seller Upload\")), /*#__PURE__*/React.createElement(\"script\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 10\n    }\n  }, \"error\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"text-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: pusher,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 10\n    }\n  }, \"push\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/packages/react-app/src/App.js"],"names":["React","useCallback","useEffect","useState","useDropzone","ethers","IPFS","logo","addresses","abis","console","_log","log","_info","info","_warn","warn","_error","error","_debug","debug","history","_intercept","arguments","type","args","_collect","time","Date","toUTCString","length","apply","stack","Error","stackParts","split","i","indexOf","push","trim","timestamp","ZERO_ADDRESS","node","defaultProvider","providers","Web3Provider","window","ethereum","ipfsContract","Contract","ipfs","storageContract","initIpfs","create","version","readCurrentUserFile","result","userFiles","getSigner","getAddress","accounts","request","method","account","getaccount","Object","values","JSON","stringify","App","ipfsHash","setIpfsHash","enable","readFile","file","accountHash","setAccountHash","file1","setFile","hash","ipfsWithSigner","connect","tx","store","SetContract","itemInput2","storage","Buyer","storageWithSigner","tx1","buyerUpload","Seller","tx2","sellerUpload","Set","tx3","SetEndTime","itemInput","Extend","ExtendTime","itemInput1","err","message","document","getElementById","innerHTML","uploadFile","files","path","name","content","add","cid","string","onDrop","acceptedFiles","getRootProps","getInputProps","isDragActive","multiple","setItemInput","setItemInput1","setItemInput2","pusher","e","target","value","cursor"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { ethers } from \"ethers\";\nimport IPFS from \"ipfs\";\n\nimport logo from \"./ethereumLogo.png\";\nimport { addresses, abis } from \"@project/contracts\";\n\nimport \"./App.css\";\n\n\n\n/* Store the original log functions. */\nconsole._log = console.log\nconsole._info = console.info\nconsole._warn = console.warn\nconsole._error = console.error\nconsole._debug = console.debug\n\n/* Declare our console history variable. */\nconsole.history = []\n\n/* Redirect all calls to the collector. */\nconsole.log = function () { return console._intercept('log', arguments) }\nconsole.info = function () { return console._intercept('info', arguments) }\nconsole.warn = function () { return console._intercept('warn', arguments) }\nconsole.error = function () { return console._intercept('error', arguments) }\nconsole.debug = function () { return console._intercept('debug', arguments) }\n\n/* Give the developer the ability to intercept the message before letting\n   console-history access it. */\nconsole._intercept = function (type, args) {\n  // Your own code can go here, but the preferred method is to override this\n  // function in your own script, and add the line below to the end or\n  // begin of your own 'console._intercept' function.\n  // REMEMBER: Use only underscore console commands inside _intercept!\n  console._collect(type, args)\n}\n\n/* Define the main log catcher. */\nconsole._collect = function (type, args) {\n  // WARNING: When debugging this function, DO NOT call a modified console.log\n  // function, all hell will break loose.\n  // Instead use the original console._log functions.\n\n  // All the arguments passed to any function, even when not defined\n  // inside the function declaration, are stored and locally available in\n  // the variable called 'arguments'.\n  //\n  // The arguments of the original console.log functions are collected above,\n  // and passed to this function as a variable 'args', since 'arguments' is\n  // reserved for the current function.\n\n  // Collect the timestamp of the console log.\n  var time = new Date().toUTCString()\n\n  // Make sure the 'type' parameter is set. If no type is set, we fall\n  // back to the default log type.\n  if (!type) type = 'log'\n\n  // To ensure we behave like the original console log functions, we do not\n  // output anything if no arguments are provided.\n  if (!args || args.length === 0) return\n\n  // Act normal, and just pass all original arguments to\n  // the origial console function :)\n  console['_' + type].apply(console, args)\n\n  // Get stack trace information. By throwing an error, we get access to\n  // a stack trace. We then go up in the trace tree and filter out\n  // irrelevant information.\n  var stack = false\n  try { throw Error('') } catch (error) {\n    // The lines containing 'console-history.js' are not relevant to us.\n    var stackParts = error.stack.split('\\n')\n    stack = []\n    for (var i = 0; i < stackParts.length; i++) {\n      if (stackParts[i].indexOf('console-history.js') > -1 ||\n      stackParts[i].indexOf('console-history.min.js') > -1 ||\n      stackParts[i] === 'Error') {\n        continue\n      }\n      stack.push(stackParts[i].trim())\n    }\n  }\n\n  // Add the log to our history.\n  console.history.push({ type: type, timestamp: time, arguments: args, stack: stack })\n}\n\n\n\n\n\n\nconst ZERO_ADDRESS =\n  \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n\nlet node;\n\nconst defaultProvider = new ethers.providers.Web3Provider(window.ethereum);\nconst ipfsContract = new ethers.Contract(\n  addresses.ipfs,\n  abis.ipfs,\n  defaultProvider\n);\nvar storageContract;\nconsole.log( addresses.ipfs);\n\nasync function initIpfs() {\n  node = await IPFS.create();\n  const version = await node.version();\n  console.log(\"IPFS Node Version:\", version.version);\n}\n\nasync function readCurrentUserFile() {\n  const result = await ipfsContract.userFiles(\n    defaultProvider.getSigner().getAddress()\n    \n  \n  );\n  console.log({ result });\n \n  const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n  const account = accounts[0];//metamask current account\n\n  \n  return result;\n}\nasync function getaccount(){\n  const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n  Object.values(accounts);\n  const account =JSON.stringify(accounts[0]);\n  console.log(\"FUNC\");\n\n  console.log({ account });\n\nreturn account\n}\n\n\n\n\n\n\n\n\n\n\nfunction App() {\n  const [ipfsHash, setIpfsHash] = useState(\"\");\n  useEffect(() => {\n    initIpfs();\n    window.ethereum.enable();\n  }, []);\n\n  useEffect(() => {\n    async function readFile() {\n      const file = await readCurrentUserFile();\n\n      if (file !== ZERO_ADDRESS) setIpfsHash(file);\n    }\n    readFile();\n  }, []);\n\n\n\n\n  const [accountHash, setAccountHash] = useState(\"\");\n  useEffect(() => {\n    window.ethereum.enable();\n  }, []);\n\n  useEffect(() => {\n    async function readFile() {\n      const file1 = await getaccount();\n\n      if (file1 !== ZERO_ADDRESS) setAccountHash(file1);\n    }\n    readFile();\n  }, []);\n\n\n\n\n  async function setFile(hash) {\n    const ipfsWithSigner = ipfsContract.connect(defaultProvider.getSigner());\n    const tx = await ipfsWithSigner.setFile(hash);\n    console.log({ tx });\n\n    setIpfsHash(hash);\n    \n    ipfsWithSigner.store(hash);\n\n  \n  }\n\n  function SetContract() {\n\n    storageContract = new ethers.Contract(itemInput2, abis.storage, defaultProvider);\n\n    console.log(itemInput2);\n    console.log(abis.storage);\n    console.log(storageContract);\n    \n\n\n\n\n    return storageContract;\n  \n  }\n\n\n  \n  \n\n\n  async function Buyer() {\n    console.log(storageContract);\n\n\n    \n    const storageWithSigner = storageContract.connect(defaultProvider.getSigner());\n  \n    const tx1= await storageWithSigner.buyerUpload(ipfsHash);\n  \n  }\n\n\n  async function Seller() {\n\n    console.log(storageContract);\n\n    const storageWithSigner = storageContract.connect(defaultProvider.getSigner());\n    \n    const tx2= await storageWithSigner.sellerUpload(ipfsHash);\n\n  \n  }\n  async function Set() {\n    console.log(storageContract);\n\n    \n    const storageWithSigner = storageContract.connect(defaultProvider.getSigner());\n    const tx3=  await storageWithSigner.SetEndTime(itemInput);\n\n  \n  }\n  async function Extend() {\n\n    console.log(storageContract);\n\n    const storageWithSigner = storageContract.connect(defaultProvider.getSigner());\n\n    try {\n      await storageWithSigner.ExtendTime(itemInput1);\n      \n    }\n    catch(err) {\n      console.log(err.message);\n      document.getElementById(\"text-box\").innerHTML = err.message\n    }\n    \n\n\n  \n  }\n  \n\n  \n  console.log(ipfsHash);\n  \n\n  const uploadFile = useCallback(async (file) => {\n    const files = [\n      {\n        path: file.name + file.path,\n        content: file,\n      },\n    ];\n\n    for await (const result of node.add(files)) {\n      await setFile(result.cid.string);\n    }\n  }, []);\n\n  const onDrop = useCallback(\n    (acceptedFiles) => {\n      uploadFile(acceptedFiles[0]);\n    },\n    [uploadFile]\n  );\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    multiple: false,\n    onDrop,\n  });\n\n  const [itemInput, setItemInput] = useState(\"\");\n  console.log(itemInput);\n  const [itemInput1, setItemInput1] = useState(\"\");\n  console.log(itemInput1);\n  const [itemInput2, setItemInput2] = useState(\"\");\n  console.log(itemInput2);\n\n  function pusher()\n{\n  document.getElementById(\"text-box\").innerHTML = ipfsHash\n  console.log(console.history)\n  console.error(\"boom\");\n}\n  \n  \n\n\n\n  console.log(console._error);\n  console.log(console.history);\n  console.log(\"EROEROROROEROER\");\n\n\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <div>\n          Smart Contract: \n\n         \n          <input type=\"text\" placeholder=\"Contract Hash\" value={itemInput2} onChange={e => setItemInput2(e.target.value)}\n        \n          />\n          <button onClick={SetContract}>Fintech Set</button>\n         </div>\n        <div {...getRootProps()} style={{ cursor: \"pointer\" }}>\n          <img src={logo} className=\"App-logo\" alt=\"react-logo\" />\n          <input {...getInputProps()} />\n          {isDragActive ? (\n            <p>Drop the files here ...</p>\n          ) : (\n            <p>\n              Drag 'n' drop some files here to upload to IPFS (or click the\n              logo)\n            </p>\n          )}\n        </div>\n        \n        <div>\n          {ipfsHash !== \"\" ? (   \n            <p>IPFS Hash: <mark className=\"mark-red\">\"{ipfsHash}\"</mark></p>\n            ) : (\n              \"\"\n            )}\n        \n        </div>  \n        <div>User Hash:<mark className=\"mark-yellow\">{accountHash}</mark></div>\n   \n        <div>\n          {ipfsHash !== \"\" ? (\n            \n\n            <a\n            \n              href={`https://ipfs.io/ipfs/${ipfsHash}`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              See current user file \n            </a>\n          ) : (\n            \"No user file set yet\"\n          )}\n\n        </div>\n        <div>Buyer Can Set and Extend Time</div>\n      \n        <div>\n          Set End Time:\n\n         \n          <input type=\"text\" placeholder=\"Enter an item\" value={itemInput} onChange={e => setItemInput(e.target.value)}\n        \n          />\n          <button onClick={Set}>Buyer Set</button>\n         </div>\n         <div>\n          Extend Time:\n          <input type=\"text\" placeholder=\"Enter an item\" value={itemInput1} onChange={e => setItemInput1(e.target.value)}\n         \n          />\n          <button onClick={Extend}>Buyer Extend</button>\n         </div>\n         <div>Buyer Clicks to Upload to Smart Contract:   <button onClick={Buyer}>Buyer Upload</button></div>\n         <div>Seller Clicks to Upload to Smart Contract:   <button onClick={Seller}>Seller Upload</button></div>\n         <script></script>\n         <div>error{}</div>\n         <div id=\"text-box\"></div>\n         <button onClick={pusher}>push</button>\n      </header>\n\n    </div>\n  );\n  \n}\n\nexport default App;\n\n\n"]},"metadata":{},"sourceType":"module"}