{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _require = require('./utils'),\n    getPubsubRouting = _require.getPubsubRouting;\n\nvar _require2 = require('../../../utils'),\n    withTimeoutOption = _require2.withTimeoutOption;\n\nmodule.exports = function (_ref) {\n  var ipns = _ref.ipns,\n      constructorOptions = _ref.options;\n\n  /**\n   * Query the state of IPNS pubsub.\n   *\n   * @returns {Promise<boolean>}\n   */\n  return withTimeoutOption( /*#__PURE__*/function () {\n    var _state = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(options) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              return _context.abrupt(\"return\", {\n                enabled: Boolean(getPubsubRouting(ipns, constructorOptions))\n              });\n\n            case 4:\n              _context.prev = 4;\n              _context.t0 = _context[\"catch\"](0);\n              return _context.abrupt(\"return\", false);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 4]]);\n    }));\n\n    function state(_x) {\n      return _state.apply(this, arguments);\n    }\n\n    return state;\n  }());\n};","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/ipfs/src/core/components/name/pubsub/state.js"],"names":["require","getPubsubRouting","withTimeoutOption","module","exports","ipns","constructorOptions","options","enabled","Boolean","state"],"mappings":"AAAA;;;;;;eAE6BA,OAAO,CAAC,SAAD,C;IAA5BC,gB,YAAAA,gB;;gBACsBD,OAAO,CAAC,gBAAD,C;IAA7BE,iB,aAAAA,iB;;AAERC,MAAM,CAACC,OAAP,GAAiB,gBAA2C;AAAA,MAAxCC,IAAwC,QAAxCA,IAAwC;AAAA,MAAzBC,kBAAyB,QAAlCC,OAAkC;;AAC1D;;;;;AAKA,SAAOL,iBAAiB;AAAA,0EAAC,iBAAsBK,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEd;AAAEC,gBAAAA,OAAO,EAAEC,OAAO,CAACR,gBAAgB,CAACI,IAAD,EAAOC,kBAAP,CAAjB;AAAlB,eAFc;;AAAA;AAAA;AAAA;AAAA,+CAId,KAJc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA,aAAgBI,KAAhB;AAAA;AAAA;;AAAA,WAAgBA,KAAhB;AAAA,MAAxB;AAOD,CAbD","sourcesContent":["'use strict'\n\nconst { getPubsubRouting } = require('./utils')\nconst { withTimeoutOption } = require('../../../utils')\n\nmodule.exports = ({ ipns, options: constructorOptions }) => {\n  /**\n   * Query the state of IPNS pubsub.\n   *\n   * @returns {Promise<boolean>}\n   */\n  return withTimeoutOption(async function state (options) { // eslint-disable-line require-await\n    try {\n      return { enabled: Boolean(getPubsubRouting(ipns, constructorOptions)) }\n    } catch (err) {\n      return false\n    }\n  })\n}\n"]},"metadata":{},"sourceType":"script"}