{"ast":null,"code":"'use strict';\n\nvar toBuffer = require('typedarray-to-buffer');\n\nmodule.exports = function (value) {\n  if (value instanceof Uint8Array) return toBuffer(value);else if (value instanceof ArrayBuffer) return Buffer.from(value);else return Buffer.from(String(value));\n};","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/level-js/util/mixed-to-buffer.js"],"names":["toBuffer","require","module","exports","value","Uint8Array","ArrayBuffer","Buffer","from","String"],"mappings":"AAAA;;AAEA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,sBAAD,CAAtB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,KAAV,EAAiB;AAChC,MAAIA,KAAK,YAAYC,UAArB,EAAiC,OAAOL,QAAQ,CAACI,KAAD,CAAf,CAAjC,KACK,IAAIA,KAAK,YAAYE,WAArB,EAAkC,OAAOC,MAAM,CAACC,IAAP,CAAYJ,KAAZ,CAAP,CAAlC,KACA,OAAOG,MAAM,CAACC,IAAP,CAAYC,MAAM,CAACL,KAAD,CAAlB,CAAP;AACN,CAJD","sourcesContent":["'use strict'\n\nvar toBuffer = require('typedarray-to-buffer')\n\nmodule.exports = function (value) {\n  if (value instanceof Uint8Array) return toBuffer(value)\n  else if (value instanceof ArrayBuffer) return Buffer.from(value)\n  else return Buffer.from(String(value))\n}\n"]},"metadata":{},"sourceType":"script"}