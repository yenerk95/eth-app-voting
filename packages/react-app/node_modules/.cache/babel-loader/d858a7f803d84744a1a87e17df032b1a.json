{"ast":null,"code":"/*!\n * poly1305.js - poly1305 for bcrypto\n * Copyright (c) 2016-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on floodyberry/poly1305-donna:\n *   Placed into the public domain by Andrew Moon.\n *   https://github.com/floodyberry/poly1305-donna\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/Poly1305\n *   https://cr.yp.to/mac.html\n *   https://tools.ietf.org/html/rfc7539#section-2.5\n *   https://github.com/floodyberry/poly1305-donna/blob/master/poly1305-donna-16.h\n */\n'use strict';\n\nconst assert = require('../internal/assert');\n/**\n * Poly1305\n */\n\n\nclass Poly1305 {\n  /**\n   * Create a Poly1305 context.\n   * @constructor\n   */\n  constructor() {\n    this.r = new Uint16Array(10);\n    this.h = new Uint16Array(10);\n    this.pad = new Uint16Array(8);\n    this.buffer = Buffer.alloc(16);\n    this.fin = -1;\n    this.leftover = 0;\n  }\n  /**\n   * Initialize poly1305 with a key.\n   * @param {Buffer} key\n   */\n\n\n  init(key) {\n    assert(Buffer.isBuffer(key) && key.length >= 32); // r &= 0xffffffc0ffffffc0ffffffc0fffffff\n\n    const t0 = readU16(key, 0);\n    const t1 = readU16(key, 2);\n    const t2 = readU16(key, 4);\n    const t3 = readU16(key, 6);\n    const t4 = readU16(key, 8);\n    const t5 = readU16(key, 10);\n    const t6 = readU16(key, 12);\n    const t7 = readU16(key, 14);\n    this.r[0] = t0 & 0x1fff;\n    this.r[1] = (t0 >>> 13 | t1 << 3) & 0x1fff;\n    this.r[2] = (t1 >>> 10 | t2 << 6) & 0x1f03;\n    this.r[3] = (t2 >>> 7 | t3 << 9) & 0x1fff;\n    this.r[4] = (t3 >>> 4 | t4 << 12) & 0x00ff;\n    this.r[5] = t4 >>> 1 & 0x1ffe;\n    this.r[6] = (t4 >>> 14 | t5 << 2) & 0x1fff;\n    this.r[7] = (t5 >>> 11 | t6 << 5) & 0x1f81;\n    this.r[8] = (t6 >>> 8 | t7 << 8) & 0x1fff;\n    this.r[9] = t7 >>> 5 & 0x007f; // h = 0\n\n    for (let i = 0; i < 10; i++) this.h[i] = 0; // Save pad for later.\n\n\n    for (let i = 0; i < 8; i++) this.pad[i] = readU16(key, 16 + 2 * i);\n\n    this.fin = 0;\n    this.leftover = 0;\n    return this;\n  }\n  /**\n   * Process 16 byte blocks.\n   * @private\n   * @param {Buffer} data - Blocks.\n   * @param {Number} bytes - Size.\n   * @param {Number} m - Offset pointer.\n   */\n\n\n  _blocks(data, bytes, m) {\n    const hibit = this.fin ? 0 : 1 << 11; // 1 << 128\n\n    const d = new Uint32Array(10);\n\n    while (bytes >= 16) {\n      // h += m[i]\n      const t0 = readU16(data, m + 0);\n      const t1 = readU16(data, m + 2);\n      const t2 = readU16(data, m + 4);\n      const t3 = readU16(data, m + 6);\n      const t4 = readU16(data, m + 8);\n      const t5 = readU16(data, m + 10);\n      const t6 = readU16(data, m + 12);\n      const t7 = readU16(data, m + 14);\n      this.h[0] += t0 & 0x1fff;\n      this.h[1] += (t0 >>> 13 | t1 << 3) & 0x1fff;\n      this.h[2] += (t1 >>> 10 | t2 << 6) & 0x1fff;\n      this.h[3] += (t2 >>> 7 | t3 << 9) & 0x1fff;\n      this.h[4] += (t3 >>> 4 | t4 << 12) & 0x1fff;\n      this.h[5] += t4 >>> 1 & 0x1fff;\n      this.h[6] += (t4 >>> 14 | t5 << 2) & 0x1fff;\n      this.h[7] += (t5 >>> 11 | t6 << 5) & 0x1fff;\n      this.h[8] += (t6 >>> 8 | t7 << 8) & 0x1fff;\n      this.h[9] += t7 >>> 5 | hibit; // h *= r, (partial) h %= p\n\n      let c = 0;\n\n      for (let i = 0; i < 10; i++) {\n        d[i] = c;\n\n        for (let j = 0; j < 10; j++) {\n          let a = this.h[j];\n          if (j <= i) a *= this.r[i - j];else a *= 5 * this.r[i + 10 - j];\n          d[i] += a; // Sum(h[i] * r[i] * 5) will overflow\n          // slightly above 6 products with an\n          // unclamped r, so carry at 5.\n\n          if (j === 4) {\n            c = d[i] >>> 13;\n            d[i] &= 0x1fff;\n          }\n        }\n\n        c += d[i] >>> 13;\n        d[i] &= 0x1fff;\n      }\n\n      c = (c << 2) + c; // c *= 5\n\n      c += d[0];\n      d[0] = c & 0x1fff;\n      c = c >>> 13;\n      d[1] += c;\n\n      for (let i = 0; i < 10; i++) this.h[i] = d[i];\n\n      m += 16;\n      bytes -= 16;\n    }\n  }\n  /**\n   * Update the MAC with data (will be\n   * processed as 16 byte blocks).\n   * @param {Buffer} data\n   */\n\n\n  update(data) {\n    assert(Buffer.isBuffer(data));\n    if (this.fin === -1) throw new Error('Context is not initialized.');\n    let bytes = data.length;\n    let m = 0; // Handle leftover.\n\n    if (this.leftover) {\n      let want = 16 - this.leftover;\n      if (want > bytes) want = bytes;\n\n      for (let i = 0; i < want; i++) this.buffer[this.leftover + i] = data[m + i];\n\n      bytes -= want;\n      m += want;\n      this.leftover += want;\n      if (this.leftover < 16) return this;\n\n      this._blocks(this.buffer, 16, 0);\n\n      this.leftover = 0;\n    } // Process full blocks.\n\n\n    if (bytes >= 16) {\n      const want = bytes & ~(16 - 1);\n\n      this._blocks(data, want, m);\n\n      m += want;\n      bytes -= want;\n    } // Store leftover.\n\n\n    if (bytes) {\n      for (let i = 0; i < bytes; i++) this.buffer[this.leftover + i] = data[m + i];\n\n      this.leftover += bytes;\n    }\n\n    return this;\n  }\n  /**\n   * Finalize and return a 16-byte MAC.\n   * @returns {Buffer}\n   */\n\n\n  final() {\n    if (this.fin === -1) throw new Error('Context is not initialized.');\n    const mac = Buffer.alloc(16);\n    const g = new Uint16Array(10); // Process the remaining block.\n\n    if (this.leftover) {\n      let i = this.leftover;\n      this.buffer[i++] = 1;\n\n      for (; i < 16; i++) this.buffer[i] = 0;\n\n      this.fin = 1;\n\n      this._blocks(this.buffer, 16, 0);\n    } // Fully carry h.\n\n\n    let c = this.h[1] >>> 13;\n    this.h[1] &= 0x1fff;\n\n    for (let i = 2; i < 10; i++) {\n      this.h[i] += c;\n      c = this.h[i] >>> 13;\n      this.h[i] &= 0x1fff;\n    }\n\n    this.h[0] += c * 5;\n    c = this.h[0] >>> 13;\n    this.h[0] &= 0x1fff;\n    this.h[1] += c;\n    c = this.h[1] >>> 13;\n    this.h[1] &= 0x1fff;\n    this.h[2] += c; // Compute h + -p.\n\n    g[0] = this.h[0] + 5;\n    c = g[0] >>> 13;\n    g[0] &= 0x1fff;\n\n    for (let i = 1; i < 10; i++) {\n      g[i] = this.h[i] + c;\n      c = g[i] >>> 13;\n      g[i] &= 0x1fff;\n    } // Select h if h < p, or h + -p if h >= p.\n\n\n    let mask = (c ^ 1) - 1;\n\n    for (let i = 0; i < 10; i++) g[i] &= mask;\n\n    mask = ~mask;\n\n    for (let i = 0; i < 10; i++) this.h[i] = this.h[i] & mask | g[i]; // h = h % (2^128)\n\n\n    this.h[0] = (this.h[0] | this.h[1] << 13) & 0xffff;\n    this.h[1] = (this.h[1] >>> 3 | this.h[2] << 10) & 0xffff;\n    this.h[2] = (this.h[2] >>> 6 | this.h[3] << 7) & 0xffff;\n    this.h[3] = (this.h[3] >>> 9 | this.h[4] << 4) & 0xffff;\n    this.h[4] = (this.h[4] >>> 12 | this.h[5] << 1 | this.h[6] << 14) & 0xffff;\n    this.h[5] = (this.h[6] >>> 2 | this.h[7] << 11) & 0xffff;\n    this.h[6] = (this.h[7] >>> 5 | this.h[8] << 8) & 0xffff;\n    this.h[7] = (this.h[8] >>> 8 | this.h[9] << 5) & 0xffff; // mac = (h + pad) % (2^128)\n\n    let f = this.h[0] + this.pad[0];\n    this.h[0] = f;\n\n    for (let i = 1; i < 8; i++) {\n      f = this.h[i] + this.pad[i] + (f >>> 16);\n      this.h[i] = f;\n    }\n\n    for (let i = 0; i < 8; i++) writeU16(mac, this.h[i], i * 2); // Zero out the state.\n\n\n    this.destroy();\n    return mac;\n  }\n  /**\n   * Destroy the context.\n   */\n\n\n  destroy() {\n    for (let i = 0; i < 10; i++) {\n      this.r[i] = 0;\n      this.h[i] = 0;\n    }\n\n    for (let i = 0; i < 8; i++) this.pad[i] = 0;\n\n    for (let i = 0; i < 16; i++) this.buffer[i] = 0;\n\n    this.fin = -1;\n    this.leftover = 0;\n  }\n  /**\n   * Finalize and verify MAC against tag.\n   * @param {Buffer} tag\n   * @returns {Boolean}\n   */\n\n\n  verify(tag) {\n    assert(Buffer.isBuffer(tag));\n    assert(tag.length === 16);\n    const mac = this.final();\n    let z = 0;\n\n    for (let i = 0; i < 16; i++) z |= mac[i] ^ tag[i];\n\n    return z - 1 >>> 31 !== 0;\n  }\n\n}\n/*\n * Static\n */\n\n\nPoly1305.native = 0;\n/*\n * Helpers\n */\n\nfunction readU16(data, off) {\n  return data[off++] + data[off] * 0x100;\n}\n\nfunction writeU16(dst, num, off) {\n  dst[off++] = num;\n  dst[off++] = num >>> 8;\n  return off;\n}\n/*\n * Expose\n */\n\n\nmodule.exports = Poly1305;","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/bcrypto/lib/js/poly1305.js"],"names":["assert","require","Poly1305","constructor","r","Uint16Array","h","pad","buffer","Buffer","alloc","fin","leftover","init","key","isBuffer","length","t0","readU16","t1","t2","t3","t4","t5","t6","t7","i","_blocks","data","bytes","m","hibit","d","Uint32Array","c","j","a","update","Error","want","final","mac","g","mask","f","writeU16","destroy","verify","tag","z","native","off","dst","num","module","exports"],"mappings":"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","sourcesContent":["/*!\n * poly1305.js - poly1305 for bcrypto\n * Copyright (c) 2016-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on floodyberry/poly1305-donna:\n *   Placed into the public domain by Andrew Moon.\n *   https://github.com/floodyberry/poly1305-donna\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/Poly1305\n *   https://cr.yp.to/mac.html\n *   https://tools.ietf.org/html/rfc7539#section-2.5\n *   https://github.com/floodyberry/poly1305-donna/blob/master/poly1305-donna-16.h\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\n\n/**\n * Poly1305\n */\n\nclass Poly1305 {\n  /**\n   * Create a Poly1305 context.\n   * @constructor\n   */\n\n  constructor() {\n    this.r = new Uint16Array(10);\n    this.h = new Uint16Array(10);\n    this.pad = new Uint16Array(8);\n    this.buffer = Buffer.alloc(16);\n    this.fin = -1;\n    this.leftover = 0;\n  }\n\n  /**\n   * Initialize poly1305 with a key.\n   * @param {Buffer} key\n   */\n\n  init(key) {\n    assert(Buffer.isBuffer(key) && key.length >= 32);\n\n    // r &= 0xffffffc0ffffffc0ffffffc0fffffff\n    const t0 = readU16(key, 0);\n    const t1 = readU16(key, 2);\n    const t2 = readU16(key, 4);\n    const t3 = readU16(key, 6);\n    const t4 = readU16(key, 8);\n    const t5 = readU16(key, 10);\n    const t6 = readU16(key, 12);\n    const t7 = readU16(key, 14);\n\n    this.r[0] = t0 & 0x1fff;\n    this.r[1] = ((t0 >>> 13) | (t1 << 3)) & 0x1fff;\n    this.r[2] = ((t1 >>> 10) | (t2 << 6)) & 0x1f03;\n    this.r[3] = ((t2 >>> 7) | (t3 << 9)) & 0x1fff;\n    this.r[4] = ((t3 >>> 4) | (t4 << 12)) & 0x00ff;\n    this.r[5] = (t4 >>> 1) & 0x1ffe;\n    this.r[6] = ((t4 >>> 14) | (t5 << 2)) & 0x1fff;\n    this.r[7] = ((t5 >>> 11) | (t6 << 5)) & 0x1f81;\n    this.r[8] = ((t6 >>> 8) | (t7 << 8)) & 0x1fff;\n    this.r[9] = (t7 >>> 5) & 0x007f;\n\n    // h = 0\n    for (let i = 0; i < 10; i++)\n      this.h[i] = 0;\n\n    // Save pad for later.\n    for (let i = 0; i < 8; i++)\n      this.pad[i] = readU16(key, 16 + (2 * i));\n\n    this.fin = 0;\n    this.leftover = 0;\n\n    return this;\n  }\n\n  /**\n   * Process 16 byte blocks.\n   * @private\n   * @param {Buffer} data - Blocks.\n   * @param {Number} bytes - Size.\n   * @param {Number} m - Offset pointer.\n   */\n\n  _blocks(data, bytes, m) {\n    const hibit = this.fin ? 0 : (1 << 11); // 1 << 128\n    const d = new Uint32Array(10);\n\n    while (bytes >= 16) {\n      // h += m[i]\n      const t0 = readU16(data, m + 0);\n      const t1 = readU16(data, m + 2);\n      const t2 = readU16(data, m + 4);\n      const t3 = readU16(data, m + 6);\n      const t4 = readU16(data, m + 8);\n      const t5 = readU16(data, m + 10);\n      const t6 = readU16(data, m + 12);\n      const t7 = readU16(data, m + 14);\n\n      this.h[0] += t0 & 0x1fff;\n      this.h[1] += ((t0 >>> 13) | (t1 << 3)) & 0x1fff;\n      this.h[2] += ((t1 >>> 10) | (t2 << 6)) & 0x1fff;\n      this.h[3] += ((t2 >>> 7) | (t3 << 9)) & 0x1fff;\n      this.h[4] += ((t3 >>> 4) | (t4 << 12)) & 0x1fff;\n      this.h[5] += ((t4 >>> 1)) & 0x1fff;\n      this.h[6] += ((t4 >>> 14) | (t5 << 2)) & 0x1fff;\n      this.h[7] += ((t5 >>> 11) | (t6 << 5)) & 0x1fff;\n      this.h[8] += ((t6 >>> 8) | (t7 << 8)) & 0x1fff;\n      this.h[9] += ((t7 >>> 5)) | hibit;\n\n      // h *= r, (partial) h %= p\n      let c = 0;\n\n      for (let i = 0; i < 10; i++) {\n        d[i] = c;\n\n        for (let j = 0; j < 10; j++) {\n          let a = this.h[j];\n\n          if (j <= i)\n            a *= this.r[i - j];\n          else\n            a *= 5 * this.r[i + 10 - j];\n\n          d[i] += a;\n\n          // Sum(h[i] * r[i] * 5) will overflow\n          // slightly above 6 products with an\n          // unclamped r, so carry at 5.\n          if (j === 4) {\n            c = d[i] >>> 13;\n            d[i] &= 0x1fff;\n          }\n        }\n\n        c += d[i] >>> 13;\n        d[i] &= 0x1fff;\n      }\n\n      c = (c << 2) + c; // c *= 5\n      c += d[0];\n      d[0] = (c & 0x1fff);\n      c = c >>> 13;\n      d[1] += c;\n\n      for (let i = 0; i < 10; i++)\n        this.h[i] = d[i];\n\n      m += 16;\n      bytes -= 16;\n    }\n  }\n\n  /**\n   * Update the MAC with data (will be\n   * processed as 16 byte blocks).\n   * @param {Buffer} data\n   */\n\n  update(data) {\n    assert(Buffer.isBuffer(data));\n\n    if (this.fin === -1)\n      throw new Error('Context is not initialized.');\n\n    let bytes = data.length;\n    let m = 0;\n\n    // Handle leftover.\n    if (this.leftover) {\n      let want = 16 - this.leftover;\n\n      if (want > bytes)\n        want = bytes;\n\n      for (let i = 0; i < want; i++)\n        this.buffer[this.leftover + i] = data[m + i];\n\n      bytes -= want;\n      m += want;\n\n      this.leftover += want;\n\n      if (this.leftover < 16)\n        return this;\n\n      this._blocks(this.buffer, 16, 0);\n      this.leftover = 0;\n    }\n\n    // Process full blocks.\n    if (bytes >= 16) {\n      const want = bytes & ~(16 - 1);\n\n      this._blocks(data, want, m);\n\n      m += want;\n      bytes -= want;\n    }\n\n    // Store leftover.\n    if (bytes) {\n      for (let i = 0; i < bytes; i++)\n        this.buffer[this.leftover + i] = data[m + i];\n      this.leftover += bytes;\n    }\n\n    return this;\n  }\n\n  /**\n   * Finalize and return a 16-byte MAC.\n   * @returns {Buffer}\n   */\n\n  final() {\n    if (this.fin === -1)\n      throw new Error('Context is not initialized.');\n\n    const mac = Buffer.alloc(16);\n    const g = new Uint16Array(10);\n\n    // Process the remaining block.\n    if (this.leftover) {\n      let i = this.leftover;\n\n      this.buffer[i++] = 1;\n\n      for (; i < 16; i++)\n        this.buffer[i] = 0;\n\n      this.fin = 1;\n      this._blocks(this.buffer, 16, 0);\n    }\n\n    // Fully carry h.\n    let c = this.h[1] >>> 13;\n\n    this.h[1] &= 0x1fff;\n\n    for (let i = 2; i < 10; i++) {\n      this.h[i] += c;\n      c = this.h[i] >>> 13;\n      this.h[i] &= 0x1fff;\n    }\n\n    this.h[0] += c * 5;\n    c = this.h[0] >>> 13;\n    this.h[0] &= 0x1fff;\n    this.h[1] += c;\n    c = this.h[1] >>> 13;\n    this.h[1] &= 0x1fff;\n    this.h[2] += c;\n\n    // Compute h + -p.\n    g[0] = this.h[0] + 5;\n    c = g[0] >>> 13;\n    g[0] &= 0x1fff;\n\n    for (let i = 1; i < 10; i++) {\n      g[i] = this.h[i] + c;\n      c = g[i] >>> 13;\n      g[i] &= 0x1fff;\n    }\n\n    // Select h if h < p, or h + -p if h >= p.\n    let mask = (c ^ 1) - 1;\n\n    for (let i = 0; i < 10; i++)\n      g[i] &= mask;\n\n    mask = ~mask;\n\n    for (let i = 0; i < 10; i++)\n      this.h[i] = (this.h[i] & mask) | g[i];\n\n    // h = h % (2^128)\n    this.h[0] = ((this.h[0]) | (this.h[1] << 13)) & 0xffff;\n    this.h[1] = ((this.h[1] >>> 3) | (this.h[2] << 10)) & 0xffff;\n    this.h[2] = ((this.h[2] >>> 6) | (this.h[3] << 7)) & 0xffff;\n    this.h[3] = ((this.h[3] >>> 9) | (this.h[4] << 4)) & 0xffff;\n    this.h[4] = ((this.h[4] >>> 12)\n      | (this.h[5] << 1) | (this.h[6] << 14)) & 0xffff;\n    this.h[5] = ((this.h[6] >>> 2) | (this.h[7] << 11)) & 0xffff;\n    this.h[6] = ((this.h[7] >>> 5) | (this.h[8] << 8)) & 0xffff;\n    this.h[7] = ((this.h[8] >>> 8) | (this.h[9] << 5)) & 0xffff;\n\n    // mac = (h + pad) % (2^128)\n    let f = this.h[0] + this.pad[0];\n\n    this.h[0] = f;\n\n    for (let i = 1; i < 8; i++) {\n      f = this.h[i] + this.pad[i] + (f >>> 16);\n      this.h[i] = f;\n    }\n\n    for (let i = 0; i < 8; i++)\n      writeU16(mac, this.h[i], i * 2);\n\n    // Zero out the state.\n    this.destroy();\n\n    return mac;\n  }\n\n  /**\n   * Destroy the context.\n   */\n\n  destroy() {\n    for (let i = 0; i < 10; i++) {\n      this.r[i] = 0;\n      this.h[i] = 0;\n    }\n\n    for (let i = 0; i < 8; i++)\n      this.pad[i] = 0;\n\n    for (let i = 0; i < 16; i++)\n      this.buffer[i] = 0;\n\n    this.fin = -1;\n    this.leftover = 0;\n  }\n\n  /**\n   * Finalize and verify MAC against tag.\n   * @param {Buffer} tag\n   * @returns {Boolean}\n   */\n\n  verify(tag) {\n    assert(Buffer.isBuffer(tag));\n    assert(tag.length === 16);\n\n    const mac = this.final();\n\n    let z = 0;\n\n    for (let i = 0; i < 16; i++)\n      z |= mac[i] ^ tag[i];\n\n    return ((z - 1) >>> 31) !== 0;\n  }\n}\n\n/*\n * Static\n */\n\nPoly1305.native = 0;\n\n/*\n * Helpers\n */\n\nfunction readU16(data, off) {\n  return data[off++] + data[off] * 0x100;\n}\n\nfunction writeU16(dst, num, off) {\n  dst[off++] = num;\n  dst[off++] = num >>> 8;\n  return off;\n}\n\n/*\n * Expose\n */\n\nmodule.exports = Poly1305;\n"]},"metadata":{},"sourceType":"script"}