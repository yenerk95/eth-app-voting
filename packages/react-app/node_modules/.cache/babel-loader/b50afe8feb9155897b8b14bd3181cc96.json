{"ast":null,"code":"'use strict';\n\nconst {\n  withTimeoutOption\n} = require('../../utils');\n\nmodule.exports = ({\n  libp2p\n}) => {\n  return withTimeoutOption(async function peers(options) {\n    // eslint-disable-line require-await\n    options = options || {};\n    const verbose = options.v || options.verbose;\n    const peers = [];\n\n    for (const [peerId, connections] of libp2p.connections) {\n      for (const connection of connections) {\n        const tupple = {\n          addr: connection.remoteAddr,\n          peer: peerId\n        };\n\n        if (verbose || options.direction) {\n          tupple.direction = connection.stat.direction;\n        }\n\n        if (verbose) {\n          tupple.muxer = connection.stat.multiplexer;\n          tupple.latency = 'n/a';\n        }\n\n        peers.push(tupple);\n      }\n    }\n\n    return peers;\n  });\n};","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/ipfs/src/core/components/swarm/peers.js"],"names":["withTimeoutOption","require","module","exports","libp2p","peers","options","verbose","v","peerId","connections","connection","tupple","addr","remoteAddr","peer","direction","stat","muxer","multiplexer","latency","push"],"mappings":"AAAA;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAwBC,OAAO,CAAC,aAAD,CAArC;;AAEAC,MAAM,CAACC,OAAP,GAAiB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAC/B,SAAOJ,iBAAiB,CAAC,eAAeK,KAAf,CAAsBC,OAAtB,EAA+B;AAAE;AACxDA,IAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AAEA,UAAMC,OAAO,GAAGD,OAAO,CAACE,CAAR,IAAaF,OAAO,CAACC,OAArC;AACA,UAAMF,KAAK,GAAG,EAAd;;AAEA,SAAK,MAAM,CAACI,MAAD,EAASC,WAAT,CAAX,IAAoCN,MAAM,CAACM,WAA3C,EAAwD;AACtD,WAAK,MAAMC,UAAX,IAAyBD,WAAzB,EAAsC;AACpC,cAAME,MAAM,GAAG;AACbC,UAAAA,IAAI,EAAEF,UAAU,CAACG,UADJ;AAEbC,UAAAA,IAAI,EAAEN;AAFO,SAAf;;AAKA,YAAIF,OAAO,IAAID,OAAO,CAACU,SAAvB,EAAkC;AAChCJ,UAAAA,MAAM,CAACI,SAAP,GAAmBL,UAAU,CAACM,IAAX,CAAgBD,SAAnC;AACD;;AAED,YAAIT,OAAJ,EAAa;AACXK,UAAAA,MAAM,CAACM,KAAP,GAAeP,UAAU,CAACM,IAAX,CAAgBE,WAA/B;AACAP,UAAAA,MAAM,CAACQ,OAAP,GAAiB,KAAjB;AACD;;AAEDf,QAAAA,KAAK,CAACgB,IAAN,CAAWT,MAAX;AACD;AACF;;AAED,WAAOP,KAAP;AACD,GA3BuB,CAAxB;AA4BD,CA7BD","sourcesContent":["'use strict'\n\nconst { withTimeoutOption } = require('../../utils')\n\nmodule.exports = ({ libp2p }) => {\n  return withTimeoutOption(async function peers (options) { // eslint-disable-line require-await\n    options = options || {}\n\n    const verbose = options.v || options.verbose\n    const peers = []\n\n    for (const [peerId, connections] of libp2p.connections) {\n      for (const connection of connections) {\n        const tupple = {\n          addr: connection.remoteAddr,\n          peer: peerId\n        }\n\n        if (verbose || options.direction) {\n          tupple.direction = connection.stat.direction\n        }\n\n        if (verbose) {\n          tupple.muxer = connection.stat.multiplexer\n          tupple.latency = 'n/a'\n        }\n\n        peers.push(tupple)\n      }\n    }\n\n    return peers\n  })\n}\n"]},"metadata":{},"sourceType":"script"}