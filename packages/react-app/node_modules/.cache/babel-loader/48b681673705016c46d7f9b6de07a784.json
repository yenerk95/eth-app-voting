{"ast":null,"code":"'use strict';\n\nconst sortLinks = require('./sortLinks');\n\nconst DAGLink = require('../dag-link');\n\nconst asDAGLink = link => {\n  if (DAGLink.isDAGLink(link)) {\n    // It's a DAGLink instance\n    // no need to do anything\n    return link;\n  } // DAGNode.isDagNode() would be more appropriate here, but it can't be used\n  // as it would lead to circular dependencies as `addLink` is called from\n  // within the DAGNode object.\n\n\n  if (!('cid' in link || 'hash' in link || 'Hash' in link || 'multihash' in link)) {\n    throw new Error('Link must be a DAGLink or DAGLink-like. Convert the DAGNode into a DAGLink via `node.toDAGLink()`.');\n  } // It's a Object with name, multihash/hash/cid and size\n\n\n  return new DAGLink(link.Name || link.name, link.Tsize || link.size, link.Hash || link.multihash || link.hash || link.cid);\n};\n\nconst addLink = (node, link) => {\n  const dagLink = asDAGLink(link);\n\n  node._links.push(dagLink);\n\n  node._links = sortLinks(node._links);\n};\n\nmodule.exports = addLink;","map":{"version":3,"sources":["/Users/yenerkaraca/Documents/GitHub/eth-app/node_modules/ipld-dag-pb/src/dag-node/addLink.js"],"names":["sortLinks","require","DAGLink","asDAGLink","link","isDAGLink","Error","Name","name","Tsize","size","Hash","multihash","hash","cid","addLink","node","dagLink","_links","push","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,aAAD,CAAzB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,aAAD,CAAvB;;AAEA,MAAME,SAAS,GAAIC,IAAD,IAAU;AAC1B,MAAIF,OAAO,CAACG,SAAR,CAAkBD,IAAlB,CAAJ,EAA6B;AAC3B;AACA;AACA,WAAOA,IAAP;AACD,GALyB,CAO1B;AACA;AACA;;;AACA,MAAI,EAAE,SAASA,IAAT,IACA,UAAUA,IADV,IAEA,UAAUA,IAFV,IAGA,eAAeA,IAHjB,CAAJ,EAG4B;AAC1B,UAAM,IAAIE,KAAJ,CAAU,oGAAV,CAAN;AACD,GAfyB,CAiB1B;;;AACA,SAAO,IAAIJ,OAAJ,CAAYE,IAAI,CAACG,IAAL,IAAaH,IAAI,CAACI,IAA9B,EAAoCJ,IAAI,CAACK,KAAL,IAAcL,IAAI,CAACM,IAAvD,EAA6DN,IAAI,CAACO,IAAL,IAAaP,IAAI,CAACQ,SAAlB,IAA+BR,IAAI,CAACS,IAApC,IAA4CT,IAAI,CAACU,GAA9G,CAAP;AACD,CAnBD;;AAqBA,MAAMC,OAAO,GAAG,CAACC,IAAD,EAAOZ,IAAP,KAAgB;AAC9B,QAAMa,OAAO,GAAGd,SAAS,CAACC,IAAD,CAAzB;;AACAY,EAAAA,IAAI,CAACE,MAAL,CAAYC,IAAZ,CAAiBF,OAAjB;;AACAD,EAAAA,IAAI,CAACE,MAAL,GAAclB,SAAS,CAACgB,IAAI,CAACE,MAAN,CAAvB;AACD,CAJD;;AAMAE,MAAM,CAACC,OAAP,GAAiBN,OAAjB","sourcesContent":["'use strict'\n\nconst sortLinks = require('./sortLinks')\nconst DAGLink = require('../dag-link')\n\nconst asDAGLink = (link) => {\n  if (DAGLink.isDAGLink(link)) {\n    // It's a DAGLink instance\n    // no need to do anything\n    return link\n  }\n\n  // DAGNode.isDagNode() would be more appropriate here, but it can't be used\n  // as it would lead to circular dependencies as `addLink` is called from\n  // within the DAGNode object.\n  if (!('cid' in link ||\n        'hash' in link ||\n        'Hash' in link ||\n        'multihash' in link)) {\n    throw new Error('Link must be a DAGLink or DAGLink-like. Convert the DAGNode into a DAGLink via `node.toDAGLink()`.')\n  }\n\n  // It's a Object with name, multihash/hash/cid and size\n  return new DAGLink(link.Name || link.name, link.Tsize || link.size, link.Hash || link.multihash || link.hash || link.cid)\n}\n\nconst addLink = (node, link) => {\n  const dagLink = asDAGLink(link)\n  node._links.push(dagLink)\n  node._links = sortLinks(node._links)\n}\n\nmodule.exports = addLink\n"]},"metadata":{},"sourceType":"script"}